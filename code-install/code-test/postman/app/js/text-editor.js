(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{"../../node_modules/vscode-oniguruma/release/main.js":function(n,r,e){n.exports=function(n){var r={};function e(t){if(r[t])return r[t].exports;var i=r[t]={i:t,l:!1,exports:{}};return n[t].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=n,e.c=r,e.d=function(n,r,t){e.o(n,r)||Object.defineProperty(n,r,{enumerable:!0,get:t})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,r){if(1&r&&(n=e(n)),8&r)return n;if(4&r&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&r&&"string"!=typeof n)for(var i in n)e.d(t,i,function(r){return n[r]}.bind(null,i));return t},e.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(r,"a",r),r},e.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},e.p="",e(e.s=0)}([function(n,r,e){"use strict";var t=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(r,"__esModule",{value:!0});const i=t(e(1));let s=null,a=!1;class o{constructor(n){const r=n.length,e=o._utf8ByteLength(n),t=e!==r,i=t?new Uint32Array(r+1):null;t&&(i[r]=e);const s=t?new Uint32Array(e+1):null;t&&(s[e]=r);const a=new Uint8Array(e);let c=0;for(let e=0;e<r;e++){const o=n.charCodeAt(e);let d=o,y=!1;if(o>=55296&&o<=56319&&e+1<r){const r=n.charCodeAt(e+1);r>=56320&&r<=57343&&(d=65536+(o-55296<<10)|r-56320,y=!0)}t&&(i[e]=c,y&&(i[e+1]=c),d<=127?s[c+0]=e:d<=2047?(s[c+0]=e,s[c+1]=e):d<=65535?(s[c+0]=e,s[c+1]=e,s[c+2]=e):(s[c+0]=e,s[c+1]=e,s[c+2]=e,s[c+3]=e)),d<=127?a[c++]=d:d<=2047?(a[c++]=192|(1984&d)>>>6,a[c++]=128|(63&d)>>>0):d<=65535?(a[c++]=224|(61440&d)>>>12,a[c++]=128|(4032&d)>>>6,a[c++]=128|(63&d)>>>0):(a[c++]=240|(1835008&d)>>>18,a[c++]=128|(258048&d)>>>12,a[c++]=128|(4032&d)>>>6,a[c++]=128|(63&d)>>>0),y&&e++}this.utf16Length=r,this.utf8Length=e,this.utf16Value=n,this.utf8Value=a,this.utf16OffsetToUtf8=i,this.utf8OffsetToUtf16=s}static _utf8ByteLength(n){let r=0;for(let e=0,t=n.length;e<t;e++){const i=n.charCodeAt(e);let s=i,a=!1;if(i>=55296&&i<=56319&&e+1<t){const r=n.charCodeAt(e+1);r>=56320&&r<=57343&&(s=65536+(i-55296<<10)|r-56320,a=!0)}r+=s<=127?1:s<=2047?2:s<=65535?3:4,a&&e++}return r}createString(n){const r=n._malloc(this.utf8Length);return n.HEAPU8.set(this.utf8Value,r),r}}class c{constructor(n){if(this.id=++c.LAST_ID,!s)throw new Error("Must invoke loadWASM first.");this._onigBinding=s,this.content=n;const r=new o(n);this.utf16Length=r.utf16Length,this.utf8Length=r.utf8Length,this.utf16OffsetToUtf8=r.utf16OffsetToUtf8,this.utf8OffsetToUtf16=r.utf8OffsetToUtf16,this.utf8Length<1e4&&!c._sharedPtrInUse?(c._sharedPtr||(c._sharedPtr=s._malloc(1e4)),c._sharedPtrInUse=!0,s.HEAPU8.set(r.utf8Value,c._sharedPtr),this.ptr=c._sharedPtr):this.ptr=r.createString(s)}convertUtf8OffsetToUtf16(n){return this.utf8OffsetToUtf16?n<0?0:n>this.utf8Length?this.utf16Length:this.utf8OffsetToUtf16[n]:n}convertUtf16OffsetToUtf8(n){return this.utf16OffsetToUtf8?n<0?0:n>this.utf16Length?this.utf8Length:this.utf16OffsetToUtf8[n]:n}dispose(){this.ptr===c._sharedPtr?c._sharedPtrInUse=!1:this._onigBinding._free(this.ptr)}}r.OnigString=c,c.LAST_ID=0,c._sharedPtr=0,c._sharedPtrInUse=!1;class d{constructor(n){if(!s)throw new Error("Must invoke loadWASM first.");const r=[],e=[];for(let t=0,i=n.length;t<i;t++){const i=new o(n[t]);r[t]=i.createString(s),e[t]=i.utf8Length}const t=s._malloc(4*n.length);s.HEAPU32.set(r,t/4);const i=s._malloc(4*n.length);s.HEAPU32.set(e,i/4);const a=s._createOnigScanner(t,i,n.length);for(let e=0,t=n.length;e<t;e++)s._free(r[e]);s._free(i),s._free(t),0===a&&function(n){throw new Error(n.UTF8ToString(n._getLastOnigError()))}(s),this._onigBinding=s,this._ptr=a}dispose(){this._onigBinding._freeOnigScanner(this._ptr)}findNextMatchSync(n,r,e=a){if("string"==typeof n){n=new c(n);const t=this._findNextMatchSync(n,r,e);return n.dispose(),t}return this._findNextMatchSync(n,r,e)}_findNextMatchSync(n,r,e){const t=this._onigBinding;let i;if(i=e?t._findNextOnigScannerMatchDbg(this._ptr,n.id,n.ptr,n.utf8Length,n.convertUtf16OffsetToUtf8(r)):t._findNextOnigScannerMatch(this._ptr,n.id,n.ptr,n.utf8Length,n.convertUtf16OffsetToUtf8(r)),0===i)return null;const s=t.HEAPU32;let a=i/4;const o=s[a++],c=s[a++];let d=[];for(let r=0;r<c;r++){const e=n.convertUtf8OffsetToUtf16(s[a++]),t=n.convertUtf8OffsetToUtf16(s[a++]);d[r]={start:e,end:t,length:t-e}}return{index:o,captureIndices:d}}}r.OnigScanner=d;let y=!1;r.loadWASM=function(n){if(y)throw new Error("Cannot invoke loadWASM more than once.");let r,e,t,a;y=!0,n instanceof ArrayBuffer||n instanceof Response?r=n:(r=n.data,e=n.print);const o=new Promise(((n,r)=>{t=n,a=r}));let c;return c=r instanceof ArrayBuffer?function(n){return r=>WebAssembly.instantiate(n,r)}(r):r instanceof Response&&"function"==typeof WebAssembly.instantiateStreaming?function(n){return r=>WebAssembly.instantiateStreaming(n,r)}(r):function(n){return async r=>{const e=await n.arrayBuffer();return WebAssembly.instantiate(e,r)}}(r),function(n,r,e,t){i.default({print:r,instantiateWasm:(r,e)=>{if("undefined"==typeof performance){const n=()=>Date.now();r.env.emscripten_get_now=n,r.wasi_snapshot_preview1.emscripten_get_now=n}return n(r).then((n=>e(n.instance)),t),{}}}).then((n=>{s=n,e()}))}(c,e,t,a),o},r.createOnigString=function(n){return new c(n)},r.createOnigScanner=function(n){return new d(n)},r.setDefaultDebugCall=function(n){a=n}},function(n,r,e){var t=("undefined"!=typeof document&&document.currentScript&&document.currentScript.src,function(n){var r,e=void 0!==(n=n||{})?n:{},t={};for(r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);var i,s=[],a=!1,o=!1,c="";function d(n){return e.locateFile?e.locateFile(n,c):c+n}i=function(n){var r;return"function"==typeof readbuffer?new Uint8Array(readbuffer(n)):(h("object"==typeof(r=read(n,"binary"))),r)},"undefined"!=typeof scriptArgs?s=scriptArgs:void 0!==arguments&&(s=arguments),"undefined"!=typeof onig_print&&("undefined"==typeof console&&(console={}),console.log=onig_print,console.warn=console.error="undefined"!=typeof printErr?printErr:onig_print);var y=e.print||console.log.bind(console),k=e.printErr||console.warn.bind(console);for(r in t)t.hasOwnProperty(r)&&(e[r]=t[r]);t=null,e.arguments&&(s=e.arguments),e.thisProgram&&e.thisProgram,e.quit&&e.quit;var g,l,u=function(n){};e.wasmBinary&&(g=e.wasmBinary),e.noExitRuntime&&e.noExitRuntime,"object"!=typeof WebAssembly&&k("no native wasm support detected");var p=new WebAssembly.Table({initial:51,maximum:51,element:"anyfunc"}),m=!1;function h(n,r){n||U("Assertion failed: "+r)}var f="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function b(n,r,e){for(var t=r+e,i=r;n[i]&&!(i>=t);)++i;if(i-r>16&&n.subarray&&f)return f.decode(n.subarray(r,i));for(var s="";r<i;){var a=n[r++];if(128&a){var o=63&n[r++];if(192!=(224&a)){var c=63&n[r++];if((a=224==(240&a)?(15&a)<<12|o<<6|c:(7&a)<<18|o<<12|c<<6|63&n[r++])<65536)s+=String.fromCharCode(a);else{var d=a-65536;s+=String.fromCharCode(55296|d>>10,56320|1023&d)}}else s+=String.fromCharCode((31&a)<<6|o)}else s+=String.fromCharCode(a)}return s}function _(n,r){return n?b(v,n,r):""}"undefined"!=typeof TextDecoder&&new TextDecoder("utf-16le");var x,v,w,S=65536;function E(n,r){return n%r>0&&(n+=r-n%r),n}function C(n){x=n,e.HEAP8=new Int8Array(n),e.HEAP16=new Int16Array(n),e.HEAP32=w=new Int32Array(n),e.HEAPU8=v=new Uint8Array(n),e.HEAPU16=new Uint16Array(n),e.HEAPU32=new Uint32Array(n),e.HEAPF32=new Float32Array(n),e.HEAPF64=new Float64Array(n)}var $=5547200,T=304160,A=e.INITIAL_MEMORY||16777216;function D(n){for(;n.length>0;){var r=n.shift();if("function"!=typeof r){var t=r.func;"number"==typeof t?void 0===r.arg?e.dynCall_v(t):e.dynCall_vi(t,r.arg):t(void 0===r.arg?null:r.arg)}else r(e)}}(l=e.wasmMemory?e.wasmMemory:new WebAssembly.Memory({initial:A/S,maximum:2147483648/S}))&&(x=l.buffer),A=x.byteLength,C(x),w[T>>2]=$;var M=[],L=[],P=[],I=[];function R(){if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)F(e.preRun.shift());D(M)}function j(){D(L)}function O(){D(P)}function N(){if(e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;)B(e.postRun.shift());D(I)}function F(n){M.unshift(n)}function B(n){I.unshift(n)}Math.abs,Math.ceil,Math.floor,Math.min;var G=0,W=null,V=null;function H(n){G++,e.monitorRunDependencies&&e.monitorRunDependencies(G)}function z(n){if(G--,e.monitorRunDependencies&&e.monitorRunDependencies(G),0==G&&(null!==W&&(clearInterval(W),W=null),V)){var r=V;V=null,r()}}function U(n){throw e.onAbort&&e.onAbort(n),y(n+=""),k(n),m=!0,n="abort("+n+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(n)}e.preloadedImages={},e.preloadedAudios={};var q="data:application/octet-stream;base64,";function Z(n){return String.prototype.startsWith?n.startsWith(q):0===n.indexOf(q)}var K,X="onig.wasm";function Y(){try{if(g)return new Uint8Array(g);if(i)return i(X);throw"both async and sync fetching of the wasm failed"}catch(n){U(n)}}function Q(){return g||!a&&!o||"function"!=typeof fetch?new Promise((function(n,r){n(Y())})):fetch(X,{credentials:"same-origin"}).then((function(n){if(!n.ok)throw"failed to load wasm binary file at '"+X+"'";return n.arrayBuffer()})).catch((function(){return Y()}))}function J(){var n={env:dn,wasi_snapshot_preview1:dn};function r(n,r){var t=n.exports;e.asm=t,z()}function t(n){r(n.instance)}function i(r){return Q().then((function(r){return WebAssembly.instantiate(r,n)})).then(r,(function(n){k("failed to asynchronously prepare wasm: "+n),U(n)}))}if(H(),e.instantiateWasm)try{return e.instantiateWasm(n,r)}catch(n){return k("Module.instantiateWasm callback failed with error: "+n),!1}return function(){if(g||"function"!=typeof WebAssembly.instantiateStreaming||Z(X)||"function"!=typeof fetch)return i(t);fetch(X,{credentials:"same-origin"}).then((function(r){return WebAssembly.instantiateStreaming(r,n).then(t,(function(n){k("wasm streaming compile failed: "+n),k("falling back to ArrayBuffer instantiation"),i(t)}))}))}(),{}}function nn(){return 304160}function rn(n,r,e){v.copyWithin(n,r,r+e)}function en(){return v.length}function tn(n){try{return l.grow(n-x.byteLength+65535>>>16),C(l.buffer),1}catch(n){}}function sn(n){var r=en();if(n>2147483648)return!1;for(var e=1;e<=4;e*=2){var t=r*(1+.2/e);if(t=Math.min(t,n+100663296),tn(Math.min(2147483648,E(Math.max(16777216,n,t),65536))))return!0}return!1}Z(X)||(X=d(X)),L.push({func:function(){gn()}}),K="undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var an={mappings:{},buffers:[null,[],[]],printChar:function(n,r){var e=an.buffers[n];0===r||10===r?((1===n?y:k)(b(e,0)),e.length=0):e.push(r)},varargs:void 0,get:function(){return an.varargs+=4,w[an.varargs-4>>2]},getStr:function(n){return _(n)},get64:function(n,r){return n}};function on(n,r,e,t){for(var i=0,s=0;s<e;s++){for(var a=w[r+8*s>>2],o=w[r+(8*s+4)>>2],c=0;c<o;c++)an.printChar(n,v[a+c]);i+=o}return w[t>>2]=i,0}function cn(n){u(0|n)}var dn={emscripten_get_now:K,emscripten_get_sbrk_ptr:nn,emscripten_memcpy_big:rn,emscripten_resize_heap:sn,fd_write:on,memory:l,setTempRet0:cn,table:p},yn=J();e.asm=yn;var kn,gn=e.___wasm_call_ctors=function(){return(gn=e.___wasm_call_ctors=e.asm.__wasm_call_ctors).apply(null,arguments)};function ln(n){function r(){kn||(kn=!0,e.calledRun=!0,m||(j(),O(),e.onRuntimeInitialized&&e.onRuntimeInitialized(),N()))}n=n||s,G>0||(R(),G>0||(e.setStatus?(e.setStatus("Running..."),setTimeout((function(){setTimeout((function(){e.setStatus("")}),1),r()}),1)):r()))}if(e._malloc=function(){return(e._malloc=e.asm.malloc).apply(null,arguments)},e._free=function(){return(e._free=e.asm.free).apply(null,arguments)},e._getLastOnigError=function(){return(e._getLastOnigError=e.asm.getLastOnigError).apply(null,arguments)},e._createOnigScanner=function(){return(e._createOnigScanner=e.asm.createOnigScanner).apply(null,arguments)},e._freeOnigScanner=function(){return(e._freeOnigScanner=e.asm.freeOnigScanner).apply(null,arguments)},e._findNextOnigScannerMatch=function(){return(e._findNextOnigScannerMatch=e.asm.findNextOnigScannerMatch).apply(null,arguments)},e._findNextOnigScannerMatchDbg=function(){return(e._findNextOnigScannerMatchDbg=e.asm.findNextOnigScannerMatchDbg).apply(null,arguments)},e.stackSave=function(){return(e.stackSave=e.asm.stackSave).apply(null,arguments)},e.stackAlloc=function(){return(e.stackAlloc=e.asm.stackAlloc).apply(null,arguments)},e.stackRestore=function(){return(e.stackRestore=e.asm.stackRestore).apply(null,arguments)},e.__growWasmMemory=function(){return(e.__growWasmMemory=e.asm.__growWasmMemory).apply(null,arguments)},e.dynCall_vi=function(){return(e.dynCall_vi=e.asm.dynCall_vi).apply(null,arguments)},e.dynCall_iiii=function(){return(e.dynCall_iiii=e.asm.dynCall_iiii).apply(null,arguments)},e.dynCall_iiiii=function(){return(e.dynCall_iiiii=e.asm.dynCall_iiiii).apply(null,arguments)},e.dynCall_iii=function(){return(e.dynCall_iii=e.asm.dynCall_iii).apply(null,arguments)},e.dynCall_iidiiii=function(){return(e.dynCall_iidiiii=e.asm.dynCall_iidiiii).apply(null,arguments)},e.dynCall_vii=function(){return(e.dynCall_vii=e.asm.dynCall_vii).apply(null,arguments)},e.dynCall_ii=function(){return(e.dynCall_ii=e.asm.dynCall_ii).apply(null,arguments)},e.dynCall_i=function(){return(e.dynCall_i=e.asm.dynCall_i).apply(null,arguments)},e.dynCall_jiji=function(){return(e.dynCall_jiji=e.asm.dynCall_jiji).apply(null,arguments)},e.asm=yn,e.UTF8ToString=_,e.then=function(n){if(kn)n(e);else{var r=e.onRuntimeInitialized;e.onRuntimeInitialized=function(){r&&r(),n(e)}}return e},V=function n(){kn||ln(),kn||(V=n)},e.run=ln,e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();return ln(),n});n.exports=t}])},"../../node_modules/vscode-textmate/release/main.js":function(n,r,e){n.exports=function(n){var r={};function e(t){if(r[t])return r[t].exports;var i=r[t]={i:t,l:!1,exports:{}};return n[t].call(i.exports,i,i.exports,e),i.l=!0,i.exports}return e.m=n,e.c=r,e.d=function(n,r,t){e.o(n,r)||Object.defineProperty(n,r,{enumerable:!0,get:t})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,r){if(1&r&&(n=e(n)),8&r)return n;if(4&r&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&r&&"string"!=typeof n)for(var i in n)e.d(t,i,function(r){return n[r]}.bind(null,i));return t},e.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(r,"a",r),r},e.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},e.p="",e(e.s=3)}([function(n,r,e){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var t=e(1),i=e(5),s=e(6),a=e(2),o="undefined"==typeof performance?function(){return Date.now()}:function(){return performance.now()};r.createGrammar=function(n,r,e,t,i,s){return new b(n,r,e,t,i,s)};var c=function(n){this.scopeName=n};r.FullScopeDependency=c;var d=function(){function n(n,r){this.scopeName=n,this.include=r}return n.prototype.toKey=function(){return this.scopeName+"#"+this.include},n}();r.PartialScopeDependency=d;var y=function(){function n(){this.full=[],this.partial=[],this.visitedRule=new Set,this._seenFull=new Set,this._seenPartial=new Set}return n.prototype.add=function(n){n instanceof c?this._seenFull.has(n.scopeName)||(this._seenFull.add(n.scopeName),this.full.push(n)):this._seenPartial.has(n.toKey())||(this._seenPartial.add(n.toKey()),this.partial.push(n))},n}();function k(n,r,e,i,s){for(var a=0,o=i;a<o.length;a++){var y=o[a];if(!n.visitedRule.has(y)){n.visitedRule.add(y);var u=y.repository?t.mergeObjects({},s,y.repository):s;Array.isArray(y.patterns)&&k(n,r,e,y.patterns,u);var p=y.include;if(p)if("$base"===p||p===r.scopeName)l(n,r,r);else if("$self"===p||p===e.scopeName)l(n,r,e);else if("#"===p.charAt(0))g(n,r,e,p.substring(1),u);else{var m=p.indexOf("#");if(m>=0){var h=p.substring(0,m),f=p.substring(m+1);h===r.scopeName?g(n,r,r,f,u):h===e.scopeName?g(n,r,e,f,u):n.add(new d(h,p.substring(m+1)))}else n.add(new c(p))}}}}function g(n,r,e,t,i){void 0===i&&(i=e.repository),i&&i[t]&&k(n,r,e,[i[t]],i)}function l(n,r,e){if(e.patterns&&Array.isArray(e.patterns)&&k(n,r,e,e.patterns,e.repository),e.injections){var t=[];for(var i in e.injections)t.push(e.injections[i]);k(n,r,e,t,e.repository)}}function u(n,r){if(!n)return!1;if(n===r)return!0;var e=r.length;return n.length>e&&n.substr(0,e)===r&&"."===n[e]}function p(n,r){if(r.length<n.length)return!1;var e=0;return n.every((function(n){for(var t=e;t<r.length;t++)if(u(r[t],n))return e=t+1,!0;return!1}))}function m(n,r,e,t,a){for(var o=s.createMatchers(r,p),c=i.RuleFactory.getCompiledRuleId(e,t,a.repository),d=0,y=o;d<y.length;d++){var k=y[d];n.push({matcher:k.matcher,ruleId:c,grammar:a,priority:k.priority})}}r.ScopeDependencyCollector=y,r.collectSpecificDependencies=g,r.collectDependencies=l;var h=function(n,r,e,t){this.scopeName=n,this.languageId=r,this.tokenType=e,this.themeData=t};r.ScopeMetadata=h;var f=function(){function n(r,e,t){if(this._initialLanguage=r,this._themeProvider=e,this._cache=new Map,this._defaultMetaData=new h("",this._initialLanguage,0,[this._themeProvider.getDefaults()]),this._embeddedLanguages=Object.create(null),t)for(var i=Object.keys(t),s=0,a=i.length;s<a;s++){var o=i[s],c=t[o];"number"==typeof c&&0!==c?this._embeddedLanguages[o]=c:console.warn("Invalid embedded language found at scope "+o+": <<"+c+">>")}var d=Object.keys(this._embeddedLanguages).map((function(r){return n._escapeRegExpCharacters(r)}));0===d.length?this._embeddedLanguagesRegex=null:(d.sort(),d.reverse(),this._embeddedLanguagesRegex=new RegExp("^(("+d.join(")|(")+"))($|\\.)",""))}return n.prototype.onDidChangeTheme=function(){this._cache=new Map,this._defaultMetaData=new h("",this._initialLanguage,0,[this._themeProvider.getDefaults()])},n.prototype.getDefaultMetadata=function(){return this._defaultMetaData},n._escapeRegExpCharacters=function(n){return n.replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g,"\\$&")},n.prototype.getMetadataForScope=function(r){if(null===r)return n._NULL_SCOPE_METADATA;var e=this._cache.get(r);return e||(e=this._doGetMetadataForScope(r),this._cache.set(r,e),e)},n.prototype._doGetMetadataForScope=function(n){var r=this._scopeToLanguage(n),e=this._toStandardTokenType(n),t=this._themeProvider.themeMatch(n);return new h(n,r,e,t)},n.prototype._scopeToLanguage=function(n){if(!n)return 0;if(!this._embeddedLanguagesRegex)return 0;var r=n.match(this._embeddedLanguagesRegex);return r&&(this._embeddedLanguages[r[1]]||0)||0},n.prototype._toStandardTokenType=function(r){var e=r.match(n.STANDARD_TOKEN_TYPE_REGEXP);if(!e)return 0;switch(e[1]){case"comment":return 1;case"string":return 2;case"regex":return 4;case"meta.embedded":return 8}throw new Error("Unexpected match for standard token type!")},n._NULL_SCOPE_METADATA=new h("",0,0,null),n.STANDARD_TOKEN_TYPE_REGEXP=/\b(comment|string|regex|meta\.embedded)\b/,n}(),b=function(){function n(n,r,e,t,i,a){if(this._scopeMetadataProvider=new f(r,i,e),this._onigLib=a,this._rootId=-1,this._lastRuleId=0,this._ruleId2desc=[null],this._includedGrammars={},this._grammarRepository=i,this._grammar=x(n,null),this._injections=null,this._tokenTypeMatchers=[],t)for(var o=0,c=Object.keys(t);o<c.length;o++)for(var d=c[o],y=0,k=s.createMatchers(d,p);y<k.length;y++){var g=k[y];this._tokenTypeMatchers.push({matcher:g.matcher,type:t[d]})}}return n.prototype.dispose=function(){for(var n=0,r=this._ruleId2desc;n<r.length;n++){var e=r[n];e&&e.dispose()}},n.prototype.createOnigScanner=function(n){return this._onigLib.createOnigScanner(n)},n.prototype.createOnigString=function(n){return this._onigLib.createOnigString(n)},n.prototype.onDidChangeTheme=function(){this._scopeMetadataProvider.onDidChangeTheme()},n.prototype.getMetadataForScope=function(n){return this._scopeMetadataProvider.getMetadataForScope(n)},n.prototype.getInjections=function(){var n=this;if(null===this._injections){this._injections=[];var r=this._grammar.injections;if(r)for(var e in r)m(this._injections,e,r[e],this,this._grammar);if(this._grammarRepository){var t=this._grammarRepository.injections(this._grammar.scopeName);t&&t.forEach((function(r){var e=n.getExternalGrammar(r);if(e){var t=e.injectionSelector;t&&m(n._injections,t,e,n,e)}}))}this._injections.sort((function(n,r){return n.priority-r.priority}))}return this._injections},n.prototype.registerRule=function(n){var r=++this._lastRuleId,e=n(r);return this._ruleId2desc[r]=e,e},n.prototype.getRule=function(n){return this._ruleId2desc[n]},n.prototype.getExternalGrammar=function(n,r){if(this._includedGrammars[n])return this._includedGrammars[n];if(this._grammarRepository){var e=this._grammarRepository.lookup(n);if(e)return this._includedGrammars[n]=x(e,r&&r.$base),this._includedGrammars[n]}return null},n.prototype.tokenizeLine=function(n,r){var e=this._tokenize(n,r,!1);return{tokens:e.lineTokens.getResult(e.ruleStack,e.lineLength),ruleStack:e.ruleStack}},n.prototype.tokenizeLine2=function(n,r){var e=this._tokenize(n,r,!0);return{tokens:e.lineTokens.getBinaryResult(e.ruleStack,e.lineLength),ruleStack:e.ruleStack}},n.prototype._tokenize=function(n,r,e){var t;if(-1===this._rootId&&(this._rootId=i.RuleFactory.getCompiledRuleId(this._grammar.repository.$self,this,this._grammar.repository)),r&&r!==T.NULL)t=!1,r.reset();else{t=!0;var s=this._scopeMetadataProvider.getDefaultMetadata(),a=s.themeData[0],o=C.set(0,s.languageId,s.tokenType,a.fontStyle,a.foreground,a.background),c=this.getRule(this._rootId).getName(null,null),d=this._scopeMetadataProvider.getMetadataForScope(c),y=$.mergeMetadata(o,null,d),k=new $(null,null===c?"unknown":c,y);r=new T(null,this._rootId,-1,-1,!1,null,k,k)}n+="\n";var g=this.createOnigString(n),l=g.content.length,u=new D(e,n,this._tokenTypeMatchers),p=E(this,g,t,0,r,u,!0);return _(g),{lineLength:l,lineTokens:u,ruleStack:p}},n}();function _(n){"function"==typeof n.dispose&&n.dispose()}function x(n,r){return(n=t.clone(n)).repository=n.repository||{},n.repository.$self={$vscodeTextmateLocation:n.$vscodeTextmateLocation,patterns:n.patterns,name:n.scopeName},n.repository.$base=r||n.repository.$self,n}function v(n,r,e,t,i,s,a){if(0!==s.length){for(var o=r.content,c=Math.min(s.length,a.length),d=[],y=a[0].end,k=0;k<c;k++){var g=s[k];if(null!==g){var l=a[k];if(0!==l.length){if(l.start>y)break;for(;d.length>0&&d[d.length-1].endPos<=l.start;)i.produceFromScopes(d[d.length-1].scopes,d[d.length-1].endPos),d.pop();if(d.length>0?i.produceFromScopes(d[d.length-1].scopes,l.start):i.produce(t,l.start),g.retokenizeCapturedWithRuleId){var u=g.getName(o,a),p=t.contentNameScopesList.push(n,u),m=g.getContentName(o,a),h=p.push(n,m),f=t.push(g.retokenizeCapturedWithRuleId,l.start,-1,!1,null,p,h),b=n.createOnigString(o.substring(0,l.end));E(n,b,e&&0===l.start,l.start,f,i,!1),_(b)}else{var x=g.getName(o,a);if(null!==x){var v=(d.length>0?d[d.length-1].scopes:t.contentNameScopesList).push(n,x);d.push(new A(v,l.end))}}}}}for(;d.length>0;)i.produceFromScopes(d[d.length-1].scopes,d[d.length-1].endPos),d.pop()}}function w(n){for(var r=[],e=0,t=n.rules.length;e<t;e++)r.push("   - "+n.rules[e]+": "+n.debugRegExps[e]);return r.join("\n")}function S(n,r,e,t,i,s){var c=function(n,r,e,t,i,s){var c=i.getRule(n),d=c.compile(n,i.endRule,e,t===s),y=0;a.DebugFlags.InDebugMode&&(y=o());var k=d.scanner.findNextMatchSync(r,t);if(a.DebugFlags.InDebugMode){var g=o()-y;g>5&&console.warn("Rule "+c.debugName+" ("+c.id+") matching took "+g+" against '"+r+"'"),k&&console.log("matched rule id: "+d.rules[k.index]+" from "+k.captureIndices[0].start+" to "+k.captureIndices[0].end)}return k?{captureIndices:k.captureIndices,matchedRuleId:d.rules[k.index]}:null}(n,r,e,t,i,s),d=n.getInjections();if(0===d.length)return c;var y=function(n,r,e,t,i,s,o){for(var c,d=Number.MAX_VALUE,y=null,k=0,g=s.contentNameScopesList.generateScopes(),l=0,u=n.length;l<u;l++){var p=n[l];if(p.matcher(g)){var m=r.getRule(p.ruleId).compile(r,null,t,i===o),h=m.scanner.findNextMatchSync(e,i);if(a.DebugFlags.InDebugMode&&(console.log("  scanning for injections"),console.log(w(m))),h){var f=h.captureIndices[0].start;if(!(f>=d)&&(d=f,y=h.captureIndices,c=m.rules[h.index],k=p.priority,d===i))break}}}return y?{priorityMatch:-1===k,captureIndices:y,matchedRuleId:c}:null}(d,n,r,e,t,i,s);if(!y)return c;if(!c)return y;var k=c.captureIndices[0].start,g=y.captureIndices[0].start;return g<k||y.priorityMatch&&g===k?y:c}function E(n,r,e,t,s,o,c){var d=r.content.length,y=!1,k=-1;if(c){var g=function(n,r,e,t,s,o){for(var c=s.beginRuleCapturedEOL?0:-1,d=[],y=s;y;y=y.pop()){var k=y.getRule(n);k instanceof i.BeginWhileRule&&d.push({rule:k,stack:y})}for(var g=d.pop();g;g=d.pop()){var l=g.rule.compileWhile(n,g.stack.endRule,e,c===t),u=l.scanner.findNextMatchSync(r,t);if(a.DebugFlags.InDebugMode&&(console.log("  scanning for while rule"),console.log(w(l))),!u){a.DebugFlags.InDebugMode&&console.log("  popping "+g.rule.debugName+" - "+g.rule.debugWhileRegExp),s=g.stack.pop();break}if(-2!==l.rules[u.index]){s=g.stack.pop();break}u.captureIndices&&u.captureIndices.length&&(o.produce(g.stack,u.captureIndices[0].start),v(n,r,e,g.stack,o,g.rule.whileCaptures,u.captureIndices),o.produce(g.stack,u.captureIndices[0].end),c=u.captureIndices[0].end,u.captureIndices[0].end>t&&(t=u.captureIndices[0].end,e=!1))}return{stack:s,linePos:t,anchorPosition:c,isFirstLine:e}}(n,r,e,t,s,o);s=g.stack,t=g.linePos,e=g.isFirstLine,k=g.anchorPosition}for(;!y;)l();function l(){a.DebugFlags.InDebugMode&&(console.log(""),console.log("@@scanNext "+t+": |"+r.content.substr(t).replace(/\n$/,"\\n")+"|"));var c=S(n,r,e,t,s,k);if(!c)return a.DebugFlags.InDebugMode&&console.log("  no more matches."),o.produce(s,d),void(y=!0);var g=c.captureIndices,l=c.matchedRuleId,u=!!(g&&g.length>0)&&g[0].end>t;if(-1===l){var p=s.getRule(n);a.DebugFlags.InDebugMode&&console.log("  popping "+p.debugName+" - "+p.debugEndRegExp),o.produce(s,g[0].start),s=s.setContentNameScopesList(s.nameScopesList),v(n,r,e,s,o,p.endCaptures,g),o.produce(s,g[0].end);var m=s;if(s=s.pop(),k=m.getAnchorPos(),!u&&m.getEnterPos()===t)return a.DebugFlags.InDebugMode&&console.error("[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing"),s=m,o.produce(s,d),void(y=!0)}else{var h=n.getRule(l);o.produce(s,g[0].start);var f=s,b=h.getName(r.content,g),_=s.contentNameScopesList.push(n,b);if(s=s.push(l,t,k,g[0].end===d,null,_,_),h instanceof i.BeginEndRule){var x=h;a.DebugFlags.InDebugMode&&console.log("  pushing "+x.debugName+" - "+x.debugBeginRegExp),v(n,r,e,s,o,x.beginCaptures,g),o.produce(s,g[0].end),k=g[0].end;var w=x.getContentName(r.content,g),E=_.push(n,w);if(s=s.setContentNameScopesList(E),x.endHasBackReferences&&(s=s.setEndRule(x.getEndWithResolvedBackReferences(r.content,g))),!u&&f.hasSameRuleAs(s))return a.DebugFlags.InDebugMode&&console.error("[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"),s=s.pop(),o.produce(s,d),void(y=!0)}else if(h instanceof i.BeginWhileRule){if(x=h,a.DebugFlags.InDebugMode&&console.log("  pushing "+x.debugName),v(n,r,e,s,o,x.beginCaptures,g),o.produce(s,g[0].end),k=g[0].end,w=x.getContentName(r.content,g),E=_.push(n,w),s=s.setContentNameScopesList(E),x.whileHasBackReferences&&(s=s.setEndRule(x.getWhileWithResolvedBackReferences(r.content,g))),!u&&f.hasSameRuleAs(s))return a.DebugFlags.InDebugMode&&console.error("[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing"),s=s.pop(),o.produce(s,d),void(y=!0)}else{var C=h;if(a.DebugFlags.InDebugMode&&console.log("  matched "+C.debugName+" - "+C.debugMatchRegExp),v(n,r,e,s,o,C.captures,g),o.produce(s,g[0].end),s=s.pop(),!u)return a.DebugFlags.InDebugMode&&console.error("[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping"),s=s.safePop(),o.produce(s,d),void(y=!0)}}g[0].end>t&&(t=g[0].end,e=!1)}return s}r.Grammar=b;var C=function(){function n(){}return n.toBinaryStr=function(n){for(var r=n.toString(2);r.length<32;)r="0"+r;return r},n.printMetadata=function(r){var e=n.getLanguageId(r),t=n.getTokenType(r),i=n.getFontStyle(r),s=n.getForeground(r),a=n.getBackground(r);console.log({languageId:e,tokenType:t,fontStyle:i,foreground:s,background:a})},n.getLanguageId=function(n){return(255&n)>>>0},n.getTokenType=function(n){return(1792&n)>>>8},n.getFontStyle=function(n){return(14336&n)>>>11},n.getForeground=function(n){return(8372224&n)>>>14},n.getBackground=function(n){return(4286578688&n)>>>23},n.set=function(r,e,t,i,s,a){var o=n.getLanguageId(r),c=n.getTokenType(r),d=n.getFontStyle(r),y=n.getForeground(r),k=n.getBackground(r);return 0!==e&&(o=e),0!==t&&(c=8===t?0:t),-1!==i&&(d=i),0!==s&&(y=s),0!==a&&(k=a),(o<<0|c<<8|d<<11|y<<14|k<<23)>>>0},n}();r.StackElementMetadata=C;var $=function(){function n(n,r,e){this.parent=n,this.scope=r,this.metadata=e}return n._equals=function(n,r){for(;;){if(n===r)return!0;if(!n&&!r)return!0;if(!n||!r)return!1;if(n.scope!==r.scope||n.metadata!==r.metadata)return!1;n=n.parent,r=r.parent}},n.prototype.equals=function(r){return n._equals(this,r)},n._matchesScope=function(n,r,e){return r===n||n.substring(0,e.length)===e},n._matches=function(n,r){if(null===r)return!0;for(var e=r.length,t=0,i=r[t],s=i+".";n;){if(this._matchesScope(n.scope,i,s)){if(++t===e)return!0;s=(i=r[t])+"."}n=n.parent}return!1},n.mergeMetadata=function(n,r,e){if(null===e)return n;var t=-1,i=0,s=0;if(null!==e.themeData)for(var a=0,o=e.themeData.length;a<o;a++){var c=e.themeData[a];if(this._matches(r,c.parentScopes)){t=c.fontStyle,i=c.foreground,s=c.background;break}}return C.set(n,e.languageId,e.tokenType,t,i,s)},n._push=function(r,e,t){for(var i=0,s=t.length;i<s;i++){var a=t[i],o=e.getMetadataForScope(a),c=n.mergeMetadata(r.metadata,r,o);r=new n(r,a,c)}return r},n.prototype.push=function(r,e){return null===e?this:e.indexOf(" ")>=0?n._push(this,r,e.split(/ /g)):n._push(this,r,[e])},n._generateScopes=function(n){for(var r=[],e=0;n;)r[e++]=n.scope,n=n.parent;return r.reverse(),r},n.prototype.generateScopes=function(){return n._generateScopes(this)},n}();r.ScopeListElement=$;var T=function(){function n(n,r,e,t,i,s,a,o){this.parent=n,this.depth=this.parent?this.parent.depth+1:1,this.ruleId=r,this._enterPos=e,this._anchorPos=t,this.beginRuleCapturedEOL=i,this.endRule=s,this.nameScopesList=a,this.contentNameScopesList=o}return n._structuralEquals=function(n,r){for(;;){if(n===r)return!0;if(!n&&!r)return!0;if(!n||!r)return!1;if(n.depth!==r.depth||n.ruleId!==r.ruleId||n.endRule!==r.endRule)return!1;n=n.parent,r=r.parent}},n._equals=function(n,r){return n===r||!!this._structuralEquals(n,r)&&n.contentNameScopesList.equals(r.contentNameScopesList)},n.prototype.clone=function(){return this},n.prototype.equals=function(r){return null!==r&&n._equals(this,r)},n._reset=function(n){for(;n;)n._enterPos=-1,n._anchorPos=-1,n=n.parent},n.prototype.reset=function(){n._reset(this)},n.prototype.pop=function(){return this.parent},n.prototype.safePop=function(){return this.parent?this.parent:this},n.prototype.push=function(r,e,t,i,s,a,o){return new n(this,r,e,t,i,s,a,o)},n.prototype.getEnterPos=function(){return this._enterPos},n.prototype.getAnchorPos=function(){return this._anchorPos},n.prototype.getRule=function(n){return n.getRule(this.ruleId)},n.prototype._writeString=function(n,r){return this.parent&&(r=this.parent._writeString(n,r)),n[r++]="("+this.ruleId+", TODO-"+this.nameScopesList+", TODO-"+this.contentNameScopesList+")",r},n.prototype.toString=function(){var n=[];return this._writeString(n,0),"["+n.join(",")+"]"},n.prototype.setContentNameScopesList=function(n){return this.contentNameScopesList===n?this:this.parent.push(this.ruleId,this._enterPos,this._anchorPos,this.beginRuleCapturedEOL,this.endRule,this.nameScopesList,n)},n.prototype.setEndRule=function(r){return this.endRule===r?this:new n(this.parent,this.ruleId,this._enterPos,this._anchorPos,this.beginRuleCapturedEOL,r,this.nameScopesList,this.contentNameScopesList)},n.prototype.hasSameRuleAs=function(n){return this.ruleId===n.ruleId},n.NULL=new n(null,0,0,0,!1,null,null,null),n}();r.StackElement=T;var A=function(n,r){this.scopes=n,this.endPos=r};r.LocalStackElement=A;var D=function(){function n(n,r,e){this._emitBinaryTokens=n,this._tokenTypeOverrides=e,a.DebugFlags.InDebugMode?this._lineText=r:this._lineText=null,this._tokens=[],this._binaryTokens=[],this._lastTokenEndIndex=0}return n.prototype.produce=function(n,r){this.produceFromScopes(n.contentNameScopesList,r)},n.prototype.produceFromScopes=function(n,r){if(!(this._lastTokenEndIndex>=r)){if(this._emitBinaryTokens){for(var e=n.metadata,t=0,i=this._tokenTypeOverrides;t<i.length;t++){var s=i[t];s.matcher(n.generateScopes())&&(e=C.set(e,0,M(s.type),-1,0,0))}return this._binaryTokens.length>0&&this._binaryTokens[this._binaryTokens.length-1]===e||(this._binaryTokens.push(this._lastTokenEndIndex),this._binaryTokens.push(e)),void(this._lastTokenEndIndex=r)}var o=n.generateScopes();if(a.DebugFlags.InDebugMode){console.log("  token: |"+this._lineText.substring(this._lastTokenEndIndex,r).replace(/\n$/,"\\n")+"|");for(var c=0;c<o.length;c++)console.log("      * "+o[c])}this._tokens.push({startIndex:this._lastTokenEndIndex,endIndex:r,scopes:o}),this._lastTokenEndIndex=r}},n.prototype.getResult=function(n,r){return this._tokens.length>0&&this._tokens[this._tokens.length-1].startIndex===r-1&&this._tokens.pop(),0===this._tokens.length&&(this._lastTokenEndIndex=-1,this.produce(n,r),this._tokens[this._tokens.length-1].startIndex=0),this._tokens},n.prototype.getBinaryResult=function(n,r){this._binaryTokens.length>0&&this._binaryTokens[this._binaryTokens.length-2]===r-1&&(this._binaryTokens.pop(),this._binaryTokens.pop()),0===this._binaryTokens.length&&(this._lastTokenEndIndex=-1,this.produce(n,r),this._binaryTokens[this._binaryTokens.length-2]=0);for(var e=new Uint32Array(this._binaryTokens.length),t=0,i=this._binaryTokens.length;t<i;t++)e[t]=this._binaryTokens[t];return e},n}();function M(n){switch(n){case 4:return 4;case 2:return 2;case 1:return 1;default:return 8}}},function(n,r,e){"use strict";function t(n){return Array.isArray(n)?function(n){for(var r=[],e=0,i=n.length;e<i;e++)r[e]=t(n[e]);return r}(n):"object"==typeof n?function(n){var r={};for(var e in n)r[e]=t(n[e]);return r}(n):n}Object.defineProperty(r,"__esModule",{value:!0}),r.clone=function(n){return t(n)},r.mergeObjects=function(n){for(var r=[],e=1;e<arguments.length;e++)r[e-1]=arguments[e];return r.forEach((function(r){for(var e in r)n[e]=r[e]})),n},r.basename=function n(r){var e=~r.lastIndexOf("/")||~r.lastIndexOf("\\");return 0===e?r:~e==r.length-1?n(r.substring(0,r.length-1)):r.substr(1+~e)};var i=/\$(\d+)|\${(\d+):\/(downcase|upcase)}/,s=function(){function n(){}return n.hasCaptures=function(n){return null!==n&&i.test(n)},n.replaceCaptures=function(n,r,e){return n.replace(i,(function(n,t,i,s){var a=e[parseInt(t||i,10)];if(!a)return n;for(var o=r.substring(a.start,a.end);"."===o[0];)o=o.substring(1);switch(s){case"downcase":return o.toLowerCase();case"upcase":return o.toUpperCase();default:return o}}))},n}();r.RegexSource=s},function(n,r,e){"use strict";(function(n){Object.defineProperty(r,"__esModule",{value:!0}),r.DebugFlags={InDebugMode:void 0!==n&&!!n.env.VSCODE_TEXTMATE_DEBUG}}).call(this,e(7))},function(n,r,e){"use strict";var t=this&&this.__awaiter||function(n,r,e,t){return new(e||(e=Promise))((function(i,s){function a(n){try{c(t.next(n))}catch(n){s(n)}}function o(n){try{c(t.throw(n))}catch(n){s(n)}}function c(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,o)}c((t=t.apply(n,r||[])).next())}))},i=this&&this.__generator||function(n,r){var e,t,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(e)throw new TypeError("Generator is already executing.");for(;a;)try{if(e=1,t&&(i=2&s[0]?t.return:s[0]?t.throw||((i=t.return)&&i.call(t),0):t.next)&&!(i=i.call(t,s[1])).done)return i;switch(t=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,t=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=r.call(n,a)}catch(n){s=[6,n],t=0}finally{e=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}};Object.defineProperty(r,"__esModule",{value:!0});var s=e(4),a=e(8),o=e(11),c=e(0),d=function(){function n(n){this._options=n,this._syncRegistry=new s.SyncRegistry(o.Theme.createFromRawTheme(n.theme,n.colorMap),n.onigLib),this._ensureGrammarCache=new Map}return n.prototype.dispose=function(){this._syncRegistry.dispose()},n.prototype.setTheme=function(n,r){this._syncRegistry.setTheme(o.Theme.createFromRawTheme(n,r))},n.prototype.getColorMap=function(){return this._syncRegistry.getColorMap()},n.prototype.loadGrammarWithEmbeddedLanguages=function(n,r,e){return this.loadGrammarWithConfiguration(n,r,{embeddedLanguages:e})},n.prototype.loadGrammarWithConfiguration=function(n,r,e){return this._loadGrammar(n,r,e.embeddedLanguages,e.tokenTypes)},n.prototype.loadGrammar=function(n){return this._loadGrammar(n,0,null,null)},n.prototype._doLoadSingleGrammar=function(n){return t(this,void 0,void 0,(function(){var r,e;return i(this,(function(t){switch(t.label){case 0:return[4,this._options.loadGrammar(n)];case 1:return(r=t.sent())&&(e="function"==typeof this._options.getInjections?this._options.getInjections(n):void 0,this._syncRegistry.addGrammar(r,e)),[2]}}))}))},n.prototype._loadSingleGrammar=function(n){return t(this,void 0,void 0,(function(){return i(this,(function(r){return this._ensureGrammarCache.has(n)||this._ensureGrammarCache.set(n,this._doLoadSingleGrammar(n)),[2,this._ensureGrammarCache.get(n)]}))}))},n.prototype._collectDependenciesForDep=function(n,r,e){var t=this._syncRegistry.lookup(e.scopeName);if(t){e instanceof c.FullScopeDependency?c.collectDependencies(r,this._syncRegistry.lookup(n),t):c.collectSpecificDependencies(r,this._syncRegistry.lookup(n),t,e.include);var i=this._syncRegistry.injections(e.scopeName);if(i)for(var s=0,a=i;s<a.length;s++){var o=a[s];r.add(new c.FullScopeDependency(o))}}else if(e.scopeName===n)throw new Error("No grammar provided for <"+n+">")},n.prototype._loadGrammar=function(n,r,e,s){return t(this,void 0,void 0,(function(){var t,a,o,d,y,k,g,l,u,p,m,h,f=this;return i(this,(function(i){switch(i.label){case 0:t=new Set,a=new Set,t.add(n),o=[new c.FullScopeDependency(n)],i.label=1;case 1:return o.length>0?(d=o,o=[],[4,Promise.all(d.map((function(n){return f._loadSingleGrammar(n.scopeName)})))]):[3,3];case 2:for(i.sent(),y=new c.ScopeDependencyCollector,k=0,g=d;k<g.length;k++)h=g[k],this._collectDependenciesForDep(n,y,h);for(l=0,u=y.full;l<u.length;l++)h=u[l],t.has(h.scopeName)||(t.add(h.scopeName),o.push(h));for(p=0,m=y.partial;p<m.length;p++)h=m[p],t.has(h.scopeName)||a.has(h.toKey())||(a.add(h.toKey()),o.push(h));return[3,1];case 3:return[2,this.grammarForScopeName(n,r,e,s)]}}))}))},n.prototype.addGrammar=function(n,r,e,s){return void 0===r&&(r=[]),void 0===e&&(e=0),void 0===s&&(s=null),t(this,void 0,void 0,(function(){return i(this,(function(t){switch(t.label){case 0:return this._syncRegistry.addGrammar(n,r),[4,this.grammarForScopeName(n.scopeName,e,s)];case 1:return[2,t.sent()]}}))}))},n.prototype.grammarForScopeName=function(n,r,e,t){return void 0===r&&(r=0),void 0===e&&(e=null),void 0===t&&(t=null),this._syncRegistry.grammarForScopeName(n,r,e,t)},n}();r.Registry=d,r.INITIAL=c.StackElement.NULL,r.parseRawGrammar=a.parseRawGrammar},function(n,r,e){"use strict";var t=this&&this.__awaiter||function(n,r,e,t){return new(e||(e=Promise))((function(i,s){function a(n){try{c(t.next(n))}catch(n){s(n)}}function o(n){try{c(t.throw(n))}catch(n){s(n)}}function c(n){var r;n.done?i(n.value):(r=n.value,r instanceof e?r:new e((function(n){n(r)}))).then(a,o)}c((t=t.apply(n,r||[])).next())}))},i=this&&this.__generator||function(n,r){var e,t,i,s,a={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(e)throw new TypeError("Generator is already executing.");for(;a;)try{if(e=1,t&&(i=2&s[0]?t.return:s[0]?t.throw||((i=t.return)&&i.call(t),0):t.next)&&!(i=i.call(t,s[1])).done)return i;switch(t=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return a.label++,{value:s[1],done:!1};case 5:a.label++,t=s[1],s=[0];continue;case 7:s=a.ops.pop(),a.trys.pop();continue;default:if(!((i=(i=a.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){a=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){a.label=s[1];break}if(6===s[0]&&a.label<i[1]){a.label=i[1],i=s;break}if(i&&a.label<i[2]){a.label=i[2],a.ops.push(s);break}i[2]&&a.ops.pop(),a.trys.pop();continue}s=r.call(n,a)}catch(n){s=[6,n],t=0}finally{e=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}};Object.defineProperty(r,"__esModule",{value:!0});var s=e(0),a=function(){function n(n,r){this._theme=n,this._grammars={},this._rawGrammars={},this._injectionGrammars={},this._onigLibPromise=r}return n.prototype.dispose=function(){for(var n in this._grammars)this._grammars.hasOwnProperty(n)&&this._grammars[n].dispose()},n.prototype.setTheme=function(n){var r=this;this._theme=n,Object.keys(this._grammars).forEach((function(n){r._grammars[n].onDidChangeTheme()}))},n.prototype.getColorMap=function(){return this._theme.getColorMap()},n.prototype.addGrammar=function(n,r){this._rawGrammars[n.scopeName]=n,r&&(this._injectionGrammars[n.scopeName]=r)},n.prototype.lookup=function(n){return this._rawGrammars[n]},n.prototype.injections=function(n){return this._injectionGrammars[n]},n.prototype.getDefaults=function(){return this._theme.getDefaults()},n.prototype.themeMatch=function(n){return this._theme.match(n)},n.prototype.grammarForScopeName=function(n,r,e,a){return t(this,void 0,void 0,(function(){var t,o,c,d,y;return i(this,(function(i){switch(i.label){case 0:return this._grammars[n]?[3,2]:(t=this._rawGrammars[n])?(o=this._grammars,c=n,d=s.createGrammar,y=[t,r,e,a,this],[4,this._onigLibPromise]):[2,null];case 1:o[c]=d.apply(void 0,y.concat([i.sent()])),i.label=2;case 2:return[2,this._grammars[n]]}}))}))},n}();r.SyncRegistry=a},function(n,r,e){"use strict";var t,i=this&&this.__extends||(t=function(n,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var e in r)r.hasOwnProperty(e)&&(n[e]=r[e])})(n,r)},function(n,r){function e(){this.constructor=n}t(n,r),n.prototype=null===r?Object.create(r):(e.prototype=r.prototype,new e)});Object.defineProperty(r,"__esModule",{value:!0});var s=e(1),a=/\\(\d+)/,o=/\\(\d+)/g,c=function(){function n(n,r,e){this.debugRegExps=r,this.rules=e,this.scanner=n.createOnigScanner(r)}return n.prototype.dispose=function(){"function"==typeof this.scanner.dispose&&this.scanner.dispose()},n}();r.CompiledRule=c;var d=function(){function n(n,r,e,t){this.$location=n,this.id=r,this._name=e||null,this._nameIsCapturing=s.RegexSource.hasCaptures(this._name),this._contentName=t||null,this._contentNameIsCapturing=s.RegexSource.hasCaptures(this._contentName)}return Object.defineProperty(n.prototype,"debugName",{get:function(){var n=this.$location?s.basename(this.$location.filename)+":"+this.$location.line:"unknown";return this.constructor.name+"#"+this.id+" @ "+n},enumerable:!0,configurable:!0}),n.prototype.getName=function(n,r){return this._nameIsCapturing&&null!==this._name&&null!==n&&null!==r?s.RegexSource.replaceCaptures(this._name,n,r):this._name},n.prototype.getContentName=function(n,r){return this._contentNameIsCapturing&&null!==this._contentName?s.RegexSource.replaceCaptures(this._contentName,n,r):this._contentName},n}();r.Rule=d;var y=function(n){function r(r,e,t,i,s){var a=n.call(this,r,e,t,i)||this;return a.retokenizeCapturedWithRuleId=s,a}return i(r,n),r.prototype.dispose=function(){},r.prototype.collectPatternsRecursive=function(n,r,e){throw new Error("Not supported!")},r.prototype.compile=function(n,r,e,t){throw new Error("Not supported!")},r}(d);r.CaptureRule=y;var k=function(){function n(n,r,e){if(void 0===e&&(e=!0),e)if(n){for(var t=n.length,i=0,s=[],o=!1,c=0;c<t;c++)if("\\"===n.charAt(c)&&c+1<t){var d=n.charAt(c+1);"z"===d?(s.push(n.substring(i,c)),s.push("$(?!\\n)(?<!\\n)"),i=c+2):"A"!==d&&"G"!==d||(o=!0),c++}this.hasAnchor=o,0===i?this.source=n:(s.push(n.substring(i,t)),this.source=s.join(""))}else this.hasAnchor=!1,this.source=n;else this.hasAnchor=!1,this.source=n;this.hasAnchor?this._anchorCache=this._buildAnchorCache():this._anchorCache=null,this.ruleId=r,this.hasBackReferences=a.test(this.source)}return n.prototype.clone=function(){return new n(this.source,this.ruleId,!0)},n.prototype.setSource=function(n){this.source!==n&&(this.source=n,this.hasAnchor&&(this._anchorCache=this._buildAnchorCache()))},n.prototype.resolveBackReferences=function(n,r){var e=r.map((function(r){return n.substring(r.start,r.end)}));return o.lastIndex=0,this.source.replace(o,(function(n,r){return(e[parseInt(r,10)]||"").replace(/[\-\\\{\}\*\+\?\|\^\$\.\,\[\]\(\)\#\s]/g,"\\$&")}))},n.prototype._buildAnchorCache=function(){var n,r,e,t,i=[],s=[],a=[],o=[];for(n=0,r=this.source.length;n<r;n++)e=this.source.charAt(n),i[n]=e,s[n]=e,a[n]=e,o[n]=e,"\\"===e&&n+1<r&&("A"===(t=this.source.charAt(n+1))?(i[n+1]="￿",s[n+1]="￿",a[n+1]="A",o[n+1]="A"):"G"===t?(i[n+1]="￿",s[n+1]="G",a[n+1]="￿",o[n+1]="G"):(i[n+1]=t,s[n+1]=t,a[n+1]=t,o[n+1]=t),n++);return{A0_G0:i.join(""),A0_G1:s.join(""),A1_G0:a.join(""),A1_G1:o.join("")}},n.prototype.resolveAnchors=function(n,r){return this.hasAnchor&&this._anchorCache?n?r?this._anchorCache.A1_G1:this._anchorCache.A1_G0:r?this._anchorCache.A0_G1:this._anchorCache.A0_G0:this.source},n}();r.RegExpSource=k;var g=function(){function n(){this._items=[],this._hasAnchors=!1,this._cached=null,this._anchorCache={A0_G0:null,A0_G1:null,A1_G0:null,A1_G1:null}}return n.prototype.dispose=function(){this._disposeCaches()},n.prototype._disposeCaches=function(){this._cached&&(this._cached.dispose(),this._cached=null),this._anchorCache.A0_G0&&(this._anchorCache.A0_G0.dispose(),this._anchorCache.A0_G0=null),this._anchorCache.A0_G1&&(this._anchorCache.A0_G1.dispose(),this._anchorCache.A0_G1=null),this._anchorCache.A1_G0&&(this._anchorCache.A1_G0.dispose(),this._anchorCache.A1_G0=null),this._anchorCache.A1_G1&&(this._anchorCache.A1_G1.dispose(),this._anchorCache.A1_G1=null)},n.prototype.push=function(n){this._items.push(n),this._hasAnchors=this._hasAnchors||n.hasAnchor},n.prototype.unshift=function(n){this._items.unshift(n),this._hasAnchors=this._hasAnchors||n.hasAnchor},n.prototype.length=function(){return this._items.length},n.prototype.setSource=function(n,r){this._items[n].source!==r&&(this._disposeCaches(),this._items[n].setSource(r))},n.prototype.compile=function(n,r,e){if(this._hasAnchors)return r?e?(this._anchorCache.A1_G1||(this._anchorCache.A1_G1=this._resolveAnchors(n,r,e)),this._anchorCache.A1_G1):(this._anchorCache.A1_G0||(this._anchorCache.A1_G0=this._resolveAnchors(n,r,e)),this._anchorCache.A1_G0):e?(this._anchorCache.A0_G1||(this._anchorCache.A0_G1=this._resolveAnchors(n,r,e)),this._anchorCache.A0_G1):(this._anchorCache.A0_G0||(this._anchorCache.A0_G0=this._resolveAnchors(n,r,e)),this._anchorCache.A0_G0);if(!this._cached){var t=this._items.map((function(n){return n.source}));this._cached=new c(n,t,this._items.map((function(n){return n.ruleId})))}return this._cached},n.prototype._resolveAnchors=function(n,r,e){var t=this._items.map((function(n){return n.resolveAnchors(r,e)}));return new c(n,t,this._items.map((function(n){return n.ruleId})))},n}();r.RegExpSourceList=g;var l=function(n){function r(r,e,t,i,s){var a=n.call(this,r,e,t,null)||this;return a._match=new k(i,a.id),a.captures=s,a._cachedCompiledPatterns=null,a}return i(r,n),r.prototype.dispose=function(){this._cachedCompiledPatterns&&(this._cachedCompiledPatterns.dispose(),this._cachedCompiledPatterns=null)},Object.defineProperty(r.prototype,"debugMatchRegExp",{get:function(){return""+this._match.source},enumerable:!0,configurable:!0}),r.prototype.collectPatternsRecursive=function(n,r,e){r.push(this._match)},r.prototype.compile=function(n,r,e,t){return this._cachedCompiledPatterns||(this._cachedCompiledPatterns=new g,this.collectPatternsRecursive(n,this._cachedCompiledPatterns,!0)),this._cachedCompiledPatterns.compile(n,e,t)},r}(d);r.MatchRule=l;var u=function(n){function r(r,e,t,i,s){var a=n.call(this,r,e,t,i)||this;return a.patterns=s.patterns,a.hasMissingPatterns=s.hasMissingPatterns,a._cachedCompiledPatterns=null,a}return i(r,n),r.prototype.dispose=function(){this._cachedCompiledPatterns&&(this._cachedCompiledPatterns.dispose(),this._cachedCompiledPatterns=null)},r.prototype.collectPatternsRecursive=function(n,r,e){var t,i;for(t=0,i=this.patterns.length;t<i;t++)n.getRule(this.patterns[t]).collectPatternsRecursive(n,r,!1)},r.prototype.compile=function(n,r,e,t){return this._cachedCompiledPatterns||(this._cachedCompiledPatterns=new g,this.collectPatternsRecursive(n,this._cachedCompiledPatterns,!0)),this._cachedCompiledPatterns.compile(n,e,t)},r}(d);r.IncludeOnlyRule=u;var p=function(n){function r(r,e,t,i,s,a,o,c,d,y){var g=n.call(this,r,e,t,i)||this;return g._begin=new k(s,g.id),g.beginCaptures=a,g._end=new k(o||"￿",-1),g.endHasBackReferences=g._end.hasBackReferences,g.endCaptures=c,g.applyEndPatternLast=d||!1,g.patterns=y.patterns,g.hasMissingPatterns=y.hasMissingPatterns,g._cachedCompiledPatterns=null,g}return i(r,n),r.prototype.dispose=function(){this._cachedCompiledPatterns&&(this._cachedCompiledPatterns.dispose(),this._cachedCompiledPatterns=null)},Object.defineProperty(r.prototype,"debugBeginRegExp",{get:function(){return""+this._begin.source},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"debugEndRegExp",{get:function(){return""+this._end.source},enumerable:!0,configurable:!0}),r.prototype.getEndWithResolvedBackReferences=function(n,r){return this._end.resolveBackReferences(n,r)},r.prototype.collectPatternsRecursive=function(n,r,e){if(e){var t,i=void 0;for(i=0,t=this.patterns.length;i<t;i++)n.getRule(this.patterns[i]).collectPatternsRecursive(n,r,!1)}else r.push(this._begin)},r.prototype.compile=function(n,r,e,t){return this._cachedCompiledPatterns||(this._cachedCompiledPatterns=new g,this.collectPatternsRecursive(n,this._cachedCompiledPatterns,!0),this.applyEndPatternLast?this._cachedCompiledPatterns.push(this._end.hasBackReferences?this._end.clone():this._end):this._cachedCompiledPatterns.unshift(this._end.hasBackReferences?this._end.clone():this._end)),this._end.hasBackReferences&&(this.applyEndPatternLast?this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length()-1,r):this._cachedCompiledPatterns.setSource(0,r)),this._cachedCompiledPatterns.compile(n,e,t)},r}(d);r.BeginEndRule=p;var m=function(n){function r(r,e,t,i,s,a,o,c,d){var y=n.call(this,r,e,t,i)||this;return y._begin=new k(s,y.id),y.beginCaptures=a,y.whileCaptures=c,y._while=new k(o,-2),y.whileHasBackReferences=y._while.hasBackReferences,y.patterns=d.patterns,y.hasMissingPatterns=d.hasMissingPatterns,y._cachedCompiledPatterns=null,y._cachedCompiledWhilePatterns=null,y}return i(r,n),r.prototype.dispose=function(){this._cachedCompiledPatterns&&(this._cachedCompiledPatterns.dispose(),this._cachedCompiledPatterns=null),this._cachedCompiledWhilePatterns&&(this._cachedCompiledWhilePatterns.dispose(),this._cachedCompiledWhilePatterns=null)},Object.defineProperty(r.prototype,"debugBeginRegExp",{get:function(){return""+this._begin.source},enumerable:!0,configurable:!0}),Object.defineProperty(r.prototype,"debugWhileRegExp",{get:function(){return""+this._while.source},enumerable:!0,configurable:!0}),r.prototype.getWhileWithResolvedBackReferences=function(n,r){return this._while.resolveBackReferences(n,r)},r.prototype.collectPatternsRecursive=function(n,r,e){if(e){var t,i=void 0;for(i=0,t=this.patterns.length;i<t;i++)n.getRule(this.patterns[i]).collectPatternsRecursive(n,r,!1)}else r.push(this._begin)},r.prototype.compile=function(n,r,e,t){return this._cachedCompiledPatterns||(this._cachedCompiledPatterns=new g,this.collectPatternsRecursive(n,this._cachedCompiledPatterns,!0)),this._cachedCompiledPatterns.compile(n,e,t)},r.prototype.compileWhile=function(n,r,e,t){return this._cachedCompiledWhilePatterns||(this._cachedCompiledWhilePatterns=new g,this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences?this._while.clone():this._while)),this._while.hasBackReferences&&this._cachedCompiledWhilePatterns.setSource(0,r||"￿"),this._cachedCompiledWhilePatterns.compile(n,e,t)},r}(d);r.BeginWhileRule=m;var h=function(){function n(){}return n.createCaptureRule=function(n,r,e,t,i){return n.registerRule((function(n){return new y(r,n,e,t,i)}))},n.getCompiledRuleId=function(r,e,t){return r.id||e.registerRule((function(i){if(r.id=i,r.match)return new l(r.$vscodeTextmateLocation,r.id,r.name,r.match,n._compileCaptures(r.captures,e,t));if(void 0===r.begin){r.repository&&(t=s.mergeObjects({},t,r.repository));var a=r.patterns;return void 0===a&&r.include&&(a=[{include:r.include}]),new u(r.$vscodeTextmateLocation,r.id,r.name,r.contentName,n._compilePatterns(a,e,t))}return r.while?new m(r.$vscodeTextmateLocation,r.id,r.name,r.contentName,r.begin,n._compileCaptures(r.beginCaptures||r.captures,e,t),r.while,n._compileCaptures(r.whileCaptures||r.captures,e,t),n._compilePatterns(r.patterns,e,t)):new p(r.$vscodeTextmateLocation,r.id,r.name,r.contentName,r.begin,n._compileCaptures(r.beginCaptures||r.captures,e,t),r.end,n._compileCaptures(r.endCaptures||r.captures,e,t),r.applyEndPatternLast,n._compilePatterns(r.patterns,e,t))})),r.id},n._compileCaptures=function(r,e,t){var i=[];if(r){var s=0;for(var a in r)"$vscodeTextmateLocation"!==a&&(c=parseInt(a,10))>s&&(s=c);for(var o=0;o<=s;o++)i[o]=null;for(var a in r)if("$vscodeTextmateLocation"!==a){var c=parseInt(a,10),d=0;r[a].patterns&&(d=n.getCompiledRuleId(r[a],e,t)),i[c]=n.createCaptureRule(e,r[a].$vscodeTextmateLocation,r[a].name,r[a].contentName,d)}}return i},n._compilePatterns=function(r,e,t){var i=[];if(r)for(var s=0,a=r.length;s<a;s++){var o=r[s],c=-1;if(o.include)if("#"===o.include.charAt(0)){var d=t[o.include.substr(1)];d&&(c=n.getCompiledRuleId(d,e,t))}else if("$base"===o.include||"$self"===o.include)c=n.getCompiledRuleId(t[o.include],e,t);else{var y=null,k=null,g=o.include.indexOf("#");g>=0?(y=o.include.substring(0,g),k=o.include.substring(g+1)):y=o.include;var l=e.getExternalGrammar(y,t);if(l)if(k){var h=l.repository[k];h&&(c=n.getCompiledRuleId(h,e,l.repository))}else c=n.getCompiledRuleId(l.repository.$self,e,l.repository)}else c=n.getCompiledRuleId(o,e,t);if(-1!==c){var f=e.getRule(c),b=!1;if((f instanceof u||f instanceof p||f instanceof m)&&f.hasMissingPatterns&&0===f.patterns.length&&(b=!0),b)continue;i.push(c)}}return{patterns:i,hasMissingPatterns:(r?r.length:0)!==i.length}},n}();r.RuleFactory=h},function(n,r,e){"use strict";function t(n){return!!n&&!!n.match(/[\w\.:]+/)}Object.defineProperty(r,"__esModule",{value:!0}),r.createMatchers=function(n,r){for(var e,i,s,a=[],o=(s=(i=/([LR]:|[\w\.:][\w\.:\-]*|[\,\|\-\(\)])/g).exec(e=n),{next:function(){if(!s)return null;var n=s[0];return s=i.exec(e),n}}),c=o.next();null!==c;){var d=0;if(2===c.length&&":"===c.charAt(1)){switch(c.charAt(0)){case"R":d=1;break;case"L":d=-1;break;default:console.log("Unknown priority "+c+" in scope selector")}c=o.next()}var y=g();if(a.push({matcher:y,priority:d}),","!==c)break;c=o.next()}return a;function k(){if("-"===c){c=o.next();var n=k();return function(r){return!!n&&!n(r)}}if("("===c){c=o.next();var e=function(){for(var n=[],r=g();r&&(n.push(r),"|"===c||","===c);){do{c=o.next()}while("|"===c||","===c);r=g()}return function(r){return n.some((function(n){return n(r)}))}}();return")"===c&&(c=o.next()),e}if(t(c)){var i=[];do{i.push(c),c=o.next()}while(t(c));return function(n){return r(i,n)}}return null}function g(){for(var n=[],r=k();r;)n.push(r),r=k();return function(r){return n.every((function(n){return n(r)}))}}}},function(n,r){var e,t,i=n.exports={};function s(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function o(n){if(e===setTimeout)return setTimeout(n,0);if((e===s||!e)&&setTimeout)return e=setTimeout,setTimeout(n,0);try{return e(n,0)}catch(r){try{return e.call(null,n,0)}catch(r){return e.call(this,n,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:s}catch(n){e=s}try{t="function"==typeof clearTimeout?clearTimeout:a}catch(n){t=a}}();var c,d=[],y=!1,k=-1;function g(){y&&c&&(y=!1,c.length?d=c.concat(d):k=-1,d.length&&l())}function l(){if(!y){var n=o(g);y=!0;for(var r=d.length;r;){for(c=d,d=[];++k<r;)c&&c[k].run();k=-1,r=d.length}c=null,y=!1,function(n){if(t===clearTimeout)return clearTimeout(n);if((t===a||!t)&&clearTimeout)return t=clearTimeout,clearTimeout(n);try{t(n)}catch(r){try{return t.call(null,n)}catch(r){return t.call(this,n)}}}(n)}}function u(n,r){this.fun=n,this.array=r}function p(){}i.nextTick=function(n){var r=new Array(arguments.length-1);if(arguments.length>1)for(var e=1;e<arguments.length;e++)r[e-1]=arguments[e];d.push(new u(n,r)),1!==d.length||y||o(l)},u.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=p,i.addListener=p,i.once=p,i.off=p,i.removeListener=p,i.removeAllListeners=p,i.emit=p,i.prependListener=p,i.prependOnceListener=p,i.listeners=function(n){return[]},i.binding=function(n){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(n){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(n,r,e){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var t=e(9),i=e(2),s=e(10);r.parseRawGrammar=function(n,r){return void 0===r&&(r=null),null!==r&&/\.json$/.test(r)?function(n,r){return i.DebugFlags.InDebugMode?s.parse(n,r,!0):JSON.parse(n)}(n,r):function(n,r){return i.DebugFlags.InDebugMode?t.parseWithLocation(n,r,"$vscodeTextmateLocation"):t.parse(n)}(n,r)}},function(n,r,e){"use strict";function t(n,r,e){var t=n.length,i=0,s=1,a=0;function o(r){if(null===e)i+=r;else for(;r>0;)10===n.charCodeAt(i)?(i++,s++,a=0):(i++,a++),r--}function c(n){null===e?i=n:o(n-i)}function d(){for(;i<t;){var r=n.charCodeAt(i);if(32!==r&&9!==r&&13!==r&&10!==r)break;o(1)}}function y(r){return n.substr(i,r.length)===r&&(o(r.length),!0)}function k(r){var e=n.indexOf(r,i);c(-1!==e?e+r.length:t)}function g(r){var e=n.indexOf(r,i);if(-1!==e){var s=n.substring(i,e);return c(e+r.length),s}return s=n.substr(i),c(t),s}t>0&&65279===n.charCodeAt(0)&&(i=1);var l=0,u=null,p=[],m=[],h=null;function f(n,r){p.push(l),m.push(u),l=n,u=r}function b(){if(0===p.length)return _("illegal state stack");l=p.pop(),u=m.pop()}function _(r){throw new Error("Near offset "+i+": "+r+" ~~~"+n.substr(i,50)+"~~~")}var x,v,w,S=function(){if(null===h)return _("missing <key>");var n={};null!==e&&(n[e]={filename:r,line:s,char:a}),u[h]=n,h=null,f(1,n)},E=function(){if(null===h)return _("missing <key>");var n=[];u[h]=n,h=null,f(2,n)},C=function(){var n={};null!==e&&(n[e]={filename:r,line:s,char:a}),u.push(n),f(1,n)},$=function(){var n=[];u.push(n),f(2,n)};function T(){if(1!==l)return _("unexpected </dict>");b()}function A(){return 1===l||2!==l?_("unexpected </array>"):void b()}function D(n){if(1===l){if(null===h)return _("missing <key>");u[h]=n,h=null}else 2===l?u.push(n):u=n}function M(n){if(isNaN(n))return _("cannot parse float");if(1===l){if(null===h)return _("missing <key>");u[h]=n,h=null}else 2===l?u.push(n):u=n}function L(n){if(isNaN(n))return _("cannot parse integer");if(1===l){if(null===h)return _("missing <key>");u[h]=n,h=null}else 2===l?u.push(n):u=n}function P(n){if(1===l){if(null===h)return _("missing <key>");u[h]=n,h=null}else 2===l?u.push(n):u=n}function I(n){if(1===l){if(null===h)return _("missing <key>");u[h]=n,h=null}else 2===l?u.push(n):u=n}function R(n){if(1===l){if(null===h)return _("missing <key>");u[h]=n,h=null}else 2===l?u.push(n):u=n}function j(n){if(n.isClosed)return"";var r=g("</");return k(">"),r.replace(/&#([0-9]+);/g,(function(n,r){return String.fromCodePoint(parseInt(r,10))})).replace(/&#x([0-9a-f]+);/g,(function(n,r){return String.fromCodePoint(parseInt(r,16))})).replace(/&amp;|&lt;|&gt;|&quot;|&apos;/g,(function(n){switch(n){case"&amp;":return"&";case"&lt;":return"<";case"&gt;":return">";case"&quot;":return'"';case"&apos;":return"'"}return n}))}for(;i<t&&(d(),!(i>=t));){var O=n.charCodeAt(i);if(o(1),60!==O)return _("expected <");if(i>=t)return _("unexpected end of input");var N=n.charCodeAt(i);if(63!==N)if(33!==N){if(47===N){if(o(1),d(),y("plist")){k(">");continue}if(y("dict")){k(">"),T();continue}if(y("array")){k(">"),A();continue}return _("unexpected closed tag")}var F=(v=void 0,w=void 0,w=!1,47===(v=g(">")).charCodeAt(v.length-1)&&(w=!0,v=v.substring(0,v.length-1)),{name:v.trim(),isClosed:w});switch(F.name){case"dict":1===l?S():2===l?C():(u={},null!==e&&(u[e]={filename:r,line:s,char:a}),f(1,u)),F.isClosed&&T();continue;case"array":1===l?E():2===l?$():f(2,u=[]),F.isClosed&&A();continue;case"key":x=j(F),1!==l?_("unexpected <key>"):null!==h?_("too many <key>"):h=x;continue;case"string":D(j(F));continue;case"real":M(parseFloat(j(F)));continue;case"integer":L(parseInt(j(F),10));continue;case"date":P(new Date(j(F)));continue;case"data":I(j(F));continue;case"true":j(F),R(!0);continue;case"false":j(F),R(!1);continue}if(!/^plist/.test(F.name))return _("unexpected opened tag "+F.name)}else{if(o(1),y("--")){k("--\x3e");continue}k(">")}else o(1),k("?>")}return u}Object.defineProperty(r,"__esModule",{value:!0}),r.parseWithLocation=function(n,r,e){return t(n,r,e)},r.parse=function(n){return t(n,null,null)}},function(n,r,e){"use strict";function t(n,r){throw new Error("Near offset "+n.pos+": "+r+" ~~~"+n.source.substr(n.pos,50)+"~~~")}Object.defineProperty(r,"__esModule",{value:!0}),r.parse=function(n,r,e){var o=new i(n),c=new s,d=0,y=null,k=[],g=[];function l(){k.push(d),g.push(y)}function u(){d=k.pop(),y=g.pop()}function p(n){t(o,n)}for(;a(o,c);){if(0===d){if(null!==y&&p("too many constructs in root"),3===c.type){y={},e&&(y.$vscodeTextmateLocation=c.toLocation(r)),l(),d=1;continue}if(2===c.type){y=[],l(),d=4;continue}p("unexpected token in root")}if(2===d){if(5===c.type){u();continue}if(7===c.type){d=3;continue}p("expected , or }")}if(1===d||3===d){if(1===d&&5===c.type){u();continue}if(1===c.type){var m=c.value;if(a(o,c)&&6===c.type||p("expected colon"),a(o,c)||p("expected value"),d=2,1===c.type){y[m]=c.value;continue}if(8===c.type){y[m]=null;continue}if(9===c.type){y[m]=!0;continue}if(10===c.type){y[m]=!1;continue}if(11===c.type){y[m]=parseFloat(c.value);continue}if(2===c.type){var h=[];y[m]=h,l(),d=4,y=h;continue}if(3===c.type){var f={};e&&(f.$vscodeTextmateLocation=c.toLocation(r)),y[m]=f,l(),d=1,y=f;continue}}p("unexpected token in dict")}if(5===d){if(4===c.type){u();continue}if(7===c.type){d=6;continue}p("expected , or ]")}if(4===d||6===d){if(4===d&&4===c.type){u();continue}if(d=5,1===c.type){y.push(c.value);continue}if(8===c.type){y.push(null);continue}if(9===c.type){y.push(!0);continue}if(10===c.type){y.push(!1);continue}if(11===c.type){y.push(parseFloat(c.value));continue}if(2===c.type){h=[],y.push(h),l(),d=4,y=h;continue}if(3===c.type){f={},e&&(f.$vscodeTextmateLocation=c.toLocation(r)),y.push(f),l(),d=1,y=f;continue}p("unexpected token in array")}p("unknown state")}return 0!==g.length&&p("unclosed constructs"),y};var i=function(n){this.source=n,this.pos=0,this.len=n.length,this.line=1,this.char=0},s=function(){function n(){this.value=null,this.type=0,this.offset=-1,this.len=-1,this.line=-1,this.char=-1}return n.prototype.toLocation=function(n){return{filename:n,line:this.line,char:this.char}},n}();function a(n,r){r.value=null,r.type=0,r.offset=-1,r.len=-1,r.line=-1,r.char=-1;for(var e,i=n.source,s=n.pos,a=n.len,o=n.line,c=n.char;;){if(s>=a)return!1;if(32!==(e=i.charCodeAt(s))&&9!==e&&13!==e){if(10!==e)break;s++,o++,c=0}else s++,c++}if(r.offset=s,r.line=o,r.char=c,34===e){for(r.type=1,s++,c++;;){if(s>=a)return!1;if(e=i.charCodeAt(s),s++,c++,92!==e){if(34===e)break}else s++,c++}r.value=i.substring(r.offset+1,s-1).replace(/\\u([0-9A-Fa-f]{4})/g,(function(n,r){return String.fromCodePoint(parseInt(r,16))})).replace(/\\(.)/g,(function(r,e){switch(e){case'"':return'"';case"\\":return"\\";case"/":return"/";case"b":return"\b";case"f":return"\f";case"n":return"\n";case"r":return"\r";case"t":return"\t";default:t(n,"invalid escape sequence")}throw new Error("unreachable")}))}else if(91===e)r.type=2,s++,c++;else if(123===e)r.type=3,s++,c++;else if(93===e)r.type=4,s++,c++;else if(125===e)r.type=5,s++,c++;else if(58===e)r.type=6,s++,c++;else if(44===e)r.type=7,s++,c++;else if(110===e){if(r.type=8,s++,c++,117!==(e=i.charCodeAt(s)))return!1;if(s++,c++,108!==(e=i.charCodeAt(s)))return!1;if(s++,c++,108!==(e=i.charCodeAt(s)))return!1;s++,c++}else if(116===e){if(r.type=9,s++,c++,114!==(e=i.charCodeAt(s)))return!1;if(s++,c++,117!==(e=i.charCodeAt(s)))return!1;if(s++,c++,101!==(e=i.charCodeAt(s)))return!1;s++,c++}else if(102===e){if(r.type=10,s++,c++,97!==(e=i.charCodeAt(s)))return!1;if(s++,c++,108!==(e=i.charCodeAt(s)))return!1;if(s++,c++,115!==(e=i.charCodeAt(s)))return!1;if(s++,c++,101!==(e=i.charCodeAt(s)))return!1;s++,c++}else for(r.type=11;;){if(s>=a)return!1;if(!(46===(e=i.charCodeAt(s))||e>=48&&e<=57||101===e||69===e||45===e||43===e))break;s++,c++}return r.len=s-r.offset,null===r.value&&(r.value=i.substr(r.offset,r.len)),n.pos=s,n.line=o,n.char=c,!0}},function(n,r,e){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var t=function(n,r,e,t,i,s){this.scope=n,this.parentScopes=r,this.index=e,this.fontStyle=t,this.foreground=i,this.background=s};function i(n){return!!(/^#[0-9a-f]{6}$/i.test(n)||/^#[0-9a-f]{8}$/i.test(n)||/^#[0-9a-f]{3}$/i.test(n)||/^#[0-9a-f]{4}$/i.test(n))}function s(n){if(!n)return[];if(!n.settings||!Array.isArray(n.settings))return[];for(var r=n.settings,e=[],s=0,a=0,o=r.length;a<o;a++){var c=r[a];if(c.settings){var d=void 0;d="string"==typeof c.scope?c.scope.replace(/^[,]+/,"").replace(/[,]+$/,"").split(","):Array.isArray(c.scope)?c.scope:[""];var y=-1;if("string"==typeof c.settings.fontStyle){y=0;for(var k=0,g=(p=c.settings.fontStyle.split(" ")).length;k<g;k++)switch(p[k]){case"italic":y|=1;break;case"bold":y|=2;break;case"underline":y|=4}}var l=null;"string"==typeof c.settings.foreground&&i(c.settings.foreground)&&(l=c.settings.foreground);var u=null;for("string"==typeof c.settings.background&&i(c.settings.background)&&(u=c.settings.background),k=0,g=d.length;k<g;k++){var p,m=(p=d[k].trim().split(" "))[p.length-1],h=null;p.length>1&&(h=p.slice(0,p.length-1)).reverse(),e[s++]=new t(m,h,a,y,l,u)}}}return e}function a(n,r){n.sort((function(n,r){var e=d(n.scope,r.scope);return 0!==e||0!==(e=y(n.parentScopes,r.parentScopes))?e:n.index-r.index}));for(var e=0,t="#000000",i="#ffffff";n.length>=1&&""===n[0].scope;){var s=n.shift();-1!==s.fontStyle&&(e=s.fontStyle),null!==s.foreground&&(t=s.foreground),null!==s.background&&(i=s.background)}for(var a=new o(r),l=new k(0,null,e,a.getId(t),a.getId(i)),u=new g(new k(0,null,-1,0,0),[]),p=0,m=n.length;p<m;p++){var h=n[p];u.insert(0,h.scope,h.parentScopes,h.fontStyle,a.getId(h.foreground),a.getId(h.background))}return new c(a,l,u)}r.ParsedThemeRule=t,r.parseTheme=s;var o=function(){function n(n){if(this._lastColorId=0,this._id2color=[],this._color2id=Object.create(null),Array.isArray(n)){this._isFrozen=!0;for(var r=0,e=n.length;r<e;r++)this._color2id[n[r]]=r,this._id2color[r]=n[r]}else this._isFrozen=!1}return n.prototype.getId=function(n){if(null===n)return 0;n=n.toUpperCase();var r=this._color2id[n];if(r)return r;if(this._isFrozen)throw new Error("Missing color in color map - "+n);return r=++this._lastColorId,this._color2id[n]=r,this._id2color[r]=n,r},n.prototype.getColorMap=function(){return this._id2color.slice(0)},n}();r.ColorMap=o;var c=function(){function n(n,r,e){this._colorMap=n,this._root=e,this._defaults=r,this._cache={}}return n.createFromRawTheme=function(n,r){return this.createFromParsedTheme(s(n),r)},n.createFromParsedTheme=function(n,r){return a(n,r)},n.prototype.getColorMap=function(){return this._colorMap.getColorMap()},n.prototype.getDefaults=function(){return this._defaults},n.prototype.match=function(n){return this._cache.hasOwnProperty(n)||(this._cache[n]=this._root.match(n)),this._cache[n]},n}();function d(n,r){return n<r?-1:n>r?1:0}function y(n,r){if(null===n&&null===r)return 0;if(!n)return-1;if(!r)return 1;var e=n.length,t=r.length;if(e===t){for(var i=0;i<e;i++){var s=d(n[i],r[i]);if(0!==s)return s}return 0}return e-t}r.Theme=c,r.strcmp=d,r.strArrCmp=y;var k=function(){function n(n,r,e,t,i){this.scopeDepth=n,this.parentScopes=r,this.fontStyle=e,this.foreground=t,this.background=i}return n.prototype.clone=function(){return new n(this.scopeDepth,this.parentScopes,this.fontStyle,this.foreground,this.background)},n.cloneArr=function(n){for(var r=[],e=0,t=n.length;e<t;e++)r[e]=n[e].clone();return r},n.prototype.acceptOverwrite=function(n,r,e,t){this.scopeDepth>n?console.log("how did this happen?"):this.scopeDepth=n,-1!==r&&(this.fontStyle=r),0!==e&&(this.foreground=e),0!==t&&(this.background=t)},n}();r.ThemeTrieElementRule=k;var g=function(){function n(n,r,e){void 0===r&&(r=[]),void 0===e&&(e={}),this._mainRule=n,this._rulesWithParentScopes=r,this._children=e}return n._sortBySpecificity=function(n){return 1===n.length||n.sort(this._cmpBySpecificity),n},n._cmpBySpecificity=function(n,r){if(n.scopeDepth===r.scopeDepth){var e=n.parentScopes,t=r.parentScopes,i=null===e?0:e.length,s=null===t?0:t.length;if(i===s)for(var a=0;a<i;a++){var o=e[a].length,c=t[a].length;if(o!==c)return c-o}return s-i}return r.scopeDepth-n.scopeDepth},n.prototype.match=function(r){if(""===r)return n._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes));var e,t,i=r.indexOf(".");return-1===i?(e=r,t=""):(e=r.substring(0,i),t=r.substring(i+1)),this._children.hasOwnProperty(e)?this._children[e].match(t):n._sortBySpecificity([].concat(this._mainRule).concat(this._rulesWithParentScopes))},n.prototype.insert=function(r,e,t,i,s,a){if(""!==e){var o,c,d,y=e.indexOf(".");-1===y?(o=e,c=""):(o=e.substring(0,y),c=e.substring(y+1)),this._children.hasOwnProperty(o)?d=this._children[o]:(d=new n(this._mainRule.clone(),k.cloneArr(this._rulesWithParentScopes)),this._children[o]=d),d.insert(r+1,c,t,i,s,a)}else this._doInsertHere(r,t,i,s,a)},n.prototype._doInsertHere=function(n,r,e,t,i){if(null!==r){for(var s=0,a=this._rulesWithParentScopes.length;s<a;s++){var o=this._rulesWithParentScopes[s];if(0===y(o.parentScopes,r))return void o.acceptOverwrite(n,e,t,i)}-1===e&&(e=this._mainRule.fontStyle),0===t&&(t=this._mainRule.foreground),0===i&&(i=this._mainRule.background),this._rulesWithParentScopes.push(new k(n,r,e,t,i))}else this._mainRule.acceptOverwrite(n,e,t,i)},n}();r.ThemeTrieElement=g}])},"../../packages/client-foundation/text-editor/src/TextEditorInternal.js":function(n,r,e){"use strict";e.r(r),function(n,t){e.d(r,"registerThemes",(function(){return T})),e.d(r,"default",(function(){return L}));var i=e("../../node_modules/react/index.js"),s=e.n(i),a=e("./include-loader!../../node_modules/@postman/monaco-editor/esm/vs/editor/editor.api.js"),o=e("./js/controllers/theme/ThemeManager.js"),c=e("../../node_modules/@postman/aether/esmLib/index.js"),d=e("./js/components/base/Tabs.js"),y=e("./js/components/base/Buttons.js"),k=e("./js/components/base/Dropdowns.js"),g=e("./js/utils/vkbeautify.js"),l=e("./js/components/base/keymaps/KeyMaps.js"),u=e("../../packages/client-foundation/text-editor/src/keymaps.js"),p=e("./js/components/base/LoadingIndicator.js"),m=e("./js/utils/ClipboardHelper.js"),h=e("../../packages/client-foundation/text-editor/src/themes.js"),f=e("../../packages/client-foundation/text-editor/src/tokenizer/textmate.tokenizer.js"),b=e("../../packages/client-foundation/text-editor/src/constants.js"),_=e("../../packages/client-foundation/text-editor/src/language.js"),x=e("../../packages/client-foundation/text-editor/src/settings.js"),v=e("../../packages/client-foundation/text-editor/src/dom.js");function w(){return w=Object.assign||function(n){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])}return n},w.apply(this,arguments)}let S={},E={},C=!1,$=!1;function T(n){a&&n.length&&n.forEach((n=>{a.editor.defineTheme(n.id,n.props)}))}function A(n){a.editor.setTheme(b.THEME_MAP[n]||b.MONACO_THEMES.LIGHT)}function D(){Object(v.createOverflowingWidgetsContainerNode)(),S={lineHeight:a.editor.EditorOption.lineHeight,links:a.editor.EditorOption.links,layoutInfo:a.editor.EditorOption.layoutInfo},E={[b.TEXT_EDITOR_VALIDATION_MESSAGE_LEVEL.INFO]:a.MarkerSeverity.Info,[b.TEXT_EDITOR_VALIDATION_MESSAGE_LEVEL.WARNING]:a.MarkerSeverity.Warning,[b.TEXT_EDITOR_VALIDATION_MESSAGE_LEVEL.ERROR]:a.MarkerSeverity.Error},a.languages.registerDocumentFormattingEditProvider("xml",{provideDocumentFormattingEdits(n){let r=n.getOptions(),e=r.insertSpaces?r.indentSize:"\t";return[{range:n.getFullModelRange(),text:g.default.xml(n.getValue(),e,!0)}]}}),T(h.themes),a&&(a.editor.setTheme(b.THEME_MAP[o.default.getCurrentTheme()]),pm.mediator.on("themeChange",A)),Object(_.registerAllNewLanguages)(a),a.languages.postman_json.jsonDefaults.setDiagnosticsOptions({validate:!0}),a.languages.typescript.javascriptDefaults.setDiagnosticsOptions({noSemanticValidation:!0}),a.languages.typescript.javascriptDefaults.setCompilerOptions({target:a.languages.typescript.ScriptTarget.ES6,lib:["ES6"],allowNonTsExtensions:!0,allowJs:!0}),a.languages.registerLinkProvider("json",{provideLinks(n,r){let e=n.findMatches(/https?:\/\/[^\s"'<>]+/g,{},!0,!1,null,!0),t=n.findMatches(/\/[^\s"'<>]+/g,{},!0,!1,null,!0);return t=t.filter((n=>!e.some((r=>a.Range.intersectRanges(r.range,n.range))))),{links:t.map((function(n){return{range:n.range,url:n.matches[0]}}))}}}),$=!0}function M(n,r){return{getLineCount:function(){return n.getLineCount()},getLineContent:function(r){return n.getLineContent(r)},getLinesContent:function(){return n.getLinesContent()},getCurrentLine:function(){return n.getLineContent(r.lineNumber)},getValue:function(){return n.getValue()},getWordAtPosition:function(r){return n.getWordAtPosition(r)},getCurrentWord:function(){return n.getWordAtPosition(r)},getWordBeforePosition:function(r){return n.getWordUntilPosition(r)},getUri:function(){return n.uri},deltaDecorations:function(r,e){return n.deltaDecorations(r,e)},getValueInRange:function(r){return n.getValueInRange(r)}}}class L extends i.Component{constructor(r){super(r),this.state={activeView:b.VIEW_MODES.PRETTY,isMounted:!1,height:0,placeHolderVisible:!1},this.deferredQueue=[],this.placeHolderDomNode=null,this.decorations=[],this.codeCompletionProviderDisposables={},this.definitionProviderDisposables={},this.hoverProviderDisposables={},this.throttledRefresh=n.throttle(this.refresh.bind(this),100,{leading:!0,trailing:!0}),this.replaceMonacoModel=this.replaceMonacoModel.bind(this),this.handleValueUpdate=this.handleValueUpdate.bind(this),this.handleLanguageChange=this.handleLanguageChange.bind(this),this.toggleFindWidget=this.toggleFindWidget.bind(this),this.handleOpenFindWidget=this.handleOpenFindWidget.bind(this),this.handleCloseFindWidget=this.handleCloseFindWidget.bind(this),this.handleCopyText=this.handleCopyText.bind(this),this.handleViewChange=this.handleViewChange.bind(this),this.prettify=this.prettify.bind(this),this.beautifyContent=this.beautifyContent.bind(this),this.handleContextMenu=this.handleContextMenu.bind(this),this.isTextEditorView=this.isTextEditorView.bind(this),this.renderActionBar=this.renderActionBar.bind(this),this.wrapWithEditorFeedback=this.wrapWithEditorFeedback.bind(this),this.replaceAsPrettyModel=this.replaceAsPrettyModel.bind(this),this.getKeyMapHandlers=this.getKeyMapHandlers.bind(this),this.focus=this.focus.bind(this),this.focusEditor=this.focusEditor.bind(this),this.codeCompletionItemProvider=this.codeCompletionItemProvider.bind(this),this.definitionProvider=this.definitionProvider.bind(this),this.hoverProvider=this.hoverProvider.bind(this),this.handleSelectAll=this.handleSelectAll.bind(this),this.handleRedo=this.handleRedo.bind(this),this.handleUndo=this.handleUndo.bind(this),this.registerInstanceLevelSettings=this.registerInstanceLevelSettings.bind(this),this.disposeInstanceSettings=this.disposeInstanceSettings.bind(this),this.scrollEventListenerCallback=this.scrollEventListenerCallback.bind(this),this.hideParameterHintsWidget=this.hideParameterHintsWidget.bind(this)}disposeInstanceSettings(){this.instanceSettingsDisposerObject&&this.instanceSettingsDisposerObject.dispose(),this.instanceSettingsDisposerObject=null}transformSchemas(n,r){let e=[];return n.length>0&&(e=n.map((n=>{let e={};return e=n.isReferencedBy?n:w({},n,{fileMatch:[r]}),delete e.isReferencedBy,e}))),e}registerInstanceLevelSettings(r){switch(this.props.language){case"postman_json":this.instanceSettingsDisposerObject=a.languages.postman_json.postmanJsonDefaults.setInstanceSettings(r,w({},this.props.settings,{schemas:this.transformSchemas(n.get(this.props,"settings.schemas",[]),r)}));break;case"json":this.instanceSettingsDisposerObject=a.languages.postman_json.jsonDefaults.setInstanceSettings(r,w({},this.props.settings,{schemas:this.transformSchemas(n.get(this.props,"settings.schemas",[]),r)}));break;case"yaml":this.instanceSettingsDisposerObject=a.languages.yaml.yamlDefaults.setInstanceSettings(r,w({},this.props.settings,{schemas:this.transformSchemas(n.get(this.props,"settings.schemas",[]),r)}));break;case"xml":this.instanceSettingsDisposerObject=a.languages.xml.xmlDefaults.setInstanceSettings(r,this.props.settings)}}componentDidMount(){if(!this._node)return;this.state.isMounted&&this.setState({isMounted:!1}),!$&&D(),this.editor=a.editor.create(this._node,this.getMonacoOptions()),this.setIndentation();let r=this.editor.getModel().uri.toString();if(this.props.settings&&this.registerInstanceLevelSettings(r),this.editorModelChangeDisposable=this.editor.onDidChangeModel((n=>{if(this.instanceLibsDisposable&&this.instanceLibsDisposable.dispose(),null===n.newModelUrl)return;let r=n.newModelUrl.toString();this.registerTypeDefinitions(r,this.props.language,this.props.typeDefinitionsProvider),this.setIndentation()})),this.props.onSelection&&this.editor.onDidChangeCursorSelection(this.props.onSelection),this.props.onClickInside&&this.editor.onMouseUp(this.props.onClickInside),this.props.registerTextEditor&&this.props.registerTextEditor(this.editor),this.disposeInstanceOptions=function(r){if(!r)return;let i;if(!r.getOption(S.links))return;let s=r.getContribution("editor.linkDetector");if(!s)return;s.isEnabled=()=>!0,s.openLinkOccurrence=r=>{let e=n.get(r,["link","_link","url"]);e&&("string"!=typeof e&&(e=e.toString(!0)),i=e)},Promise.resolve().then(e.bind(null,"../../node_modules/@postman/monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/clickLinkGesture.js")).then((({ClickLinkGesture:n})=>{let r;n.prototype.onEditorMouseDown=function(n){r=n.target.position},n.prototype.onEditorMouseUp=function(n){let e=r,t=n.target.position;t&&e&&e.lineNumber===t.lineNumber&&e.column===t.column&&this._onExecute.fire(n)}}));let a=r.onMouseUp((({event:n})=>{let r=n.leftButton?"left":n.middleButton?"middle":n.rightButton?"right":null,s=i;if(i=null,"left"!==r||!s)return;let a="darwin"===t.process.platform?n.metaKey&&!n.ctrlKey:n.ctrlKey&&!n.metaKey;e("./js/modules/services/LinkClickService.js").openLink(s,{openInBrowser:a})}));return function(){a&&a.dispose()}}(this.editor),this.registerCodeCompletion(this.props.language,this.props.codeCompletionProviders),this.registerTypeDefinitions(r,this.props.language,this.props.typeDefinitionsProvider),this.registerDefinitionProvider(this.props.language,this.props.definitionProviders),this.registerHoverProvider(this.props.language,this.props.hoverProviders),this.editorKeyDownDisposable=this.editor.onKeyDown((n=>{if((n.metaKey||n.ctrlKey)&&n.keyCode==a.KeyCode.Enter)if(n.stopPropagation(),this.props.onSubmit)this.props.onSubmit();else{let r=new n.browserEvent.constructor(n.browserEvent.type,n.browserEvent);this.editorContainer&&this.editorContainer.dispatchEvent&&this.editorContainer.dispatchEvent(r)}})),this.editor&&this.props.onCancel&&(this.editorCancelDisposable=this.editor.addAction({id:"editor-cancel",label:"escape",run:this.props.onCancel,keybindings:[a.KeyCode.Escape]})),this.editor&&!this.state.isMounted&&this.setState({isMounted:!0}),this.contentChangeListenerDisposable=this.editor.onDidChangeModelContent((()=>{let r=this.editor.getValue();this.props.onChange&&this.props.onChange(r),this.handlePlaceholder(n.isEmpty(r)),this.handleSuggestWidget()})),this.props.autoResize&&(this.contentSizeChangeListenerDisposable=this.editor.onDidContentSizeChange((n=>{this.attemptResize(n)}))),this.handleValueUpdate().then((()=>{this.handlePlaceholder(n.isEmpty(this.props.value)),this.executeDeferredActions()})),this.registerPmEventListeners(),this.resizeObserver=new ResizeObserver((n=>{this.refresh(),this.resizePlaceholder()})),this.resizeObserver.observe(this._node),this.props.readOnly||(this.intersectionObserver=new IntersectionObserver((n=>{n.forEach((n=>{n.isIntersecting||this.hideParameterHintsWidget()}))})),this.intersectionObserver.observe(this._node)),!C){Promise.resolve().then(e.bind(null,"../../node_modules/@postman/monaco-editor/esm/vs/editor/common/modes/languageConfigurationRegistry.js")).then((n=>{let r=n.LanguageConfigurationRegistry.onDidChange((n=>{"javascript"!==n.languageIdentifier.language||C||(C=!0,r&&r.dispose(),Object(f.default)(a,this.editor))}))}));for(const n of b.NEW_LANGUAGES){let r=a.languages.onLanguage(n,(n=>{C||(C=!0,r&&r.dispose(),Object(f.default)(a,this.editor))}))}}Promise.resolve().then(e.bind(null,"../../node_modules/@postman/monaco-editor/esm/vs/editor/common/modes.js")).then((({DocumentFormattingEditProviderRegistry:n})=>{this.languageRegistryDisposer=n.onDidChange((()=>{this.shouldAutoFormat()&&this.state.activeView===b.VIEW_MODES.PRETTY&&this.replaceAsPrettyModel(this.editor.getModel())}))})),window.addEventListener("scroll",this.scrollEventListenerCallback,!0)}componentWillUnmount(){window.removeEventListener("scroll",this.scrollEventListenerCallback,!0),this.editor&&(this.contentChangeListenerDisposable&&this.contentChangeListenerDisposable.dispose(),this.contentSizeChangeListenerDisposable&&this.contentSizeChangeListenerDisposable.dispose(),this.editorModelChangeDisposable&&this.editorModelChangeDisposable.dispose(),this.disposeInstanceSettings(),this.editor.getModel()&&this.editor.getModel().dispose(),this.disposeInstanceOptions&&this.disposeInstanceOptions(),this.disposeCodeCompletionProviders(),this.disposeDefinitionProviders(),this.disposeHoverProviders(),this.suggestWidgetShowDisposable&&this.suggestWidgetShowDisposable.dispose(),this.instanceLibsDisposable&&this.instanceLibsDisposable.dispose(),this.editorKeyDownDisposable&&this.editorKeyDownDisposable.dispose(),this.editorCancelDisposable&&this.editorCancelDisposable.dispose(),this.placeHolderDomNode&&this.placeHolderDomNode.removeEventListener("click",this.focus),this.placeHolderDomNode=null,this.editor.dispose()),this.unregisterPmEventListeners(),this.resizeObserver&&this.resizeObserver.disconnect(),this.intersectionObserver&&this.intersectionObserver.disconnect(),this.languageRegistryDisposer&&this.languageRegistryDisposer.dispose()}componentDidUpdate(r){this.editor?(r.value!==this.props.value?this.handleValueUpdate():r.language!==this.props.language&&this.handleLanguageChange(),r.wordWrap===this.props.wordWrap&&r.readOnly===this.props.readOnly||this.editor.updateOptions(this.getMonacoOptions()),r.validationErrors!==this.props.validationErrors&&this.editor&&function(n,r){let e=r.map((n=>({startLineNumber:n.startLineNumber,endLineNumber:n.endLineNumber,startColumn:n.startColumn,endColumn:n.endColumn,message:n.message,severity:n.severity||E[n.level]})));a.editor.setModelMarkers(n,"postman",e)}(this.editor.getModel(),this.props.validationErrors),r.language!==this.props.language&&(this.registerCodeCompletion(this.props.language,this.props.codeCompletionProviders),this.registerDefinitionProvider(this.props.language,this.props.definitionProviders),this.registerHoverProvider(this.props.language,this.props.definitionProviders),this.disposeInstanceSettings()),n.isEqual(r.settings,this.props.settings)||(this.disposeInstanceSettings(),this.registerInstanceLevelSettings(this.editor.getModel().uri.toString())),n.isEqual(this.props.indentation,r.indentation)||this.setIndentation()):pm.logger.warn("TextEditor~componentDidUpdate - Editor instance not set")}scrollEventListenerCallback(r){if(!this.editor)return;let e=this.editor.getDomNode();e&&(e.contains(r.target)||this.editor._contentWidgets&&Object.entries(this.editor._contentWidgets).forEach((([r,e])=>{e&&e.widget&&e.widget.hideWidget&&n.isFunction(e.widget.hideWidget)&&e.widget.hideWidget()})))}executeDeferredActions(){for(;this.deferredQueue.length;){let n=this.deferredQueue.shift();"function"==typeof n&&n.apply(this)}}handleSuggestWidget(){if(this.suggestWidgetShowDisposable)return null;let n=this.editor._contentWidgets["editor.widget.suggestWidget"]&&this.editor._contentWidgets["editor.widget.suggestWidget"].widget;n&&(this.suggestWidgetShowDisposable=n.onDidShow((n=>{this.hideParameterHintsWidget()})))}hideParameterHintsWidget(){let n=this.editor._contentWidgets["editor.widget.parameterHintsWidget"]&&this.editor._contentWidgets["editor.widget.parameterHintsWidget"].widget;n&&n.visible&&n.cancel&&n.cancel()}getQuickSuggestionsConfig(){return{other:!0,strings:!0,comments:!1}}getIndentationSettingValue(r){switch(r){case"editorIndentType":return"space"===(this.props.indentation&&!n.isNull(this.props.indentation.indentationType)?this.props.indentation.indentationType:Object(x.getSettingValue)(r));case"editorIndentCount":return this.props.indentation&&!n.isNull(this.props.indentation.indentationSize)?this.props.indentation.indentationSize:Object(x.getSettingValue)(r)}}getMonacoOptions(){return{value:this.props.value,minimap:{enabled:!1},readOnly:this.props.readOnly,scrollBeyondLastLine:!1,lineNumbers:this.state.activeView!==b.VIEW_MODES.PRETTY||this.props.hideLineNumbers?"off":"on",wordWrap:this.state.activeView===b.VIEW_MODES.PRETTY&&!1===this.props.wordWrap?"off":"on",fontFamily:Object(x.getSettingValue)("editorFontFamily"),language:Object(_.getMonacoLanguageName)(this.props.language),links:!!this.props.enableLinks,quickSuggestions:!this.props.hideSuggestions&&this.getQuickSuggestionsConfig(),scrollbar:{vertical:this.props.autoResize||"both"===this.props.hideScrollbar||"vertical"===this.props.hideScrollbar?"hidden":"auto",horizontal:"both"===this.props.hideScrollbar||"horizontal"===this.props.hideScrollbar?"hidden":"auto",alwaysConsumeMouseWheel:!1},wordWrapMinified:!1,wrappingIndent:this.state.activeView===b.VIEW_MODES.RAW||"markdown"===Object(_.getMonacoLanguageName)(this.props.language)?"none":"indent",renderIndentGuides:"markdown"!==Object(_.getMonacoLanguageName)(this.props.language),glyphMargin:this.props.glyphMargin||!1,folding:!this.props.hideCodeFolding,extraEditorClassName:this.props.customEditorClassName?this.props.customEditorClassName:"",renderLineHighlight:this.props.hideCurrentLineHighlight?"none":"line",overviewRulerLanes:this.props.autoResize?0:3,overviewRulerBorder:!this.props.autoResize,lineDecorationsWidth:4,fontSize:Object(x.getSettingValue)("responseFontSize"),lineHeight:1.5*Object(x.getSettingValue)("responseFontSize"),detectIndentation:!1,insertSpaces:this.getIndentationSettingValue("editorIndentType"),tabSize:this.getIndentationSettingValue("editorIndentCount"),autoClosingBrackets:Object(x.getSettingValue)("editorAutoCloseBrackets")?"languageDefined":"never",autoClosingQuotes:Object(x.getSettingValue)("editorAutoCloseQuotes")?"languageDefined":"never",renderWhitespace:!0===this.props.showNonPrintableCharacters?"all":"none",renderControlCharacters:this.props.showNonPrintableCharacters,overflowWidgetsDomNode:document.querySelector("#monaco-overflowing-widgets-container"),fixedOverflowWidgets:!0}}shouldAutoFormat(){return this.props.readOnly&&this.props.autoFormat}handleSelectAll(n){n&&n.closest(".monaco-editor")===this.editor.getDomNode()&&this.editor.trigger("Context Menu","selectAll")}handleRedo(n){n&&n.closest(".monaco-editor")===this.editor.getDomNode()&&this.editor.trigger("Context Menu","redo")}handleUndo(n){n&&n.closest(".monaco-editor")===this.editor.getDomNode()&&this.editor.trigger("Context Menu","undo")}insertTextBlock(n){let r=this.editor,e=r.getPosition(),t=r.getModel(),i=t.getLineLength(e.lineNumber),s=i>0,a=s?e.lineNumber+1:e.lineNumber,o=t.getEOL(),c={startLineNumber:s?e.lineNumber:a,startColumn:s?i+1:0,endLineNumber:s?e.lineNumber:a,endColumn:s?i+o.length:0};r.executeEdits("",[{range:c,text:s?o+n:n,forceMoveMarkers:!0}]);let d=r.getPosition(),y={startLineNumber:c.startLineNumber,startColumn:c.startColumn,endLineNumber:d.lineNumber,endColumn:d.column};this.focus(),r.setSelection(y),r.getAction("editor.action.formatSelection").run(),r.setPosition(d)}beautifyContent(){this.editor.getAction("editor.action.formatDocument").run()}handleLanguageChange(){this.handleValueUpdate()}registerCodeCompletion(r,e){function t(n,r){let e=Object(_.getMonacoLanguageName)(n);this.codeCompletionProviderDisposables[e]||(this.codeCompletionProviderDisposables[e]=a.languages.registerCompletionItemProvider(e,{provideCompletionItems:r}))}n.isArray(e)&&e.forEach((n=>{(n.lang&&n.lang===r&&n.provider||!n.lang&&n.provider)&&t.call(this,r,this.codeCompletionItemProvider)}))}codeCompletionItemProvider(r,e){if(r.id!==this.editor.getModel().id)return;let t=r.getLanguageIdentifier().language,i=[];return n.isArray(this.props.codeCompletionProviders)&&this.props.codeCompletionProviders.forEach((s=>{(s.lang&&Object(_.getMonacoLanguageName)(s.lang)===t&&s.provider||!s.lang&&s.provider)&&(i=n.concat(i,s.provider(M(r,e),e)))})),{suggestions:i}}registerTypeDefinitions(r,e,t){if("javascript"!==e||!n.isFunction(t))return;let i=t().map((n=>({filePath:n.id,content:n.content})));this.instanceLibsDisposable=a.languages.typescript.javascriptDefaults.setInstanceLibs(r,i)}updateTypeDefinitions(n){this.registerTypeDefinitions(n,this.props.language,this.props.typeDefinitionsProvider)}registerDefinitionProvider(r,e){function t(n,r){let e=Object(_.getMonacoLanguageName)(n);this.definitionProviderDisposables[e]||(this.definitionProviderDisposables[e]=a.languages.registerDefinitionProvider(e,{provideDefinition:r}))}n.isArray(e)&&e.forEach((n=>{(n.lang&&n.lang===r&&n.provider||!n.lang&&n.provider)&&t.call(this,r,this.definitionProvider)}))}definitionProvider(r,e){if(r.id!==this.editor.getModel().id)return;let t=[],i=r.getLanguageIdentifier().language;return n.isArray(this.props.definitionProviders)&&this.props.definitionProviders.forEach((n=>{(n.lang&&Object(_.getMonacoLanguageName)(n.lang)===i&&n.provider||!n.lang&&n.provider)&&t.push(n.provider(M(r,e),e))})),t}registerHoverProvider(r,e){function t(n,r){const e=Object(_.getMonacoLanguageName)(n);this.hoverProviderDisposables[e]||(this.hoverProviderDisposables[e]=a.languages.registerHoverProvider(e,{provideHover:r}))}n.isArray(e)&&e.forEach((n=>{(n.lang&&n.lang===r&&n.provider||!n.lang&&n.provider)&&t.call(this,r,this.hoverProvider)}))}hoverProvider(r,e){if(r.id!==this.editor.getModel().id)return;let t=[],i=r.getLanguageIdentifier().language;return n.isArray(this.props.hoverProviders)&&this.props.hoverProviders.forEach((s=>{(s.lang&&Object(_.getMonacoLanguageName)(s.lang)===i&&s.provider||!s.lang&&s.provider)&&(t=n.concat(t,s.provider(M(r,e),e)))})),{contents:t}}handleValueUpdate(){return Promise.resolve().then((()=>{let r=this.props.value,e=this.editor.getModel(),t=e.getLanguageIdentifier().language!==Object(_.getMonacoLanguageName)(this.props.language);if(!this.props.readOnly&&t&&a.editor.setModelLanguage(e,Object(_.getMonacoLanguageName)(this.props.language)),this.props.readOnly&&this.state.activeView===b.VIEW_MODES.PRETTY)try{let n=_.transformResponseForLanguage[Object(_.getMonacoLanguageName)(this.props.language)];n&&(r=n(r))}catch(n){}if(!this.props.readOnly&&this.editor&&this.editor.getValue()===n.toString(r))return;let i=a.editor.createModel(r,this.state.activeView===b.VIEW_MODES.PRETTY?Object(_.getMonacoLanguageName)(this.props.language):b.LANGUAGE_PLAINTEXT);if(this.setIndentation(i),this.shouldAutoFormat()&&this.state.activeView===b.VIEW_MODES.PRETTY)return this.replaceAsPrettyModel(i);this.replaceMonacoModel(i)}))}replaceMonacoModel(n){if(n.isDisposed())return;let r=this.editor.getModel();r!==n&&(r&&this.editor.setModel(null),r&&r.dispose(),this.editor.setModel(n))}replaceAsPrettyModel(n){let r=Promise.resolve().then(e.bind(null,"../../node_modules/@postman/monaco-editor/esm/vs/editor/contrib/format/format.js")).then((r=>this.editor._instantiationService.invokeFunction(r.formatDocumentWithSelectedProvider,n,!0)));return Promise.race([new Promise((function(n){setTimeout(n,300)})),this.wrapWithEditorFeedback(b.EDITOR_FEEDBACK_STATES.FORMATTING,r)]).then((()=>{this.replaceMonacoModel(n)}))}initializeEditorSettingsHandlers(){this.handlers={},n.forEach(b.CUSTOMIZABLE_TEXT_EDITOR_SETTINGS,(n=>{let r=this.updateEditorOptions.bind(this,n);this.handlers[n]=r,pm.settings.on(`setSetting:${n}`,r)}))}disposeEditorSettingsHandlers(){this.handlers&&(n.forEach(b.CUSTOMIZABLE_TEXT_EDITOR_SETTINGS,(n=>{let r=this.handlers[n];pm.settings.off(`setSetting:${n}`,r),this.handlers[n]=null})),this.handlers=null)}setIndentation(n){if(!(n=n||this.editor.getModel()))return;let r=this.getIndentationSettingValue("editorIndentType"),e=this.getIndentationSettingValue("editorIndentCount");n.updateOptions({insertSpaces:r,tabSize:e})}updateEditorOptions(n){let r=Object(x.getSettingValue)(n);switch(n){case"editorFontFamily":return void this.editor.updateOptions({fontFamily:r});case"responseFontSize":return void this.editor.updateOptions({fontSize:r,lineHeight:1.5*r});case"editorIndentCount":case"editorIndentType":return void this.setIndentation();case"editorAutoCloseBrackets":return void this.editor.updateOptions({autoClosingBrackets:r?"languageDefined":"never"});case"editorAutoCloseQuotes":return void this.editor.updateOptions({autoClosingQuotes:r?"languageDefined":"never"});case"editorRenderNonPrintable":return void this.editor.updateOptions({renderWhitespace:r,renderControlCharacters:r});default:return}}registerPmEventListeners(){this.initializeEditorSettingsHandlers(),pm.mediator.on("textEditor:selectAll",this.handleSelectAll),pm.mediator.on("textEditor:redo",this.handleRedo),pm.mediator.on("textEditor:undo",this.handleUndo)}unregisterPmEventListeners(){this.disposeEditorSettingsHandlers(),pm.mediator.off("textEditor:selectAll",this.handleSelectAll),pm.mediator.off("textEditor:redo",this.handleRedo),pm.mediator.off("textEditor:undo",this.handleUndo)}disposeCodeCompletionProviders(){for(let[n,r]of Object.entries(this.codeCompletionProviderDisposables))r&&r.dispose&&r.dispose();this.codeCompletionProviderDisposables=null}disposeDefinitionProviders(){for(let[n,r]of Object.entries(this.definitionProviderDisposables))r&&r.dispose&&r.dispose();this.definitionProviderDisposables=null}disposeHoverProviders(){for(let[n,r]of Object.entries(this.hoverProviderDisposables))r&&r.dispose&&r.dispose();this.hoverProviderDisposables=null}getCurrentModelLanguage(){let n=this.editor.getModel();return n&&n.getLanguageIdentifier().language}attemptResize(n){if(this.state.height!==n.contentHeight){this.useRawRefresh=!0;let r=n.contentHeight;this.props.minHeight&&"number"==typeof this.props.minHeight&&(r=Math.max(n.contentHeight,this.props.minHeight)),this.props.maxHeight&&"number"==typeof this.props.maxHeight&&(r=Math.min(r,this.props.maxHeight)),this.setState({height:r})}}handlePlaceholder(n){if(this.props.placeholder&&this.editor){if(!this.placeHolderDomNode){let n=this.editor.getDomNode().querySelector(".lines-content");if(n){n.append(this.getPlaceholderSpan());let r=this.editor.getDomNode().querySelector(".monaco-placeholder");r&&r.addEventListener("click",this.focus),this.placeHolderDomNode=r}}if(n){if(this.state.placeHolderVisible)return;this.showPlaceholder()}else this.hidePlaceholder()}}showPlaceholder(){this.resizePlaceholder(),this.placeHolderDomNode.style.display="block",this.setState({placeHolderVisible:!0})}hidePlaceholder(){this.placeHolderDomNode.style.display="none",this.setState({placeHolderVisible:!1})}resizePlaceholder(){this.editor&&this.placeHolderDomNode&&(this.placeHolderDomNode.style.width=`${this.editor.getLayoutInfo().contentWidth}px`)}getPlaceholderSpan(){let n=document.createElement("span");return n.className="monaco-placeholder",n.style.fontFamily=Object(x.getSettingValue)("editorFontFamily"),n.style.display="none",n.innerText=this.props.placeholder,n}refresh(){this.editor&&null!==this.editor.getDomNode().offsetParent&&this.editor.layout()}toggleFindWidget(){this.editor&&this.editor._overlayWidgets["editor.contrib.findWidget"]&&this.editor._overlayWidgets["editor.contrib.findWidget"].widget._isVisible?this.handleCloseFindWidget():this.handleOpenFindWidget()}handleOpenFindWidget(){this.editor.getAction("actions.findWithSelection").run()}handleCloseFindWidget(){this.editor.trigger("keyboard","closeFindWidget")}handleCopyText(){"browser"===window.SDK_PLATFORM?m.default.copy(this.editor.getValue()):e("electron").clipboard.writeText(this.editor.getValue()),pm.toasts.success("已拷贝到剪贴板")}handleViewChange(n){n!==this.state.activeView&&this.setState({activeView:n},(()=>{this.editor.updateOptions(this.getMonacoOptions()),this.isTextEditorView()&&this.handleValueUpdate()}))}prettify(){this.editor.updateOptions({readOnly:!1});let n=this.editor.getAction("editor.action.formatDocument").run().then((()=>{this.editor.updateOptions({readOnly:!0})})).catch((()=>{this.editor.updateOptions({readOnly:!0})}));this.wrapWithEditorFeedback(b.EDITOR_FEEDBACK_STATES.FORMATTING,n)}getEditorStyles(){return{width:this.props.width||"100%",height:this.props.autoResize?`${this.state.height}px`:this.props.height||"100%"}}getEditorNodeStyles(){return this.state.activeView===b.VIEW_MODES.PRETTY||this.state.activeView===b.VIEW_MODES.RAW?{display:"flex",flex:1,flexDirection:"column",width:"100%",height:this.props.autoResize?`${this.state.height}px`:this.props.showActionBar?"calc(100% - 40px)":"100%"}:{display:"none"}}focus(){this.editor?this.focusEditor():this.deferredQueue.push(this.focusEditor)}focusEditor(){setTimeout((()=>{this.editor&&null===this.editor.getDomNode().offsetParent||this.editor&&this.editor.focus()}),100)}handleContextMenu(){this.focus(),pm.mediator.trigger("textEditor:selectionChange",this.editor.getModel().getValueInRange(this.editor.getSelection()))}isTextEditorView(){return this.state.activeView===b.VIEW_MODES.PRETTY||this.state.activeView===b.VIEW_MODES.RAW}wrapWithEditorFeedback(n,r){if(!n||!r)return;let e=setTimeout((()=>{t=!0,this.setState({editorFeedbackMessage:n})}),300),t=!1;return r.then((()=>{clearTimeout(e),t&&this.setState({editorFeedbackMessage:""})})).catch((n=>{throw clearTimeout(e),t&&this.setState({editorFeedbackMessage:""}),n}))}getKeyMapHandlers(){return{handleFoldAll:()=>{this.editor.getAction("editor.foldAll").run()},handleUnfoldAll:()=>{this.editor.getAction("editor.unfoldAll").run()},handleFoldSelection:()=>{this.editor.getAction("editor.fold").run()},handleUnfoldSelection:()=>{this.editor.getAction("editor.unfold").run()},handleJumpToMatchingBracket:()=>{this.editor.getAction("editor.action.jumpToBracket").run()},handleFormatDocument:()=>{this.editor.getAction("editor.action.formatDocument").run()},handleDeleteLine:()=>{this.editor.getAction("editor.action.deleteLines").run()},handleDuplicateSelection:()=>{this.editor.getAction("editor.action.copyLinesDownAction").run()},handleToUpperCase:()=>{this.editor.getAction("editor.action.transformToUppercase").run()},handleToLowerCase:()=>{this.editor.getAction("editor.action.transformToLowercase").run()},handleSelectionToBracket:()=>{this.editor.getAction("editor.action.selectToBracket").run()},handleToggleComment:()=>{n.noop()}}}renderActionBar(){let r=n.find(this.props.languages,{key:this.props.language});r=r?r.label:"Text";let e=this.state.activeView===b.VIEW_MODES.PRETTY,t=this.props.readOnly,i=n.map(this.props.customTabs,(n=>{if("string"!=typeof n.name||"function"!=typeof n.renderContent)return;let r,e=`text-editor-tab text-editor-tab--${n.name.toLowerCase().replace(/\s/g,"_")}`;return r=n.isBeta?s.a.createElement("span",null,s.a.createElement("span",null,n.name),s.a.createElement("span",{className:"tab-beta-label"},"测试")):s.a.createElement("span",null,n.name),"dropdown"===this.props.tabsType?s.a.createElement(k.MenuItem,{key:`text-editor-tab-${n.name}`,refKey:n.name,active:this.state.activeView===n.name},r):s.a.createElement(d.Tab,{key:`text-editor-tab-${n.name}`,refKey:n.name,className:e},r)}));return s.a.createElement("div",{style:{display:"flex",flexDirection:"row",marginBottom:"10px"}},s.a.createElement("div",{style:{flexGrow:1,display:"flex",flexDirection:"row"}},"dropdown"===this.props.tabsType?s.a.createElement(k.Dropdown,{className:"text-editor-dropdown",onSelect:this.handleViewChange},s.a.createElement(k.DropdownButton,{type:"secondary",size:"small"},s.a.createElement(y.Button,{className:"text-editor-dropdown-button__label"},this.state.activeView)),s.a.createElement(k.DropdownMenu,null,s.a.createElement(k.MenuItem,{refKey:b.VIEW_MODES.PRETTY,active:this.state.activeView===b.VIEW_MODES.PRETTY},s.a.createElement("span",null,"美化")),t&&s.a.createElement(k.MenuItem,{refKey:b.VIEW_MODES.RAW,active:this.state.activeView===b.VIEW_MODES.RAW},s.a.createElement("span",null,"原")),i)):s.a.createElement(d.Tabs,{type:"secondary",defaultActive:b.VIEW_MODES.PRETTY,activeRef:this.state.activeView,onChange:this.handleViewChange},s.a.createElement(d.Tab,{refKey:b.VIEW_MODES.PRETTY,className:"text-editor-tab--pretty"},"美化"),t&&s.a.createElement(d.Tab,{refKey:b.VIEW_MODES.RAW,className:"text-editor-tab--raw"},"原"),i),e&&this.props.languages&&s.a.createElement("div",null,s.a.createElement(k.Dropdown,{className:"text-editor__language-dropdown",onSelect:this.props.onLanguageSelect},s.a.createElement(k.DropdownButton,{type:"secondary",size:"small"},s.a.createElement(y.Button,null,s.a.createElement("span",null,r))),s.a.createElement(k.DropdownMenu,{fluid:!0},n.map(this.props.languages,(n=>s.a.createElement(k.MenuItem,{refKey:n.key,key:n.key},s.a.createElement("span",null,n.label))))))),e&&t&&s.a.createElement("div",null,s.a.createElement(c.Button,{type:"tertiary",icon:"icon-action-wrap-stroke",className:`text-editor__line-wrap-button ${!1!==this.props.wordWrap&&"is-active"}`,onClick:this.props.onWordWrapClick})),s.a.createElement("div",{className:"text-editor__feedback-text"},s.a.createElement("span",null,this.state.editorFeedbackMessage))),s.a.createElement("div",{style:{display:"flex",flexDirection:"row-reverse",alignItems:"center"}},this.isTextEditorView()&&s.a.createElement("div",null,s.a.createElement(c.Button,{type:"tertiary",icon:"icon-action-copy-stroke",className:"text-editor__copy-button",onClick:this.handleCopyText}),s.a.createElement(c.Button,{type:"tertiary",icon:"icon-action-search-stroke",className:"text-editor__search-button",onClick:this.handleOpenFindWidget}))))}renderCustomView(){let r=null;return n.forEach(this.props.customTabs,(n=>{"string"==typeof n.name&&"function"==typeof n.renderContent&&this.state.activeView===n.name&&(r=n.renderContent())})),r}render(){return s.a.createElement("div",{className:"text-editor",style:this.getEditorStyles(),ref:n=>this.editorContainer=n},this.props.showActionBar&&this.renderActionBar(),s.a.createElement(l.default,{handlers:this.getKeyMapHandlers(),keyMap:Object(u.default)()},s.a.createElement("div",{ref:n=>this._node=n,style:this.getEditorNodeStyles(),onContextMenu:this.handleContextMenu})),!this.props.hideActionBar&&this.renderCustomView(),!this.state.isMounted&&s.a.createElement(p.default,{className:"text-editor__loading-indicator"}))}}}.call(this,e("../../node_modules/lodash/lodash.js"),e("../../node_modules/webpack/buildin/global.js"))},"../../packages/client-foundation/text-editor/src/constants.js":function(n,r,e){"use strict";e.r(r),e.d(r,"VIEW_MODES",(function(){return t})),e.d(r,"MONACO_THEMES",(function(){return i})),e.d(r,"THEME_MAP",(function(){return s})),e.d(r,"LANGUAGE_PLAINTEXT",(function(){return a})),e.d(r,"EDITOR_FEEDBACK_STATES",(function(){return o})),e.d(r,"TEXT_EDITOR_LANGUAGE_MAP",(function(){return c})),e.d(r,"CUSTOMIZABLE_TEXT_EDITOR_SETTINGS",(function(){return d})),e.d(r,"TEXT_EDITOR_VALIDATION_MESSAGE_LEVEL",(function(){return y})),e.d(r,"TEXT_EDITOR_DEFAULT_SETTINGS",(function(){return k})),e.d(r,"NEW_LANGUAGES",(function(){return g}));const t={PRETTY:"pretty",RAW:"raw",PREVIEW:"preview"},i={LIGHT:"vs-light",DARK:"vs-dark",POSTMAN_LIGHT:"postmanThemeLight",POSTMAN_DARK:"postmanThemeDark"},s={light:i.POSTMAN_LIGHT,dark:i.POSTMAN_DARK},a="plaintext",o={FORMATTING:"格式化中..."},c={text:"plaintext",c_cpp:"cpp",golang:"go",objectivec:"objective-c",ocaml:"fsharp",graphql_sdl:"graphql"},d=["editorFontFamily","responseFontSize","editorIndentCount","editorIndentType","editorAutoCloseBrackets","editorAutoCloseQuotes","editorRenderNonPrintable"],y={INFO:1,WARNING:2,ERROR:3},k={FONT_SIZE:12,INDENT_COUNT:4,INDENT_TYPE:"space",AUTO_CLOSE_BRACKETS:!0,AUTO_CLOSE_QUOTES:!0,RENDER_NON_PRINTABLE:!1},g=["hexdump","hex","base64","proto"]},"../../packages/client-foundation/text-editor/src/dom.js":function(n,r,e){"use strict";function t(){if(!document.querySelector("#monaco-overflowing-widgets-container")){let n=document.createElement("div");n.id="monaco-overflowing-widgets-container",n.classList.add("monaco-editor"),document.querySelector("body").appendChild(n)}}e.r(r),e.d(r,"createOverflowingWidgetsContainerNode",(function(){return t}))},"../../packages/client-foundation/text-editor/src/keymaps.js":function(n,r,e){"use strict";e.r(r),function(n){const e={handleFoldAll:"mod+alt+0",handleUnfoldAll:"mod+alt+shift+0",handleFoldSelection:["mod+alt+l","mod+f1"],handleUnfoldSelection:["mod+alt+shift+l","mod+shift+f1"],handleJumpToMatchingBracket:"ctrl+p",handleFormatDocument:"mod+b",handleDeleteLine:"mod+d",handleDuplicateSelection:"mod+shift+d",handleToUpperCase:"ctrl+u",handleToLowerCase:"ctrl+shift+u",handleSelectionToBracket:"ctrl+shift+p",handleToggleComment:"mod+/"},t={handleFoldAll:"alt+0",handleUnfoldAll:"alt+shift+0",handleFoldSelection:["alt+l","mod+f1"],handleUnfoldSelection:["alt+shift+l","mod+shift+f1"],handleJumpToMatchingBracket:"mod+p",handleFormatDocument:"mod+b",handleDeleteLine:"mod+d",handleDuplicateSelection:"mod+shift+d",handleToUpperCase:"ctrl+u",handleToLowerCase:"ctrl+shift+u",handleSelectionToBracket:"ctrl+shift+p",handleToggleComment:"mod+/"};r.default=()=>"darwin"===n.process.platform?e:t}.call(this,e("../../node_modules/webpack/buildin/global.js"))},"../../packages/client-foundation/text-editor/src/language.js":function(n,r,e){"use strict";e.r(r),e.d(r,"getMonacoLanguageName",(function(){return s})),e.d(r,"transformResponseForLanguage",(function(){return a})),e.d(r,"registerAllNewLanguages",(function(){return o})),e.d(r,"registerNewLanguage",(function(){return c}));var t=e("../../packages/client-foundation/text-editor/src/constants.js"),i=e("../../packages/client-foundation/text-editor/src/unescape.js");function s(n){return t.TEXT_EDITOR_LANGUAGE_MAP[n]||n}const a={json:function(n){return Object(i.unescape)(n)}};function o(n){for(const r of t.NEW_LANGUAGES)c(n,r)}function c(n,r){n.languages.register({id:r})}},"../../packages/client-foundation/text-editor/src/settings.js":function(n,r,e){"use strict";function t(n){return pm.settings.getSetting(n)}e.r(r),e.d(r,"getSettingValue",(function(){return t}))},"../../packages/client-foundation/text-editor/src/themes.js":function(n,r,e){"use strict";e.r(r),function(n){e.d(r,"themes",(function(){return s})),e.d(r,"defineTheme",(function(){return a}));var t=e("../../node_modules/@postman/aether/esmLib/index.js");function i(){return i=Object.assign||function(n){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])}return n},i.apply(this,arguments)}const s=[];s.push({id:"postmanThemeLight",props:{base:"vs",inherit:!0,colors:{"editor.background":t.light["background-color-primary"]},rules:[{token:"comment",foreground:"#5F8FBF",fontStyle:""},{token:"string",foreground:"#2A00FF",fontStyle:""},{token:"constant.character.escape",foreground:"#7090FF",fontStyle:""},{token:"constant.other.placeholder",foreground:"#7090FF",fontStyle:""},{token:"constant.numeric",foreground:"#FF00AA",fontStyle:""},{token:"keyword.other.unit",foreground:"#FF00AA",fontStyle:""},{token:"keyword",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.primitive",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.class",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.struct",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.enum",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.modifier",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.namespace",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.template",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.function",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.union",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.js",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.interface",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.impl",foreground:"#800555",fontStyle:"bold"},{token:"storage.type.trait",foreground:"#800555",fontStyle:"bold"},{token:"storage.modifier",foreground:"#800555",fontStyle:"bold"},{token:"keyword.operator.new",foreground:"#800555",fontStyle:"bold"},{token:"keyword.operator.delete",foreground:"#800555",fontStyle:"bold"},{token:"keyword.operator.word",foreground:"#800555",fontStyle:"bold"},{token:"keyword.operator.sizeof",foreground:"#800555",fontStyle:"bold"},{token:"keyword.operator.alignof",foreground:"#800555",fontStyle:"bold"},{token:"keyword.operator.logical.python",foreground:"#800555",fontStyle:"bold"},{token:"constant.language",foreground:"#800555",fontStyle:"bold"},{token:"variable.language",foreground:"#800555",fontStyle:"bold"},{token:"keyword.declaration.function",foreground:"#800555",fontStyle:"bold"},{token:"keyword.declaration.class",foreground:"#800555",fontStyle:"bold"},{token:"keyword.declaration.struct",foreground:"#800555",fontStyle:"bold"},{token:"keyword.declaration.enum",foreground:"#800555",fontStyle:"bold"},{token:"keyword.declaration.union",foreground:"#800555",fontStyle:"bold"},{token:"keyword.declaration.trait",foreground:"#800555",fontStyle:"bold"},{token:"keyword.declaration.interface",foreground:"#800555",fontStyle:"bold"},{token:"keyword.declaration.impl",foreground:"#800555",fontStyle:"bold"},{token:"keyword.declaration.type",foreground:"#800555",fontStyle:"bold"},{token:"keyword.operator",foreground:"#000000",fontStyle:""},{token:"entity.name.type",foreground:"#800555",fontStyle:""},{token:"storage.type",foreground:"#800555",fontStyle:""},{token:"entity.name.type.template",foreground:"#336633",fontStyle:"bold"},{token:"meta.kernel-call punctuation.section.kernel",foreground:"#336633",fontStyle:"bold"},{token:"meta.kernel-call entity.name.function",foreground:"#336633",fontStyle:""},{token:"variable.other.member",foreground:"#333333",fontStyle:""},{token:"variable.other.property",foreground:"#333333",fontStyle:""},{token:"entity.name.function",foreground:"#000000",fontStyle:"bold"},{token:"meta.preprocessor",foreground:"#808080",fontStyle:""},{token:"meta.preprocessor keyword.control.directive",foreground:"#7F3F6A",fontStyle:"bold"},{token:"meta.preprocessor string.quoted",foreground:"#9580FF",fontStyle:""},{token:"support.function",foreground:"#642880",fontStyle:"bold"},{token:"support.type.python",foreground:"#642880",fontStyle:"bold"},{token:"support.type.posix-reserved",foreground:"#642880",fontStyle:"bold"},{token:"variable.parameter.function.language.special.self",foreground:"#000000",fontStyle:"italic"},{token:"variable.language.special.self",foreground:"#000000",fontStyle:"italic"},{token:"variable.parameter.function.language.special.cls",foreground:"#000000",fontStyle:"italic"},{token:"variable.language.special.cls",foreground:"#000000",fontStyle:"italic"},{token:"entity.name.function.decorator",foreground:"#7D7D7D",fontStyle:"italic"},{token:"string.quoted.docstring",foreground:"#406080",fontStyle:""},{token:"entity.name.tag",foreground:"#800555",fontStyle:"bold"},{token:"entity.other.attribute-name",foreground:"#800555",fontStyle:""},{token:"meta.tag.preprocessor entity.name.tag",foreground:"#5F8FBF",fontStyle:"italic"},{token:"meta.tag.preprocessor entity.other.attribute-name",foreground:"#5F8FBF",fontStyle:"italic"},{token:"meta.tag.preprocessor string",foreground:"#5F8FBF",fontStyle:"italic"},{token:"meta.tag.preprocessor text",foreground:"#5F8FBF",fontStyle:"italic"},{token:"meta.tag.metadata.doctype entity.name.tag",foreground:"#5F8FBF",fontStyle:"italic"},{token:"meta.tag.metadata.doctype entity.other.attribute-name",foreground:"#5F8FBF",fontStyle:"italic"},{token:"meta.tag.metadata.doctype string",foreground:"#5F8FBF",fontStyle:"italic"},{token:"meta.tag.metadata.doctype text",foreground:"#5F8FBF",fontStyle:"italic"},{token:"entity.name.section",foreground:"#800555",fontStyle:"bold"},{token:"punctuation.definition.heading",foreground:"#800555",fontStyle:"bold"},{token:"markup.inline.raw",foreground:"#FF00AA",fontStyle:""},{token:"punctuation.definition.raw",foreground:"#FF00AA",fontStyle:""},{token:"punctuation.definition.list",foreground:"#000000",fontStyle:"bold"},{token:"markup.bold",foreground:"#000000",fontStyle:"bold"},{token:"markup.underline",foreground:"#000000",fontStyle:"underline"},{token:"markup.italic",foreground:"#000000",fontStyle:"italic"},{token:"keyword.codetag",foreground:"#86A3BF",fontStyle:"bold"},{token:"support",foreground:"#336633",fontStyle:""},{token:"token.info-token",foreground:"#316BCD"},{token:"token.warn-token",foreground:"#CD9731"},{token:"token.error-token",foreground:"#CD3131"},{token:"token.debug-token",foreground:"#800080"},{token:"postman.variable.json",foreground:"#F26B3A",fontStyle:"italic"},{token:"postman.variable.string.json",foreground:"#F26B3A",fontStyle:"italic"},{token:"key.identifier",foreground:"#7f0055"},{token:"argument.identifier",foreground:"#7f007f"},{token:"graphql.types",foreground:"#7f007f"}]}}),s.push({id:"postmanThemeDark",props:{base:"vs-dark",inherit:!0,colors:{"activityBar.background":"#282828","activityBar.foreground":"#f8f8f2","badge.background":"#75715e","badge.foreground":"#f8f8f2","button.background":"#75715e","debugToolBar.background":"#1e1f1c","diffEditor.insertedTextBackground":"#4b661680","diffEditor.removedTextBackground":"#90274a70","dropdown.background":"#414339","dropdown.listBackground":"#1e1f1c","editor.background":t.dark["background-color-primary"],"editor.foreground":"#f8f8f2","editor.lineHighlightBackground":"#3e3d32","editor.selectionBackground":"#878b9180","editor.selectionHighlightBackground":"#575b6180","editor.wordHighlightBackground":"#4a4a7680","editor.wordHighlightStrongBackground":"#6a6a9680","editorCursor.foreground":"#f8f8f0","editorGroup.border":"#34352f","editorGroup.dropBackground":"#41433980","editorGroupHeader.tabsBackground":"#1e1f1c","editorHoverWidget.background":"#414339","editorHoverWidget.border":"#75715e","editorIndentGuide.activeBackground":"#767771","editorIndentGuide.background":"#464741","editorLineNumber.activeForeground":"#c2c2bf","editorLineNumber.foreground":"#90908a","editorSuggestWidget.background":"#272822","editorSuggestWidget.border":"#75715e","editorWhitespace.foreground":"#464741","editorWidget.background":"#1e1f1c",focusBorder:"#75715e","input.background":"#414339","inputOption.activeBorder":"#75715e","inputValidation.errorBackground":"#90274a","inputValidation.errorBorder":"#f92672","inputValidation.infoBackground":"#546190","inputValidation.infoBorder":"#819aff","inputValidation.warningBackground":"#848528","inputValidation.warningBorder":"#e2e22e","list.activeSelectionBackground":"#75715e","list.dropBackground":"#414339","list.focusBackground":"#414339","list.highlightForeground":"#f8f8f2","list.hoverBackground":"#3e3d32","list.inactiveSelectionBackground":"#414339","menu.background":"#1e1f1c","menu.foreground":"#cccccc","minimap.selectionHighlight":"#878b9180","panel.border":"#414339","panelTitle.activeBorder":"#75715e","panelTitle.activeForeground":"#f8f8f2","panelTitle.inactiveForeground":"#75715e","peekView.border":"#75715e","peekViewEditor.background":"#272822","peekViewEditor.matchHighlightBackground":"#75715e","peekViewResult.background":"#1e1f1c","peekViewResult.matchHighlightBackground":"#75715e","peekViewResult.selectionBackground":"#414339","peekViewTitle.background":"#1e1f1c","pickerGroup.foreground":"#75715e","progressBar.background":"#75715e","selection.background":"#ccccc7","settings.numberInputBackground":"#32342d","settings.textInputBackground":"#32342d","sideBar.background":"#1e1f1c","sideBarSectionHeader.background":"#272822","statusBar.background":"#414339","statusBar.debuggingBackground":"#75715e","statusBar.noFolderBackground":"#414339","statusBarItem.remoteBackground":"#ac6218","tab.border":"#1e1f1c","tab.inactiveBackground":"#34352f","tab.inactiveForeground":"#ccccc7","terminal.ansiBlack":"#333333","terminal.ansiBlue":"#6a7ec8","terminal.ansiBrightBlack":"#666666","terminal.ansiBrightBlue":"#819aff","terminal.ansiBrightCyan":"#66d9ef","terminal.ansiBrightGreen":"#a6e22e","terminal.ansiBrightMagenta":"#ae81ff","terminal.ansiBrightRed":"#f92672","terminal.ansiBrightWhite":"#f8f8f2","terminal.ansiBrightYellow":"#e2e22e","terminal.ansiCyan":"#56adbc","terminal.ansiGreen":"#86b42b","terminal.ansiMagenta":"#8c6bc8","terminal.ansiRed":"#c4265e","terminal.ansiWhite":"#e3e3dd","terminal.ansiYellow":"#b3b42b","titleBar.activeBackground":"#1e1f1c","widget.shadow":"#000000"},rules:[{token:"meta.embedded",foreground:"#F8F8F2"},{token:"source.groovy.embedded",foreground:"#F8F8F2"},{token:"comment",foreground:"#88846F"},{token:"string",foreground:"#E6DB74"},{token:"punctuation.definition.template-expression",foreground:"#F92672"},{token:"punctuation.section.embedded",foreground:"#F92672"},{token:"meta.template.expression",foreground:"#F8F8F2"},{token:"constant.numeric",foreground:"#AE81FF"},{token:"constant.language",foreground:"#AE81FF"},{token:"constant.character",foreground:"#AE81FF"},{token:"constant.other",foreground:"#AE81FF"},{token:"variable",foreground:"#F8F8F2",fontStyle:""},{token:"keyword",foreground:"#F92672"},{token:"storage",foreground:"#F92672",fontStyle:""},{token:"storage.type",foreground:"#66D9EF",fontStyle:"italic"},{token:"entity.name.type",foreground:"#A6E22E",fontStyle:"underline"},{token:"entity.name.class",foreground:"#A6E22E",fontStyle:"underline"},{token:"entity.name.namespace",foreground:"#A6E22E",fontStyle:"underline"},{token:"entity.name.scope-resolution",foreground:"#A6E22E",fontStyle:"underline"},{token:"entity.other.inherited-class",foreground:"#A6E22E",fontStyle:"italic underline"},{token:"entity.name.function",foreground:"#A6E22E",fontStyle:""},{token:"variable.parameter",foreground:"#FD971F",fontStyle:"italic"},{token:"entity.name.tag",foreground:"#F92672",fontStyle:""},{token:"entity.other.attribute-name",foreground:"#A6E22E",fontStyle:""},{token:"support.function",foreground:"#66D9EF",fontStyle:""},{token:"support.constant",foreground:"#66D9EF",fontStyle:""},{token:"support.type",foreground:"#66D9EF",fontStyle:"italic"},{token:"support.class",foreground:"#66D9EF",fontStyle:"italic"},{token:"support.other.variable",fontStyle:""},{token:"invalid",foreground:"#F8F8F0",fontStyle:""},{token:"invalid.deprecated",foreground:"#F8F8F0"},{token:"meta.structure.dictionary.json string.quoted.double.json",foreground:"#CFCFC2"},{token:"meta.diff",foreground:"#75715E"},{token:"meta.diff.header",foreground:"#75715E"},{token:"markup.deleted",foreground:"#F92672"},{token:"markup.inserted",foreground:"#A6E22E"},{token:"markup.changed",foreground:"#E6DB74"},{token:"constant.numeric.line-number.find-in-files - match",foreground:"#AE81FFA0"},{token:"entity.name.filename.find-in-files",foreground:"#E6DB74"},{token:"markup.quote",foreground:"#F92672"},{token:"markup.list",foreground:"#E6DB74"},{token:"markup.bold",foreground:"#66D9EF"},{token:"markup.italic",foreground:"#66D9EF"},{token:"markup.inline.raw",foreground:"#FD971F",fontStyle:""},{token:"markup.heading",foreground:"#A6E22E"},{token:"markup.heading.setext",foreground:"#A6E22E",fontStyle:"bold"},{token:"markup.heading.markdown",fontStyle:"bold"},{token:"markup.quote.markdown",foreground:"#75715E",fontStyle:"italic"},{token:"markup.bold.markdown",fontStyle:"bold"},{token:"string.other.link.title.markdown",foreground:"#AE81FF"},{token:"string.other.link.description.markdown",foreground:"#AE81FF"},{token:"markup.underline.link.markdown",foreground:"#E6DB74"},{token:"markup.underline.link.image.markdown",foreground:"#E6DB74"},{token:"markup.italic.markdown",fontStyle:"italic"},{token:"markup.list.unnumbered.markdown",foreground:"#F8F8F2"},{token:"markup.list.numbered.markdown",foreground:"#F8F8F2"},{token:"punctuation.definition.list.begin.markdown",foreground:"#A6E22E"},{token:"token.info-token",foreground:"#6796E6"},{token:"token.warn-token",foreground:"#CD9731"},{token:"token.error-token",foreground:"#F44747"},{token:"token.debug-token",foreground:"#B267E6"},{token:"variable.language",foreground:"#FD971F"},{token:"postman.variable.json",foreground:"#F26B3A",fontStyle:"italic"},{token:"postman.variable.string.json",foreground:"#F26B3A",fontStyle:"italic"},{token:"key.identifier",foreground:"#ffe200"},{token:"argument.identifier",foreground:"#fd971f"},{token:"graphql.types",foreground:"#66d9ef"}]}});const a=(r,e,t)=>{if(t&&r.editor.defineTheme){const a=(n=>{const{tokenColors:r=[],colors:e={}}=n,t=r.filter((n=>n.settings&&n.scope&&(({foreground:n,background:r})=>"inherit"!==n&&"inherit"!==r)(n.settings))).reduce(((n,r)=>{const e={foreground:r.settings.foreground,background:r.settings.background,fontStyle:r.settings.fontStyle};return("string"==typeof r.scope?r.scope.split(",").map((n=>n.trim())):r.scope).map((r=>n.push(i({token:r},e)))),n}),[]),s=e;return Object.keys(e).forEach((n=>(s[n]||delete s[n],n))),{colors:s,rules:t,type:n.type}})(t);try{r.editor.defineTheme(e,{base:(s=a.type,"dark"===s?"vs-dark":"hc"===s?"hc-black":"vs"),inherit:!0,colors:a.colors,rules:a.rules})}catch(r){n.noop()}}var s}}.call(this,e("../../node_modules/lodash/lodash.js"))},"../../packages/client-foundation/text-editor/src/tokenizer/textmate.tokenizer.js":function(n,r,e){"use strict";e.r(r),e.d(r,"default",(function(){return p}));var t=e("./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Typescript.tmLanguage"),i=e("./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Hex.tmLanguage"),s=e("./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Base64.tmLanguage"),a=e("./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Proto.tmLanguage"),o=e("./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Hexdump.tmLanguage");function c(){return c=Object.assign||function(n){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])}return n},c.apply(this,arguments)}var d=e("../../node_modules/vscode-textmate/release/main.js");let y=null;async function k(){if(!y){let n=e("../../node_modules/vscode-oniguruma/release/main.js");const r="browser"===window.SDK_PLATFORM?await fetch(self.postman_static_assets_url+"/onig.wasm"):await fetch("../js/onig.wasm");y=n.loadWASM(r).then((r=>({createOnigScanner:r=>new n.OnigScanner(r),createOnigString:r=>new n.OnigString(r)})))}return y}function g(n){let r=null,e=null;switch(n){case"source.tsx":r="typescript",e=t.default;break;case"source.hexdump":r="hexdump",e=o.default;break;case"source.hex":r="hex",e=i.default;break;case"source.base64":r="base64",e=s.default;break;case"source.proto":r="proto",e=a.default;break;default:return null}return Promise.resolve(d.parseRawGrammar(e,r))}function l(n,r){let e="";for(let n=r[0].length-1;n>=0;n-=1){const t=r[0][n];if("."===t)break;e=t+e}for(let t=r.length-1;t>=0;t-=1){const i=r[t];for(let r=i.length-1;r>=0;r-=1){const t=i[r];let s=n&&n._themeService&&n._themeService.getTheme();if("."===t){const n=i.slice(0,r);if(s&&s._tokenTheme._match(n+"."+e)._foreground>1)return n+"."+e;if(s&&s._tokenTheme._match(n)._foreground>1)return n}}}return""}class u{constructor(n){this._ruleStack=n}get ruleStack(){return this._ruleStack}clone(){return new u(this._ruleStack)}equals(n){return!!(n&&n instanceof u&&n===this&&n._ruleStack===this._ruleStack)}}async function p(n,r){var e=new(0,d.Registry)({loadGrammar:g,onigLib:k()});let t=new Map;t.set("javascript","source.tsx"),t.set("hexdump","source.hexdump"),t.set("hex","source.hex"),t.set("base64","source.base64"),t.set("proto","source.proto"),Array.from(t.keys()).map((async i=>{let s=await e.loadGrammar(t.get(i));n.languages.setTokensProvider(i,{getInitialState:()=>new u(d.INITIAL),tokenize:(n,e)=>{n.length>2e4&&(n="");const t=s.tokenizeLine(n,e.ruleStack);return{endState:new u(t.ruleStack),tokens:t.tokens.map((n=>c({},n,{scopes:r?l(r,n.scopes):n.scopes[n.scopes.length-1]})))}}})}))}},"../../packages/client-foundation/text-editor/src/unescape.js":function(n,r,e){"use strict";e.r(r),e.d(r,"unescape",(function(){return a}));const t=/\\u([0-9A-Fa-f]{4})|\\(\/)/g;const i={"/":"/"},s={"\\u0008":"\\b","\\u0009":"\\t","\\u000a":"\\n","\\u000b":"\\u000b","\\u000c":"\\f","\\u000d":"\\r","\\u000A":"\\n","\\u000B":"\\u000b","\\u000C":"\\f","\\u000D":"\\r","\\u0022":'\\"'};function a(n){return n?n.replace(t,((n,r,e)=>{return r?s[n]||(t=r,String.fromCodePoint(parseInt(t,16))):e?i[e]:void 0;var t})):""}},"./js/modules/services/LinkClickService.js":function(n,r,e){"use strict";e.r(r),function(n){e.d(r,"openLink",(function(){return a}));var t=e("./js/stores/get-store.js"),i=e("./js/external-navigation/ExternalNavigationService.js"),s=e("./runtime-repl/request-http/_api/RequestInterface.js");function a(r,e){let a=Object(t.getStore)("EditorStore").find(Object(t.getStore)("ActiveWorkspaceSessionStore").activeEditor),o={};if(a&&a.model&&a.model.requestId&&(o={url:a.model.getViewModel("url")||"",headerData:a.model.getViewModel("headerData")||[]}),o.url&&"/"==r[0]&&(r=function(n){var r=n.indexOf("//");if(-1==r)return n.split("/")[0];var e=n.substring(r+2);return n.substring(0,r)+"//"+e.split("/")[0]}(o.url)+r),n.get(e,"openInBrowser",!1))Object(i.openExternalLink)(r);else{let n={url:r};pm.settings.getSetting("retainLinkHeaders")&&(n.headerData=o.headerData||[]),Object(s.openNewRequestTab)({initialValue:n})}}}.call(this,e("./node_modules/lodash/lodash.js"))},"./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Base64.tmLanguage":function(n,r,e){"use strict";e.r(r),r.default='<?xml version="1.0" encoding="UTF-8"?>\r\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\r\n<plist version="1.0">\r\n  <dict>\r\n    <key>fileTypes</key>\r\n    <array>\r\n      <string>base64</string>\r\n    </array>\r\n    <key>name</key>\r\n    <string>Base64</string>\r\n    <key>patterns</key>\r\n    <array>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>[a-zA-Z\\d+/]{4}</string>\r\n        <key>name</key>\r\n        <string>keyword.bytes.base64</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>[a-zA-Z\\d+/]{3}=$</string>\r\n        <key>name</key>\r\n        <string>keyword.bytes.base64</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>[a-zA-Z\\d+/]{2}==$</string>\r\n        <key>name</key>\r\n        <string>keyword.bytes.base64</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>\\S</string>\r\n        <key>name</key>\r\n        <string>invalid.illegal.base64</string>\r\n      </dict>\r\n    </array>\r\n    <key>scopeName</key>\r\n    <string>source.base64</string>\r\n    <key>uuid</key>\r\n    <string>B8374ECF-69FA-40C0-8CEA-385C4AA08665</string>\r\n  </dict>\r\n</plist>\r\n'},"./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Hex.tmLanguage":function(n,r,e){"use strict";e.r(r),r.default='<?xml version="1.0" encoding="UTF-8"?>\r\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\r\n<plist version="1.0">\r\n  <dict>\r\n    <key>fileTypes</key>\r\n    <array>\r\n      <string>hex</string>\r\n    </array>\r\n    <key>name</key>\r\n    <string>Hex</string>\r\n    <key>patterns</key>\r\n    <array>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>[a-fA-F\\d]{2}</string>\r\n        <key>name</key>\r\n        <string>keyword.byte.hex</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>\\S</string>\r\n        <key>name</key>\r\n        <string>invalid.illegal.hex</string>\r\n      </dict>\r\n    </array>\r\n    <key>scopeName</key>\r\n    <string>source.hex</string>\r\n    <key>uuid</key>\r\n    <string>B8374ECF-69FA-40C0-8CEA-385C4AA08664</string>\r\n  </dict>\r\n</plist>\r\n'},"./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Hexdump.tmLanguage":function(n,r,e){"use strict";e.r(r),r.default='<?xml version="1.0" encoding="UTF-8"?>\r\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\r\n<plist version="1.0">\r\n  <dict>\r\n    <key>fileTypes</key>\r\n    <array>\r\n      <string>hexdump</string>\r\n    </array>\r\n    <key>name</key>\r\n    <string>Hexdump</string>\r\n    <key>patterns</key>\r\n    <array>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>Hex Inspector</string>\r\n        <key>name</key>\r\n        <string>markup.heading.2.html</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>(Big|Little|Endian)</string>\r\n        <key>name</key>\r\n        <string>markup.italic</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>(Address|Selection)</string>\r\n        <key>name</key>\r\n        <string>entity.name.function</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>(Int8|Uint8|Int16|Uint16|Int32|Uint32|Int64|Uint64|Float32|Float64|String)</string>\r\n        <key>name</key>\r\n        <string>entity.name.type</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>^(\\s\\sOffset:\\s)?.*\\t$</string>\r\n        <key>name</key>\r\n        <string>keyword.header.hex</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>^([a-fA-F\\d]{8}:)</string>\r\n        <key>name</key>\r\n        <string>keyword.address.hex</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>  [^\\s]*$</string>\r\n        <key>name</key>\r\n        <string>comment.ascii.hex</string>\r\n      </dict>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>^\\(hexdump cancelled\\.\\)</string>\r\n        <key>name</key>\r\n        <string>invalid.illegal</string>\r\n      </dict>\r\n    </array>\r\n    <key>scopeName</key>\r\n    <string>source.hexdump</string>\r\n    <key>uuid</key>\r\n    <string>B8374ECF-69FA-40C0-8CEA-385C4AA08663</string>\r\n  </dict>\r\n</plist>\r\n'},"./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Proto.tmLanguage":function(n,r,e){"use strict";e.r(r),r.default='<?xml version="1.0" encoding="UTF-8"?>\r\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\r\n<plist version="1.0">\r\n  <dict>\r\n    <key>name</key>\r\n    <string>Protocol Buffer 3</string>\r\n    <key>scopeName</key>\r\n    <string>source.proto</string>\r\n    <key>fileTypes</key>\r\n    <array>\r\n      <string>proto</string>\r\n    </array>\r\n    <key>patterns</key>\r\n    <array>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#comments</string>\r\n      </dict>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#syntax</string>\r\n      </dict>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#package</string>\r\n      </dict>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#import</string>\r\n      </dict>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#optionStmt</string>\r\n      </dict>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#message</string>\r\n      </dict>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#enum</string>\r\n      </dict>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#service</string>\r\n      </dict>\r\n    </array>\r\n    <key>repository</key>\r\n    <dict>\r\n      <key>comments</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>comment.block.proto</string>\r\n            <key>begin</key>\r\n            <string>/\\*</string>\r\n            <key>end</key>\r\n            <string>\\*/</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>comment.line.double-slash.proto</string>\r\n            <key>begin</key>\r\n            <string>//</string>\r\n            <key>end</key>\r\n            <string>$\\n?</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>syntax</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>\\s*(syntax)\\s*=\\s*("proto[23]")\\s*;</string>\r\n        <key>captures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>string.quoted.double.proto.syntax</string>\r\n          </dict>\r\n        </dict>\r\n      </dict>\r\n      <key>package</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>\\s*(package)\\s+([\\w.]+)\\s*;</string>\r\n        <key>captures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>string.unquoted.proto.package</string>\r\n          </dict>\r\n        </dict>\r\n      </dict>\r\n      <key>import</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>\\s*(import)\\s+(weak|public)?\\s*("[^"]+")\\s*;</string>\r\n        <key>captures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>string.quoted.double.proto.import</string>\r\n          </dict>\r\n        </dict>\r\n      </dict>\r\n      <key>optionStmt</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(option)\\s+(\\w+|\\(\\w+(\\.\\w+)*\\))(\\.\\w+)*\\s*=</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.other.proto</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.other.proto</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.other.proto</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>;</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#constants</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#number</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#subMsgOption</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>subMsgOption</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>\\{</string>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#kv</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comments</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>kv</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(\\w+)\\s*:</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>;|,|(?=[}/_a-zA-Z])</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#constants</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#number</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#subMsgOption</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>fieldOptions</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>\\[</string>\r\n        <key>end</key>\r\n        <string>\\]</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#constants</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#number</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#subMsgOption</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#optionName</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>optionName</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>(\\w+|\\(\\w+(\\.\\w+)*\\))(\\.\\w+)*</string>\r\n        <key>captures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.other.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.other.proto</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.other.proto</string>\r\n          </dict>\r\n        </dict>\r\n      </dict>\r\n      <key>message</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(message|extend)(\\s+)([A-Za-z_][A-Za-z0-9_.]*)(\\s*)(\\{)?</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.class.message.proto</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#reserved</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>$self</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#enum</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#optionStmt</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comments</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#oneof</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#field</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#mapfield</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>reserved</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(reserved)\\s+</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>;</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(\\d+)(\\s+(to)\\s+(\\d+))?</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.numeric.proto</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.other.proto</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.numeric.proto</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>field</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>\\s*(optional|repeated|required)?\\s*\\b([\\w.]+)\\s+(\\w+)\\s*=\\s*(0[xX][0-9a-fA-F]+|[0-9]+)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.proto</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.other.proto</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.numeric.proto</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>;</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#fieldOptions</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>mapfield</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>\\s*(map)\\s*&lt;\\s*([\\w.]+)\\s*,\\s*([\\w.]+)\\s*&gt;\\s+(\\w+)\\s*=\\s*(\\d+)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.proto</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.proto</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.other.proto</string>\r\n          </dict>\r\n          <key>5</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.numeric.proto</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>;</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#fieldOptions</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>oneof</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(oneof)\\s+([A-Za-z][A-Za-z0-9_]*)\\s*\\{?</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.other.proto</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#optionStmt</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comments</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#field</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>enum</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(enum)(\\s+)([A-Za-z][A-Za-z0-9_]*)(\\s*)(\\{)?</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.class.proto</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#reserved</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#optionStmt</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comments</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>([A-Za-z][A-Za-z0-9_]*)\\s*=\\s*(0[xX][0-9a-fA-F]+|[0-9]+)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.proto</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.numeric.proto</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>;</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#fieldOptions</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>service</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(service)\\s+([A-Za-z][A-Za-z0-9_.]*)\\s*\\{?</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.class.message.proto</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comments</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#optionStmt</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#method</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>method</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(rpc)\\s+([A-Za-z][A-Za-z0-9_]*)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.proto</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.function</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}|;</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comments</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#optionStmt</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#rpcKeywords</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#ident</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>rpcKeywords</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>\\b(stream|returns)\\b</string>\r\n        <key>name</key>\r\n        <string>keyword.other.proto</string>\r\n      </dict>\r\n      <key>ident</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>[A-Za-z][A-Za-z0-9_]*</string>\r\n        <key>name</key>\r\n        <string>entity.name.class.proto</string>\r\n      </dict>\r\n      <key>constants</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>\\b(true|false|max|[A-Z_]+)\\b</string>\r\n        <key>name</key>\r\n        <string>constant.language.proto</string>\r\n      </dict>\r\n      <key>storagetypes</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>\\b(double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b</string>\r\n        <key>name</key>\r\n        <string>storage.type.proto</string>\r\n      </dict>\r\n      <key>string</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>(\'([^\']|\\\')*\')|("([^"]|\\")*")</string>\r\n        <key>name</key>\r\n        <string>string.quoted.double.proto</string>\r\n      </dict>\r\n      <key>number</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>constant.numeric.proto</string>\r\n        <key>match</key>\r\n        <string>\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b</string>\r\n      </dict>\r\n    </dict>\r\n  </dict>\r\n</plist>\r\n'},"./node_modules/raw-loader/dist/cjs.js!../../packages/client-foundation/text-editor/src/tokenizer/grammar/Typescript.tmLanguage":function(n,r,e){"use strict";e.r(r),r.default='<?xml version="1.0" encoding="UTF-8"?>\r\n<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\r\n<plist version="1.0">\r\n  <dict>\r\n    <key>name</key>\r\n    <string>TypeScriptReact</string>\r\n    <key>scopeName</key>\r\n    <string>source.tsx</string>\r\n    <key>fileTypes</key>\r\n    <array>\r\n      <string>tsx</string>\r\n    </array>\r\n    <key>uuid</key>\r\n    <string>805375ec-d614-41f5-8993-5843fe63ea82</string>\r\n    <key>patterns</key>\r\n    <array>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#directives</string>\r\n      </dict>\r\n      <dict>\r\n        <key>include</key>\r\n        <string>#statements</string>\r\n      </dict>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>comment.line.shebang.ts</string>\r\n        <key>match</key>\r\n        <string>\\A(#!).*(?=$)</string>\r\n        <key>captures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.comment.ts</string>\r\n          </dict>\r\n        </dict>\r\n      </dict>\r\n    </array>\r\n    <key>repository</key>\r\n    <dict>\r\n      <key>statements</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#template</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#control-statement</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#after-operator-block-as-object-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#decl-block</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#label</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expression</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-semicolon</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>declaration</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#decorator</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#var-expr</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#interface-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#enum-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#namespace-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-alias-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#import-equals-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#import-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#export-declaration</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>control-statement</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#switch-statement</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#for-loop</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.trycatch.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(catch|finally|throw|try)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(break|continue|goto)\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.loop.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.label.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.loop.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(break|continue|do|goto|while)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.flow.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(return)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.switch.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(case|default|switch)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.conditional.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(else|if)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.with.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(with)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.other.debugger.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(debugger)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(declare)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>label</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\s*(:)(?=\\s*\\{)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.label.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.separator.label.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#decl-block</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\s*(:)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.label.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.separator.label.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>expression</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expressionWithoutIdentifiers</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#identifiers</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expressionPunctuations</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>expressionWithoutIdentifiers</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#regex</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#template</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-expression</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-expression</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#arrow-function</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#paren-expression-possibly-arrow</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#cast</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#ternary-expression</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#new-expr</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#instanceof-expr</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#object-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expression-operators</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-call</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#support-objects</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#paren-expression</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>expressionPunctuations</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-accessor</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>decorator</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.decorator.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))\\@</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.decorator.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?=\\s)</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expression</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>var-expr</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.var.expr.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(\\bexport)\\s+)?\\b(var|let|const(?!\\s+enum\\b))(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.export.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?=$|^|;|}|(\\s+(of|in)\\s+))</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#destructuring-variable</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#var-single-variable</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#variable-initializer</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(,)\\s*(?!\\S)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.separator.comma.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;!,)((?==|;|}|(\\s+(of|in)\\s+)|^\\s*$))|((?&lt;=\\S)(?=\\s*$))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#destructuring-variable</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#var-single-variable</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#punctuation-comma</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>var-single-variable</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.var-single-variable.expr.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=\\s*\r\n# function assignment |\r\n(=\\s*(\r\n  ((async\\s+)?(\r\n    (function\\s*[(&lt;*]) |\r\n    (function\\s+) |\r\n    ([_$[:alpha:]][_$[:alnum:]]*\\s*=&gt;)\r\n  )) |\r\n  ((async\\s*)?(\r\n    ([\\(]\\s*([\\{\\[]\\s*)?$) |\r\n    # sure shot arrow functions even if =&gt; is on new line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\r\n  [(]\\s*\r\n  (\r\n    ([)]\\s*:) |                                                                                       # ():\r\n    ((\\.\\.\\.\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\s*:)                                                                  # [(]param: | [(]...param:\r\n  )\r\n) |\r\n(\r\n  [&lt;]\\s*[_$[:alpha:]][_$[:alnum:]]*\\s+extends\\s*[^=&gt;]                                                              # &lt; typeparam extends\r\n) |\r\n# arrow function possible to detect only with =&gt; on same line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?                                                                                 # typeparameters\r\n  \\(\\s*(([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\.\\.\\.\\s*[_$[:alpha:]]))([^()]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\)))*)?\\)   # parameters\r\n  (\\s*:\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+)?                                                                        # return type\r\n  \\s*=&gt;                                                                                               # arrow operator\r\n)\r\n  ))\r\n)) |\r\n# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;\r\n(:\\s*(\r\n  (&lt;) |\r\n  ([(]\\s*(\r\n    ([)]) |\r\n    (\\.\\.\\.) |\r\n    ([_$[:alnum:]]+\\s*(\r\n      ([:,?=])|\r\n      ([)]\\s*=&gt;)\r\n    ))\r\n  ))\r\n)) |\r\n(:\\s*([\\(]\\s*([\\{\\[]\\s*)?$)) |\r\n(:\\s*(=&gt;|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\\s*(\r\n  ((async\\s+)?(\r\n    (function\\s*[(&lt;*]) |\r\n    (function\\s+) |\r\n    ([_$[:alpha:]][_$[:alnum:]]*\\s*=&gt;)\r\n  )) |\r\n  ((async\\s*)?(\r\n    ([\\(]\\s*([\\{\\[]\\s*)?$) |\r\n    # sure shot arrow functions even if =&gt; is on new line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\r\n  [(]\\s*\r\n  (\r\n    ([)]\\s*:) |                                                                                       # ():\r\n    ((\\.\\.\\.\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\s*:)                                                                  # [(]param: | [(]...param:\r\n  )\r\n) |\r\n(\r\n  [&lt;]\\s*[_$[:alpha:]][_$[:alnum:]]*\\s+extends\\s*[^=&gt;]                                                              # &lt; typeparam extends\r\n) |\r\n# arrow function possible to detect only with =&gt; on same line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?                                                                                 # typeparameters\r\n  \\(\\s*(([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\.\\.\\.\\s*[_$[:alpha:]]))([^()]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\)))*)?\\)   # parameters\r\n  (\\s*:\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+)?                                                                        # return type\r\n  \\s*=&gt;                                                                                               # arrow operator\r\n)\r\n  ))\r\n)))</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.definition.variable.tsx entity.name.function.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=$|^|[;,=}]|(\\s+(of|in)\\s+))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#var-single-variable-type-annotation</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.var-single-variable.expr.tsx</string>\r\n            <key>begin</key>\r\n            <string>([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.definition.variable.tsx variable.other.constant.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=$|^|[;,=}]|(\\s+(of|in)\\s+))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#var-single-variable-type-annotation</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.var-single-variable.expr.tsx</string>\r\n            <key>begin</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.definition.variable.tsx variable.other.readwrite.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=$|^|[;,=}]|(\\s+(of|in)\\s+))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#var-single-variable-type-annotation</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>var-single-variable-type-annotation</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-annotation</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>destructuring-variable</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object-binding-pattern-variable.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;!=|:|^of|[^\\._$[:alnum:]]of|^in|[^\\._$[:alnum:]]in)\\s*(?=\\{)</string>\r\n            <key>end</key>\r\n            <string>(?=$|^|[;,=}]|(\\s+(of|in)\\s+))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#object-binding-pattern</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-annotation</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.array-binding-pattern-variable.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;!=|:|^of|[^\\._$[:alnum:]]of|^in|[^\\._$[:alnum:]]in)\\s*(?=\\[)</string>\r\n            <key>end</key>\r\n            <string>(?=$|^|[;,=}]|(\\s+(of|in)\\s+))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#array-binding-pattern</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-annotation</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>object-binding-element</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?x)(?=((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(:))</string>\r\n            <key>end</key>\r\n            <string>(?=,|\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#object-binding-element-propertyName</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#binding-element</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#object-binding-pattern</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#destructuring-variable-rest</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#variable-initializer</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>object-binding-element-propertyName</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?x)(?=((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(:))</string>\r\n        <key>end</key>\r\n        <string>(:)</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.destructuring.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#array-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#numeric-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.object.property.tsx</string>\r\n            <key>match</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>binding-element</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#object-binding-pattern</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#array-binding-pattern</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#destructuring-variable-rest</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#variable-initializer</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>destructuring-variable-rest</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>(?:(\\.\\.\\.)\\s*)?([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n        <key>captures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.rest.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.definition.variable.tsx variable.other.readwrite.tsx</string>\r\n          </dict>\r\n        </dict>\r\n      </dict>\r\n      <key>object-binding-pattern</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?:(\\.\\.\\.)\\s*)?(\\{)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.rest.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.binding-pattern.object.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.binding-pattern.object.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#object-binding-element</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>array-binding-pattern</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?:(\\.\\.\\.)\\s*)?(\\[)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.rest.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.binding-pattern.array.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\]</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.binding-pattern.array.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#binding-element</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>parameter-name</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(public|protected|private|readonly)\\s+(?=(public|protected|private|readonly)\\s+)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)(?=\\s*\r\n# function assignment |\r\n(=\\s*(\r\n  ((async\\s+)?(\r\n    (function\\s*[(&lt;*]) |\r\n    (function\\s+) |\r\n    ([_$[:alpha:]][_$[:alnum:]]*\\s*=&gt;)\r\n  )) |\r\n  ((async\\s*)?(\r\n    ([\\(]\\s*([\\{\\[]\\s*)?$) |\r\n    # sure shot arrow functions even if =&gt; is on new line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\r\n  [(]\\s*\r\n  (\r\n    ([)]\\s*:) |                                                                                       # ():\r\n    ((\\.\\.\\.\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\s*:)                                                                  # [(]param: | [(]...param:\r\n  )\r\n) |\r\n(\r\n  [&lt;]\\s*[_$[:alpha:]][_$[:alnum:]]*\\s+extends\\s*[^=&gt;]                                                              # &lt; typeparam extends\r\n) |\r\n# arrow function possible to detect only with =&gt; on same line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?                                                                                 # typeparameters\r\n  \\(\\s*(([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\.\\.\\.\\s*[_$[:alpha:]]))([^()]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\)))*)?\\)   # parameters\r\n  (\\s*:\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+)?                                                                        # return type\r\n  \\s*=&gt;                                                                                               # arrow operator\r\n)\r\n  ))\r\n)) |\r\n# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;\r\n(:\\s*(\r\n  (&lt;) |\r\n  ([(]\\s*(\r\n    ([)]) |\r\n    (\\.\\.\\.) |\r\n    ([_$[:alnum:]]+\\s*(\r\n      ([:,?=])|\r\n      ([)]\\s*=&gt;)\r\n    ))\r\n  ))\r\n)) |\r\n(:\\s*([\\(]\\s*([\\{\\[]\\s*)?$)) |\r\n(:\\s*(=&gt;|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\\s*(\r\n  ((async\\s+)?(\r\n    (function\\s*[(&lt;*]) |\r\n    (function\\s+) |\r\n    ([_$[:alpha:]][_$[:alnum:]]*\\s*=&gt;)\r\n  )) |\r\n  ((async\\s*)?(\r\n    ([\\(]\\s*([\\{\\[]\\s*)?$) |\r\n    # sure shot arrow functions even if =&gt; is on new line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\r\n  [(]\\s*\r\n  (\r\n    ([)]\\s*:) |                                                                                       # ():\r\n    ((\\.\\.\\.\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\s*:)                                                                  # [(]param: | [(]...param:\r\n  )\r\n) |\r\n(\r\n  [&lt;]\\s*[_$[:alpha:]][_$[:alnum:]]*\\s+extends\\s*[^=&gt;]                                                              # &lt; typeparam extends\r\n) |\r\n# arrow function possible to detect only with =&gt; on same line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?                                                                                 # typeparameters\r\n  \\(\\s*(([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\.\\.\\.\\s*[_$[:alpha:]]))([^()]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\)))*)?\\)   # parameters\r\n  (\\s*:\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+)?                                                                        # return type\r\n  \\s*=&gt;                                                                                               # arrow operator\r\n)\r\n  ))\r\n)))</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.rest.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.function.tsx variable.language.this.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.function.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.optional.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))\\s*(\\??)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.rest.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.parameter.tsx variable.language.this.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.parameter.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.optional.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>destructuring-parameter</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.parameter.object-binding-pattern.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;!=|:)\\s*(\\{)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.binding-pattern.object.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\}</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.binding-pattern.object.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#parameter-object-binding-element</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.paramter.array-binding-pattern.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;!=|:)\\s*(\\[)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.binding-pattern.array.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\]</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.binding-pattern.array.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#parameter-binding-element</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#punctuation-comma</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>parameter-object-binding-element</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?x)(?=((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(:))</string>\r\n            <key>end</key>\r\n            <string>(?=,|\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#object-binding-element-propertyName</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#parameter-binding-element</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#parameter-object-binding-pattern</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#destructuring-parameter-rest</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#variable-initializer</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>parameter-binding-element</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#parameter-object-binding-pattern</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#parameter-array-binding-pattern</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#destructuring-parameter-rest</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#variable-initializer</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>destructuring-parameter-rest</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>(?:(\\.\\.\\.)\\s*)?([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n        <key>captures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.rest.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.parameter.tsx</string>\r\n          </dict>\r\n        </dict>\r\n      </dict>\r\n      <key>parameter-object-binding-pattern</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?:(\\.\\.\\.)\\s*)?(\\{)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.rest.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.binding-pattern.object.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.binding-pattern.object.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#parameter-object-binding-element</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>parameter-array-binding-pattern</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?:(\\.\\.\\.)\\s*)?(\\[)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.rest.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.binding-pattern.array.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\]</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.binding-pattern.array.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#parameter-binding-element</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>field-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.field.declaration.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?x)(?&lt;!\\()(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(readonly)\\s+)?(?=\\s*((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(\\?\\s*)?(=|:))</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?x)(?=\\}|;|,|$|(^(?!\\s*((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(\\?\\s*)?(=|:))))|(?&lt;=\\})</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#variable-initializer</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?x)(?=((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(\\?\\s*)?(=|:))</string>\r\n            <key>end</key>\r\n            <string>(?x)(?=[};,=]|$|(^(?!\\s*((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(\\?\\s*)?(=|:))))|(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-annotation</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#string</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#array-literal</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#numeric-literal</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n              <dict>\r\n                <key>match</key>\r\n                <string>(?x)([_$[:alpha:]][_$[:alnum:]]*)(\\?)?(?=(\\?\\s*)?\\s*\r\n# function assignment |\r\n(=\\s*(\r\n  ((async\\s+)?(\r\n    (function\\s*[(&lt;*]) |\r\n    (function\\s+) |\r\n    ([_$[:alpha:]][_$[:alnum:]]*\\s*=&gt;)\r\n  )) |\r\n  ((async\\s*)?(\r\n    ([\\(]\\s*([\\{\\[]\\s*)?$) |\r\n    # sure shot arrow functions even if =&gt; is on new line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\r\n  [(]\\s*\r\n  (\r\n    ([)]\\s*:) |                                                                                       # ():\r\n    ((\\.\\.\\.\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\s*:)                                                                  # [(]param: | [(]...param:\r\n  )\r\n) |\r\n(\r\n  [&lt;]\\s*[_$[:alpha:]][_$[:alnum:]]*\\s+extends\\s*[^=&gt;]                                                              # &lt; typeparam extends\r\n) |\r\n# arrow function possible to detect only with =&gt; on same line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?                                                                                 # typeparameters\r\n  \\(\\s*(([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\.\\.\\.\\s*[_$[:alpha:]]))([^()]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\)))*)?\\)   # parameters\r\n  (\\s*:\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+)?                                                                        # return type\r\n  \\s*=&gt;                                                                                               # arrow operator\r\n)\r\n  ))\r\n)) |\r\n# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;\r\n(:\\s*(\r\n  (&lt;) |\r\n  ([(]\\s*(\r\n    ([)]) |\r\n    (\\.\\.\\.) |\r\n    ([_$[:alnum:]]+\\s*(\r\n      ([:,?=])|\r\n      ([)]\\s*=&gt;)\r\n    ))\r\n  ))\r\n)) |\r\n(:\\s*([\\(]\\s*([\\{\\[]\\s*)?$)) |\r\n(:\\s*(=&gt;|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\\s*(\r\n  ((async\\s+)?(\r\n    (function\\s*[(&lt;*]) |\r\n    (function\\s+) |\r\n    ([_$[:alpha:]][_$[:alnum:]]*\\s*=&gt;)\r\n  )) |\r\n  ((async\\s*)?(\r\n    ([\\(]\\s*([\\{\\[]\\s*)?$) |\r\n    # sure shot arrow functions even if =&gt; is on new line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\r\n  [(]\\s*\r\n  (\r\n    ([)]\\s*:) |                                                                                       # ():\r\n    ((\\.\\.\\.\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\s*:)                                                                  # [(]param: | [(]...param:\r\n  )\r\n) |\r\n(\r\n  [&lt;]\\s*[_$[:alpha:]][_$[:alnum:]]*\\s+extends\\s*[^=&gt;]                                                              # &lt; typeparam extends\r\n) |\r\n# arrow function possible to detect only with =&gt; on same line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?                                                                                 # typeparameters\r\n  \\(\\s*(([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\.\\.\\.\\s*[_$[:alpha:]]))([^()]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\)))*)?\\)   # parameters\r\n  (\\s*:\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+)?                                                                        # return type\r\n  \\s*=&gt;                                                                                               # arrow operator\r\n)\r\n  ))\r\n)))</string>\r\n                <key>captures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>meta.definition.property.tsx entity.name.function.tsx</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>keyword.operator.optional.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n              </dict>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.definition.property.tsx variable.object.property.tsx</string>\r\n                <key>match</key>\r\n                <string>[_$[:alpha:]][_$[:alnum:]]*</string>\r\n              </dict>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.optional.tsx</string>\r\n                <key>match</key>\r\n                <string>\\?</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>variable-initializer</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;!=|!)(=)(?!=)(?=\\s*\\S)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.assignment.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=$|^|[,);}\\]])</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;!=|!)(=)(?!=)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.assignment.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=[,);}\\]])|(?=^\\s*$)|(?&lt;=\\S)(?&lt;!=)(?=\\s*$)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>function-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.function.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(export)\\s+)?(?:(async)\\s+)?(function\\b)(?:\\s*(\\*))?(?:(?:\\s+|(?&lt;=\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\s*</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.export.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.async.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.function.tsx</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.generator.asterisk.tsx</string>\r\n          </dict>\r\n          <key>5</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.definition.function.tsx entity.name.function.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?=$|^|;)|(?&lt;=\\})</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-name</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-body</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>function-expression</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.function.expression.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(async)\\s+)?(function\\b)(?:\\s*(\\*))?(?:(?:\\s+|(?&lt;=\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\s*</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.async.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.function.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.generator.asterisk.tsx</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.definition.function.tsx entity.name.function.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\})</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-name</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-body</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>function-name</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.definition.function.tsx entity.name.function.tsx</string>\r\n        <key>match</key>\r\n        <string>[_$[:alpha:]][_$[:alnum:]]*</string>\r\n      </dict>\r\n      <key>function-body</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#return-type</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#decl-block</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.generator.asterisk.tsx</string>\r\n            <key>match</key>\r\n            <string>\\*</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>method-declaration</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.method.declaration.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:\\b(public|private|protected)\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?\\s*\\b(constructor)\\b(?!:)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.async.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\}|;|,|$)|(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#method-declaration-name</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#function-body</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.method.declaration.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:\\b(public|private|protected)\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:(?:\\s*\\b(new)\\b(?!:)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(?:(\\*)\\s*)?)(?=\\s*[\\(\\&lt;])</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.async.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.new.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.generator.asterisk.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\}|;|,|$)|(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#method-declaration-name</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#function-body</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.method.declaration.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:\\b(public|private|protected)\\s+)?(?:\\b(abstract)\\s+)?(?:\\b(async)\\s+)?(?:\\b(get|set)\\s+)?(?:(\\*)\\s*)?(?=\\s*(((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(\\??))\\s*[\\(\\&lt;])</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.async.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.property.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.generator.asterisk.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\}|;|,|$)|(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#method-declaration-name</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#function-body</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>object-literal-method-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.method.declaration.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:\\b(async)\\s+)?(?:\\b(get|set)\\s+)?(?:(\\*)\\s*)?(?=\\s*(((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(\\??))\\s*[\\(\\&lt;])</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.async.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.property.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.generator.asterisk.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?=\\}|;|,)|(?&lt;=\\})</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#method-declaration-name</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-body</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:\\b(async)\\s+)?(?:\\b(get|set)\\s+)?(?:(\\*)\\s*)?(?=\\s*(((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(\\??))\\s*[\\(\\&lt;])</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.async.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.property.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.generator.asterisk.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\(|\\&lt;)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#method-declaration-name</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>method-declaration-name</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?x)(?=((\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$))|(\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$))|((?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\]))\\s*(\\??)\\s*[\\(\\&lt;])</string>\r\n        <key>end</key>\r\n        <string>(?=\\(|\\&lt;)</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#array-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#numeric-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.definition.method.tsx entity.name.function.tsx</string>\r\n            <key>match</key>\r\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.optional.tsx</string>\r\n            <key>match</key>\r\n            <string>\\?</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>arrow-function</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.arrow.tsx</string>\r\n            <key>match</key>\r\n            <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(\\basync)\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\\s*(?==&gt;)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.async.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.parameter.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.arrow.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?x) (?:\r\n  (?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(\\basync)\r\n)? ((?&lt;![})!\\]])\\s*\r\n  (?=\r\n    # sure shot arrow functions even if =&gt; is on new line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\r\n  [(]\\s*\r\n  (\r\n    ([)]\\s*:) |                                                                                       # ():\r\n    ((\\.\\.\\.\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\s*:)                                                                  # [(]param: | [(]...param:\r\n  )\r\n) |\r\n(\r\n  [&lt;]\\s*[_$[:alpha:]][_$[:alnum:]]*\\s+extends\\s*[^=&gt;]                                                              # &lt; typeparam extends\r\n) |\r\n# arrow function possible to detect only with =&gt; on same line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?                                                                                 # typeparameters\r\n  \\(\\s*(([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\.\\.\\.\\s*[_$[:alpha:]]))([^()]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\)))*)?\\)   # parameters\r\n  (\\s*:\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+)?                                                                        # return type\r\n  \\s*=&gt;                                                                                               # arrow operator\r\n)\r\n  )\r\n)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.async.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?==&gt;|\\{|(^\\s*(export|function|class|interface|let|var|const|import|enum|namespace|module|type|abstract|declare)\\s+))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-parameters</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#function-parameters</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#arrow-return-type</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.arrow.tsx</string>\r\n            <key>begin</key>\r\n            <string>=&gt;</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.function.arrow.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\}|\\S)(?&lt;!=&gt;)|((?!\\{)(?=\\S))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#decl-block</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>indexer-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.indexer.declaration.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(readonly)\\s*)?\\s*(\\[)\\s*([_$[:alpha:]][_$[:alnum:]]*)\\s*(?=:)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.square.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.parameter.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(\\])\\s*(\\?\\s*)?|$</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.square.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.optional.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-annotation</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>indexer-mapped-type-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.indexer.mappedtype.declaration.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))([+-])?(readonly)\\s*)?\\s*(\\[)\\s*([_$[:alpha:]][_$[:alnum:]]*)\\s+(in)\\s+</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.type.modifier.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.square.tsx</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.type.tsx</string>\r\n          </dict>\r\n          <key>5</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.in.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(\\])([+-])?\\s*(\\?\\s*)?|$</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.square.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.type.modifier.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.optional.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>function-parameters</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.parameters.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\(</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.parameters.begin.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\)</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.parameters.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-parameters-body</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>function-parameters-body</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#decorator</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#destructuring-parameter</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#parameter-name</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-annotation</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#variable-initializer</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.separator.parameter.tsx</string>\r\n            <key>match</key>\r\n            <string>,</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>class-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.class.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(export)\\s+)?\\b(?:(abstract)\\s+)?\\b(class)\\b(?=\\s+|/[/*])</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.export.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.class.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\})</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-declaration-or-expression-patterns</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>class-expression</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.class.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(class)\\b(?=\\s+|[&lt;{]|\\/[\\/*])</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.class.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\})</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-declaration-or-expression-patterns</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>class-declaration-or-expression-patterns</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-or-interface-heritage</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.class.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-or-interface-body</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>interface-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.interface.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(export)\\s+)?\\b(?:(abstract)\\s+)?\\b(interface)\\b(?=\\s+|/[/*])</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.export.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.interface.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\})</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-or-interface-heritage</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.interface.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-or-interface-body</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>class-or-interface-heritage</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:\\b(extends|implements)\\b)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?=\\{)</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-or-interface-heritage</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expressionWithoutIdentifiers</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))(?=\\s*[_$[:alpha:]][_$[:alnum:]]*(\\s*\\??\\.\\s*[_$[:alpha:]][_$[:alnum:]]*)*\\s*)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.module.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.other.inherited-class.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expressionPunctuations</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>class-or-interface-body</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>\\{</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#decorator</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#method-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#indexer-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#field-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-annotation</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#variable-initializer</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#access-modifier</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#property-accessor</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#async-modifier</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#after-operator-block-as-object-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#decl-block</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expression</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-semicolon</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>access-modifier</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>storage.modifier.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(abstract|public|protected|private|readonly|static)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n      </dict>\r\n      <key>property-accessor</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>storage.type.property.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(get|set)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n      </dict>\r\n      <key>async-modifier</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>storage.modifier.async.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(async)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n      </dict>\r\n      <key>enum-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.enum.declaration.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(\\bexport)\\s+)?(?:\\b(const)\\s+)?\\b(enum)\\s+([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.export.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.enum.tsx</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.type.enum.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\})</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>\\{</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\}</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n              <dict>\r\n                <key>begin</key>\r\n                <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n                <key>beginCaptures</key>\r\n                <dict>\r\n                  <key>0</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>variable.other.enummember.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>end</key>\r\n                <string>(?=,|\\}|$)</string>\r\n                <key>patterns</key>\r\n                <array>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#comment</string>\r\n                  </dict>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#variable-initializer</string>\r\n                  </dict>\r\n                </array>\r\n              </dict>\r\n              <dict>\r\n                <key>begin</key>\r\n                <string>(?=((\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")|(\\[([^\\[\\]]|\\[[^\\[\\]]*\\])+\\])))</string>\r\n                <key>end</key>\r\n                <string>(?=,|\\}|$)</string>\r\n                <key>patterns</key>\r\n                <array>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#string</string>\r\n                  </dict>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#array-literal</string>\r\n                  </dict>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#comment</string>\r\n                  </dict>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#variable-initializer</string>\r\n                  </dict>\r\n                </array>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#punctuation-comma</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>namespace-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.namespace.declaration.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(\\bexport)\\s+)?\\b(namespace|module)\\s+(?=[_$[:alpha:]"\'`]))</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.export.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.namespace.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\})|(?=;|\\babstract\\b|\\basync\\b|\\bclass\\b|\\bconst\\b|\\bdeclare\\b|\\benum\\b|\\bexport\\b|\\bfunction\\b|\\bimport\\b|\\binterface\\b|\\blet\\b|\\bmodule\\b|\\bnamespace\\b|\\breturn\\b|\\btype\\b|\\bvar\\b)</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.type.module.tsx</string>\r\n            <key>match</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-accessor</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#decl-block</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-alias-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.type.declaration.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(\\bexport)\\s+)?\\b(type)\\b\\s+([_$[:alpha:]][_$[:alnum:]]*)\\s*</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.export.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.type.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.type.alias.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?=\\}|;|\\babstract\\b|\\basync\\b|\\bclass\\b|\\bconst\\b|\\bdeclare\\b|\\benum\\b|\\bexport\\b|\\bfunction\\b|\\bimport\\b|\\binterface\\b|\\blet\\b|\\bmodule\\b|\\bnamespace\\b|\\breturn\\b|\\btype\\b|\\bvar\\b)</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(=)\\s*</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.assignment.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\}|;|\\babstract\\b|\\basync\\b|\\bclass\\b|\\bconst\\b|\\bdeclare\\b|\\benum\\b|\\bexport\\b|\\bfunction\\b|\\bimport\\b|\\binterface\\b|\\blet\\b|\\bmodule\\b|\\bnamespace\\b|\\breturn\\b|\\btype\\b|\\bvar\\b)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>import-equals-declaration</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.import-equals.external.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(\\bexport)\\s+)?\\b(import)\\s+([_$[:alpha:]][_$[:alnum:]]*)\\s*(=)\\s*(require)\\s*(\\()</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.export.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.import.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.readwrite.alias.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.assignment.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.require.tsx</string>\r\n              </dict>\r\n              <key>6</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.brace.round.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.brace.round.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#string</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.import-equals.internal.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(\\bexport)\\s+)?\\b(import)\\s+([_$[:alpha:]][_$[:alnum:]]*)\\s*(=)\\s*(?!require\\b)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.export.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.import.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.readwrite.alias.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.assignment.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=;|$|^)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n              <dict>\r\n                <key>match</key>\r\n                <string>([_$[:alpha:]][_$[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))</string>\r\n                <key>captures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>entity.name.type.module.tsx</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.accessor.tsx</string>\r\n                  </dict>\r\n                  <key>3</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.accessor.optional.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n              </dict>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.readwrite.tsx</string>\r\n                <key>match</key>\r\n                <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>import-declaration</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.import.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(\\bexport)\\s+)?\\b(import)(?!\\s*[:\\(])(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.export.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.import.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;!^import|[^\\._$[:alnum:]]import)(?=;|$|^)</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;=^import|[^\\._$[:alnum:]]import)(?!\\s*["\'])</string>\r\n            <key>end</key>\r\n            <string>\\bfrom\\b</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.from.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#import-export-declaration</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#import-export-declaration</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>export-declaration</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(export)\\s+(as)\\s+(namespace)\\s+([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.export.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.as.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.namespace.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.module.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.export.default.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(export)(?:(?:\\s*(=))|(?:\\s+(default)(?=\\s+)))</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.export.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.assignment.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.default.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=$|;|\\babstract\\b|\\basync\\b|\\bclass\\b|\\bconst\\b|\\bdeclare\\b|\\benum\\b|\\bexport\\b|\\bfunction\\b|\\bimport\\b|\\binterface\\b|\\blet\\b|\\bmodule\\b|\\bnamespace\\b|\\breturn\\b|\\btype\\b|\\bvar\\b)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.export.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(export)(?!\\s*:)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.export.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=$|;|\\babstract\\b|\\basync\\b|\\bclass\\b|\\bconst\\b|\\bdeclare\\b|\\benum\\b|\\bexport\\b|\\bfunction\\b|\\bimport\\b|\\binterface\\b|\\blet\\b|\\bmodule\\b|\\bnamespace\\b|\\breturn\\b|\\btype\\b|\\bvar\\b)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#import-export-declaration</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>import-export-declaration</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#import-export-block</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.from.tsx</string>\r\n            <key>match</key>\r\n            <string>\\bfrom\\b</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#import-export-clause</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>import-export-block</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.block.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\{</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#import-export-clause</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>import-export-clause</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(\\bdefault)|(\\*)|(\\b[_$[:alpha:]][_$[:alnum:]]*))\\s+(as)\\s+(?:(\\bdefault(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|(\\b[_$[:alpha:]][_$[:alnum:]]*))</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.default.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.language.import-export-all.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.readwrite.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.as.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.default.tsx</string>\r\n              </dict>\r\n              <key>6</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.readwrite.alias.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.language.import-export-all.tsx</string>\r\n            <key>match</key>\r\n            <string>\\*</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.default.tsx</string>\r\n            <key>match</key>\r\n            <string>\\b(default)\\b</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.other.readwrite.alias.tsx</string>\r\n            <key>match</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>switch-statement</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>switch-statement.expr.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?=\\bswitch\\s*\\()</string>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>switch-expression.expr.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(switch)\\s*(\\()</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.switch.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.brace.round.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.brace.round.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>switch-block.expr.tsx</string>\r\n            <key>begin</key>\r\n            <string>\\{</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>case-clause.expr.tsx</string>\r\n                <key>begin</key>\r\n                <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(case|default(?=:))(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n                <key>beginCaptures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>keyword.control.switch.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>end</key>\r\n                <string>(?=:)</string>\r\n                <key>patterns</key>\r\n                <array>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#expression</string>\r\n                  </dict>\r\n                </array>\r\n              </dict>\r\n              <dict>\r\n                <key>begin</key>\r\n                <string>(:)\\s*(\\{)</string>\r\n                <key>beginCaptures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>case-clause.expr.tsx punctuation.definition.section.case-statement.tsx</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>meta.block.tsx punctuation.definition.block.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>end</key>\r\n                <string>\\}</string>\r\n                <key>endCaptures</key>\r\n                <dict>\r\n                  <key>0</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>meta.block.tsx punctuation.definition.block.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>contentName</key>\r\n                <string>meta.block.tsx</string>\r\n                <key>patterns</key>\r\n                <array>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#statements</string>\r\n                  </dict>\r\n                </array>\r\n              </dict>\r\n              <dict>\r\n                <key>match</key>\r\n                <string>(:)</string>\r\n                <key>captures</key>\r\n                <dict>\r\n                  <key>0</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>case-clause.expr.tsx punctuation.definition.section.case-statement.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#statements</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>for-loop</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))for(?=((\\s+|(\\s*\\/\\*([^\\*]|(\\*[^\\/]))*\\*\\/\\s*))await)?\\s*(\\/\\*([^\\*]|(\\*[^\\/]))*\\*\\/\\s*)?(\\())</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.loop.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\))</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.loop.tsx</string>\r\n            <key>match</key>\r\n            <string>await</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>\\(</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.brace.round.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.brace.round.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#var-expr</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#punctuation-semicolon</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>decl-block</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.block.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\{</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#statements</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>after-operator-block-as-object-literal</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.objectliteral.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;!\\+\\+|--)(?&lt;=[:=(,\\[?+!&gt;]|^await|[^\\._$[:alnum:]]await|^return|[^\\._$[:alnum:]]return|^yield|[^\\._$[:alnum:]]yield|^throw|[^\\._$[:alnum:]]throw|^in|[^\\._$[:alnum:]]in|^of|[^\\._$[:alnum:]]of|^typeof|[^\\._$[:alnum:]]typeof|&amp;&amp;|\\|\\||\\*)\\s*(\\{)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#object-member</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>object-literal</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.objectliteral.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\{</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#object-member</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>object-member</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#object-literal-method-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object.member.tsx meta.object-literal.key.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?=\\[)</string>\r\n            <key>end</key>\r\n            <string>(?=:)|((?&lt;=[\\]])(?=\\s*[\\(\\&lt;]))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#array-literal</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object.member.tsx meta.object-literal.key.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?=[\\\'\\"])</string>\r\n            <key>end</key>\r\n            <string>(?=:)|((?&lt;=[\\\'\\"])(?=\\s*[\\(\\&lt;]))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#string</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.method.declaration.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;=[\\]\\\'\\"])(?=\\s*[\\(\\&lt;])</string>\r\n            <key>end</key>\r\n            <string>(?=\\}|;|,)|(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#function-body</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object.member.tsx</string>\r\n            <key>match</key>\r\n            <string>(?![_$[:alpha:]])([[:digit:]]+)\\s*(?=:)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.object-literal.key.tsx</string>\r\n              </dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.numeric.decimal.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object.member.tsx</string>\r\n            <key>match</key>\r\n            <string>(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\s*(?=:\\s*(\r\n  ((async\\s+)?(\r\n    (function\\s*[(&lt;*]) |\r\n    (function\\s+) |\r\n    ([_$[:alpha:]][_$[:alnum:]]*\\s*=&gt;)\r\n  )) |\r\n  ((async\\s*)?(\r\n    ([\\(]\\s*([\\{\\[]\\s*)?$) |\r\n    # sure shot arrow functions even if =&gt; is on new line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\r\n  [(]\\s*\r\n  (\r\n    ([)]\\s*:) |                                                                                       # ():\r\n    ((\\.\\.\\.\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\s*:)                                                                  # [(]param: | [(]...param:\r\n  )\r\n) |\r\n(\r\n  [&lt;]\\s*[_$[:alpha:]][_$[:alnum:]]*\\s+extends\\s*[^=&gt;]                                                              # &lt; typeparam extends\r\n) |\r\n# arrow function possible to detect only with =&gt; on same line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?                                                                                 # typeparameters\r\n  \\(\\s*(([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\.\\.\\.\\s*[_$[:alpha:]]))([^()]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\)))*)?\\)   # parameters\r\n  (\\s*:\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+)?                                                                        # return type\r\n  \\s*=&gt;                                                                                               # arrow operator\r\n)\r\n  ))\r\n)))</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.object-literal.key.tsx</string>\r\n              </dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.function.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object.member.tsx</string>\r\n            <key>match</key>\r\n            <string>(?:[_$[:alpha:]][_$[:alnum:]]*)\\s*(?=:)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.object-literal.key.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object.member.tsx</string>\r\n            <key>begin</key>\r\n            <string>\\.\\.\\.</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.spread.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=,|\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object.member.tsx</string>\r\n            <key>match</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\s*(?=,|\\}|$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.readwrite.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object.member.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?=[_$[:alpha:]][_$[:alnum:]]*\\s*=)</string>\r\n            <key>end</key>\r\n            <string>(?=,|\\}|$)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.object.member.tsx</string>\r\n            <key>begin</key>\r\n            <string>:</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.object-literal.key.tsx punctuation.separator.key-value.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=,|\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>begin</key>\r\n                <string>(?&lt;=:)\\s*(async)?(?=\\s*(&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)\\(\\s*([\\{\\[]\\s*)?$)</string>\r\n                <key>beginCaptures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>storage.modifier.async.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>end</key>\r\n                <string>(?&lt;=\\))</string>\r\n                <key>patterns</key>\r\n                <array>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#type-parameters</string>\r\n                  </dict>\r\n                  <dict>\r\n                    <key>begin</key>\r\n                    <string>\\(</string>\r\n                    <key>beginCaptures</key>\r\n                    <dict>\r\n                      <key>0</key>\r\n                      <dict>\r\n                        <key>name</key>\r\n                        <string>meta.brace.round.tsx</string>\r\n                      </dict>\r\n                    </dict>\r\n                    <key>end</key>\r\n                    <string>\\)</string>\r\n                    <key>endCaptures</key>\r\n                    <dict>\r\n                      <key>0</key>\r\n                      <dict>\r\n                        <key>name</key>\r\n                        <string>meta.brace.round.tsx</string>\r\n                      </dict>\r\n                    </dict>\r\n                    <key>patterns</key>\r\n                    <array>\r\n                      <dict>\r\n                        <key>include</key>\r\n                        <string>#expression-inside-possibly-arrow-parens</string>\r\n                      </dict>\r\n                    </array>\r\n                  </dict>\r\n                </array>\r\n              </dict>\r\n              <dict>\r\n                <key>begin</key>\r\n                <string>(?&lt;=:)\\s*(async)?\\s*(\\()(?=\\s*([\\{\\[]\\s*)?$)</string>\r\n                <key>beginCaptures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>storage.modifier.async.tsx</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>meta.brace.round.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>end</key>\r\n                <string>\\)</string>\r\n                <key>endCaptures</key>\r\n                <dict>\r\n                  <key>0</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>meta.brace.round.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>patterns</key>\r\n                <array>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#expression-inside-possibly-arrow-parens</string>\r\n                  </dict>\r\n                </array>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>ternary-expression</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?!\\?\\.\\s*[^[:digit:]])(\\?)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.ternary.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\s*(:)</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.ternary.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expression</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>function-call</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?=(([_$[:alpha:]][_$[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([_$[:alpha:]][_$[:alnum:]]*)\\s*(\\?\\.\\s*)?(&lt;\\s*(((keyof|infer)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\\'[^\\\']*\\\')|(\\"[^\\"]*\\")|(\\`[^\\`]*\\`))(?=\\s*([\\&lt;\\&gt;\\,\\.\\[=]|&amp;(?!&amp;)|\\|(?!\\|)))))([^&lt;&gt;\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?&lt;==)\\&gt;|\\&lt;\\s*(((keyof|infer)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\\'[^\\\']*\\\')|(\\"[^\\"]*\\")|(\\`[^\\`]*\\`))(?=\\s*([\\&lt;\\&gt;\\,\\.\\[=]|&amp;(?!&amp;)|\\|(?!\\|)))))([^&lt;&gt;\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?&lt;==)\\&gt;)*(?!=)\\&gt;)*(?!=)&gt;\\s*)?\\()</string>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\))(?!(([_$[:alpha:]][_$[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([_$[:alpha:]][_$[:alnum:]]*)\\s*(\\?\\.\\s*)?(&lt;\\s*(((keyof|infer)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\\'[^\\\']*\\\')|(\\"[^\\"]*\\")|(\\`[^\\`]*\\`))(?=\\s*([\\&lt;\\&gt;\\,\\.\\[=]|&amp;(?!&amp;)|\\|(?!\\|)))))([^&lt;&gt;\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?&lt;==)\\&gt;|\\&lt;\\s*(((keyof|infer)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\\'[^\\\']*\\\')|(\\"[^\\"]*\\")|(\\`[^\\`]*\\`))(?=\\s*([\\&lt;\\&gt;\\,\\.\\[=]|&amp;(?!&amp;)|\\|(?!\\|)))))([^&lt;&gt;\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?&lt;==)\\&gt;)*(?!=)\\&gt;)*(?!=)&gt;\\s*)?\\()</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.function-call.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?=(([_$[:alpha:]][_$[:alnum:]]*\\s*\\??\\.\\s*)*|(\\??\\.\\s*)?)([_$[:alpha:]][_$[:alnum:]]*))</string>\r\n            <key>end</key>\r\n            <string>(?=\\s*(\\?\\.\\s*)?(&lt;\\s*(((keyof|infer)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\\'[^\\\']*\\\')|(\\"[^\\"]*\\")|(\\`[^\\`]*\\`))(?=\\s*([\\&lt;\\&gt;\\,\\.\\[=]|&amp;(?!&amp;)|\\|(?!\\|)))))([^&lt;&gt;\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?&lt;==)\\&gt;|\\&lt;\\s*(((keyof|infer)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\\'[^\\\']*\\\')|(\\"[^\\"]*\\")|(\\`[^\\`]*\\`))(?=\\s*([\\&lt;\\&gt;\\,\\.\\[=]|&amp;(?!&amp;)|\\|(?!\\|)))))([^&lt;&gt;\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?&lt;==)\\&gt;)*(?!=)\\&gt;)*(?!=)&gt;\\s*)?\\()</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#literal</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#support-objects</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#object-identifiers</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#punctuation-accessor</string>\r\n              </dict>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.expression.import.tsx</string>\r\n                <key>match</key>\r\n                <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))import(?=\\s*[\\(]\\s*[\\"\\\'\\`]))</string>\r\n              </dict>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.function.tsx</string>\r\n                <key>match</key>\r\n                <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.function-call.tsx punctuation.accessor.optional.tsx</string>\r\n            <key>match</key>\r\n            <string>\\?\\.</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-arguments</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#paren-expression</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>new-expr</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>new.expr.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(new)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.new.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\))|(?=[;),}\\]:]|\\|\\||\\&amp;\\&amp;|$|((?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))new(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.)))|((?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))function((\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\s*[\\(]))))</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#paren-expression</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#class-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>instanceof-expr</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(instanceof)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.instanceof.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?&lt;=\\))|(?=[;),}\\]:?]|\\|\\||\\&amp;\\&amp;|$|((?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))function((\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\s*[\\(]))))</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>paren-expression-possibly-arrow</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;=[(=,])\\s*(async)?(?=\\s*((&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*))?\\(\\s*[\\{\\[]\\s*$)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.async.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#paren-expression-possibly-arrow-with-typeparameters</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;=[(=,]|=&gt;)\\s*(async)?(?=\\s*((&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*))?\\(\\s*$)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.async.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#paren-expression-possibly-arrow-with-typeparameters</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#possibly-arrow-return-type</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>paren-expression-possibly-arrow-with-typeparameters</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>\\(</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.brace.round.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.brace.round.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#expression-inside-possibly-arrow-parens</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>expression-inside-possibly-arrow-parens</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expressionWithoutIdentifiers</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#function-parameters-body</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#identifiers</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expressionPunctuations</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>paren-expression</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>\\(</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.round.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\)</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.round.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expression</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>cast</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>expression-operators</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.flow.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(await)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(yield)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?=\\s*\\/\\*([^\\*]|(\\*[^\\/]))*\\*\\/\\s*\\*)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.flow.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\*</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.generator.asterisk.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(yield)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?:\\s*(\\*))?</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.flow.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.generator.asterisk.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.delete.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))delete(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.in.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))in(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.of.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))of(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))(?!\\()</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.instanceof.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))instanceof(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.new.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))new(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#typeof-operator</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.void.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))void(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(as)\\s+</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.as.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=$|^|[;,:})\\]]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(as)\\s+))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.spread.tsx</string>\r\n            <key>match</key>\r\n            <string>\\.\\.\\.</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.assignment.compound.tsx</string>\r\n            <key>match</key>\r\n            <string>\\*=|(?&lt;!\\()/=|%=|\\+=|\\-=</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.assignment.compound.bitwise.tsx</string>\r\n            <key>match</key>\r\n            <string>\\&amp;=|\\^=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|\\|=</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.bitwise.shift.tsx</string>\r\n            <key>match</key>\r\n            <string>&lt;&lt;|&gt;&gt;&gt;|&gt;&gt;</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.comparison.tsx</string>\r\n            <key>match</key>\r\n            <string>===|!==|==|!=</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.relational.tsx</string>\r\n            <key>match</key>\r\n            <string>&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.logical.tsx</string>\r\n            <key>match</key>\r\n            <string>\\!|&amp;&amp;|\\|\\|</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.bitwise.tsx</string>\r\n            <key>match</key>\r\n            <string>\\&amp;|~|\\^|\\|</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.assignment.tsx</string>\r\n            <key>match</key>\r\n            <string>\\=</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.decrement.tsx</string>\r\n            <key>match</key>\r\n            <string>--</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.increment.tsx</string>\r\n            <key>match</key>\r\n            <string>\\+\\+</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.arithmetic.tsx</string>\r\n            <key>match</key>\r\n            <string>%|\\*|/|-|\\+</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;=[_$[:alnum:])\\]])\\s*(/)(?![/*])</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.arithmetic.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>typeof-operator</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>keyword.operator.expression.typeof.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))typeof(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n      </dict>\r\n      <key>literal</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#numeric-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#boolean-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#null-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#undefined-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#numericConstant-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#array-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#this-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#super-literal</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>array-literal</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.array.literal.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\s*(\\[)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.square.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\]</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.square.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expression</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>numeric-literal</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.numeric.hex.tsx</string>\r\n            <key>match</key>\r\n            <string>\\b(?&lt;!\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b(?!\\$)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.numeric.binary.tsx</string>\r\n            <key>match</key>\r\n            <string>\\b(?&lt;!\\$)0(b|B)[01][01_]*\\b(?!\\$)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.numeric.octal.tsx</string>\r\n            <key>match</key>\r\n            <string>\\b(?&lt;!\\$)0(o|O)?[0-7][0-7_]*\\b(?!\\$)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)\r\n(?&lt;!\\$)(?:\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)| # 1.1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|             # 1.E+3\r\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|             # .1E+3\r\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|                 # 1E+3\r\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|                      # 1.1\r\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|                                  # 1.\r\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|                                  # .1\r\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))                                 # 1\r\n)(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.numeric.decimal.tsx</string>\r\n              </dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.delimiter.decimal.period.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.delimiter.decimal.period.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.delimiter.decimal.period.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.delimiter.decimal.period.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.delimiter.decimal.period.tsx</string>\r\n              </dict>\r\n              <key>6</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.delimiter.decimal.period.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>boolean-literal</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.language.boolean.true.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))true(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.language.boolean.false.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))false(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>null-literal</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>constant.language.null.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))null(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n      </dict>\r\n      <key>this-literal</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>variable.language.this.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))this\\b(?!\\$)</string>\r\n      </dict>\r\n      <key>super-literal</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>variable.language.super.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))super\\b(?!\\$)</string>\r\n      </dict>\r\n      <key>undefined-literal</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>constant.language.undefined.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))undefined(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n      </dict>\r\n      <key>numericConstant-literal</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.language.nan.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))NaN(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.language.infinity.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))Infinity(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>support-objects</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.language.arguments.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(arguments)\\b(?!\\$)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.class.builtin.tsx</string>\r\n            <key>match</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(Array|ArrayBuffer|Atomics|Boolean|DataView|Date|Float32Array|Float64Array|Function|Generator\r\n  |GeneratorFunction|Int8Array|Int16Array|Int32Array|Intl|Map|Number|Object|Proxy\r\n  |Reflect|RegExp|Set|SharedArrayBuffer|SIMD|String|Symbol|TypedArray\r\n  |Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|WeakMap|WeakSet)\\b(?!\\$)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.class.error.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))((Eval|Internal|Range|Reference|Syntax|Type|URI)?Error)\\b(?!\\$)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.class.promise.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(Promise)\\b(?!\\$)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.function.tsx</string>\r\n            <key>match</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(clear(Interval|Timeout)|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|escape|eval|\r\n  isFinite|isNaN|parseFloat|parseInt|require|set(Interval|Timeout)|super|unescape|uneval)(?=\\s*\\()</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(Math)(?:\\s*(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))\\s*(?:\r\n  (abs|acos|acosh|asin|asinh|atan|atan2|atanh|cbrt|ceil|clz32|cos|cosh|exp|\r\n  expm1|floor|fround|hypot|imul|log|log10|log1p|log2|max|min|pow|random|\r\n  round|sign|sin|sinh|sqrt|tan|tanh|trunc)\r\n  |\r\n  (E|LN10|LN2|LOG10E|LOG2E|PI|SQRT1_2|SQRT2)))?\\b(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.constant.math.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.function.math.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.constant.property.math.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(console)(?:\\s*(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))\\s*(\r\n  assert|clear|count|debug|dir|error|group|groupCollapsed|groupEnd|info|log\r\n  |profile|profileEnd|table|time|timeEnd|timeStamp|trace|warn))?\\b(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.class.console.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.function.console.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(JSON)(?:\\s*(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))\\s*(parse|stringify))?\\b(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.constant.json.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.function.json.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(import)\\s*(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))\\s*(meta)\\b(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.import.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.variable.property.importmeta.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(new)\\s*(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))\\s*(target)\\b(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.new.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.variable.property.target.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x) (?:(\\.)|(\\?\\.(?!\\s*[[:digit:]]))) \\s* (?:\r\n  (constructor|length|prototype|__proto__)\r\n  |\r\n  (EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY))\\b(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.variable.property.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.constant.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x) (?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.)) \\b (?:\r\n  (document|event|navigator|performance|screen|window)\r\n  |\r\n  (AnalyserNode|ArrayBufferView|Attr|AudioBuffer|AudioBufferSourceNode|AudioContext|AudioDestinationNode|AudioListener\r\n  |AudioNode|AudioParam|BatteryManager|BeforeUnloadEvent|BiquadFilterNode|Blob|BufferSource|ByteString|CSS|CSSConditionRule\r\n  |CSSCounterStyleRule|CSSGroupingRule|CSSMatrix|CSSMediaRule|CSSPageRule|CSSPrimitiveValue|CSSRule|CSSRuleList|CSSStyleDeclaration\r\n  |CSSStyleRule|CSSStyleSheet|CSSSupportsRule|CSSValue|CSSValueList|CanvasGradient|CanvasImageSource|CanvasPattern\r\n  |CanvasRenderingContext2D|ChannelMergerNode|ChannelSplitterNode|CharacterData|ChromeWorker|CloseEvent|Comment|CompositionEvent\r\n  |Console|ConvolverNode|Coordinates|Credential|CredentialsContainer|Crypto|CryptoKey|CustomEvent|DOMError|DOMException\r\n  |DOMHighResTimeStamp|DOMImplementation|DOMString|DOMStringList|DOMStringMap|DOMTimeStamp|DOMTokenList|DataTransfer\r\n  |DataTransferItem|DataTransferItemList|DedicatedWorkerGlobalScope|DelayNode|DeviceProximityEvent|DirectoryEntry\r\n  |DirectoryEntrySync|DirectoryReader|DirectoryReaderSync|Document|DocumentFragment|DocumentTouch|DocumentType|DragEvent\r\n  |DynamicsCompressorNode|Element|Entry|EntrySync|ErrorEvent|Event|EventListener|EventSource|EventTarget|FederatedCredential\r\n  |FetchEvent|File|FileEntry|FileEntrySync|FileException|FileList|FileReader|FileReaderSync|FileSystem|FileSystemSync\r\n  |FontFace|FormData|GainNode|Gamepad|GamepadButton|GamepadEvent|Geolocation|GlobalEventHandlers|HTMLAnchorElement\r\n  |HTMLAreaElement|HTMLAudioElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement\r\n  |HTMLCollection|HTMLContentElement|HTMLDListElement|HTMLDataElement|HTMLDataListElement|HTMLDialogElement|HTMLDivElement\r\n  |HTMLDocument|HTMLElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormControlsCollection|HTMLFormElement\r\n  |HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement\r\n  |HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMediaElement\r\n  |HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement\r\n  |HTMLOptionsCollection|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement\r\n  |HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement\r\n  |HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement\r\n  |HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTimeElement|HTMLTitleElement|HTMLTrackElement\r\n  |HTMLUListElement|HTMLUnknownElement|HTMLVideoElement|HashChangeEvent|History|IDBCursor|IDBCursorWithValue|IDBDatabase\r\n  |IDBEnvironment|IDBFactory|IDBIndex|IDBKeyRange|IDBMutableFile|IDBObjectStore|IDBOpenDBRequest|IDBRequest|IDBTransaction\r\n  |IDBVersionChangeEvent|IIRFilterNode|IdentityManager|ImageBitmap|ImageBitmapFactories|ImageData|Index|InputDeviceCapabilities\r\n  |InputEvent|InstallEvent|InstallTrigger|KeyboardEvent|LinkStyle|LocalFileSystem|LocalFileSystemSync|Location|MIDIAccess\r\n  |MIDIConnectionEvent|MIDIInput|MIDIInputMap|MIDIOutputMap|MediaElementAudioSourceNode|MediaError|MediaKeyMessageEvent\r\n  |MediaKeySession|MediaKeyStatusMap|MediaKeySystemAccess|MediaKeySystemConfiguration|MediaKeys|MediaRecorder|MediaStream\r\n  |MediaStreamAudioDestinationNode|MediaStreamAudioSourceNode|MessageChannel|MessageEvent|MessagePort|MouseEvent\r\n  |MutationObserver|MutationRecord|NamedNodeMap|Navigator|NavigatorConcurrentHardware|NavigatorGeolocation|NavigatorID\r\n  |NavigatorLanguage|NavigatorOnLine|Node|NodeFilter|NodeIterator|NodeList|NonDocumentTypeChildNode|Notification\r\n  |OfflineAudioCompletionEvent|OfflineAudioContext|OscillatorNode|PageTransitionEvent|PannerNode|ParentNode|PasswordCredential\r\n  |Path2D|PaymentAddress|PaymentRequest|PaymentResponse|Performance|PerformanceEntry|PerformanceFrameTiming|PerformanceMark\r\n  |PerformanceMeasure|PerformanceNavigation|PerformanceNavigationTiming|PerformanceObserver|PerformanceObserverEntryList\r\n  |PerformanceResourceTiming|PerformanceTiming|PeriodicSyncEvent|PeriodicWave|Plugin|Point|PointerEvent|PopStateEvent\r\n  |PortCollection|Position|PositionError|PositionOptions|PresentationConnectionClosedEvent|PresentationConnectionList\r\n  |PresentationReceiver|ProcessingInstruction|ProgressEvent|PromiseRejectionEvent|PushEvent|PushRegistrationManager\r\n  |RTCCertificate|RTCConfiguration|RTCPeerConnection|RTCSessionDescriptionCallback|RTCStatsReport|RadioNodeList|RandomSource\r\n  |Range|ReadableByteStream|RenderingContext|SVGAElement|SVGAngle|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement\r\n  |SVGAnimateTransformElement|SVGAnimatedAngle|SVGAnimatedBoolean|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedLength\r\n  |SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedPoints|SVGAnimatedPreserveAspectRatio\r\n  |SVGAnimatedRect|SVGAnimatedString|SVGAnimatedTransformList|SVGAnimationElement|SVGCircleElement|SVGClipPathElement\r\n  |SVGCursorElement|SVGDefsElement|SVGDescElement|SVGElement|SVGEllipseElement|SVGEvent|SVGFilterElement|SVGFontElement\r\n  |SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement\r\n  |SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGradientElement|SVGHKernElement|SVGImageElement|SVGLength\r\n  |SVGLengthList|SVGLineElement|SVGLinearGradientElement|SVGMPathElement|SVGMaskElement|SVGMatrix|SVGMissingGlyphElement\r\n  |SVGNumber|SVGNumberList|SVGPathElement|SVGPatternElement|SVGPoint|SVGPolygonElement|SVGPolylineElement|SVGPreserveAspectRatio\r\n  |SVGRadialGradientElement|SVGRect|SVGRectElement|SVGSVGElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStringList\r\n  |SVGStylable|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGTRefElement|SVGTSpanElement|SVGTests|SVGTextElement\r\n  |SVGTextPositioningElement|SVGTitleElement|SVGTransform|SVGTransformList|SVGTransformable|SVGUseElement|SVGVKernElement\r\n  |SVGViewElement|ServiceWorker|ServiceWorkerContainer|ServiceWorkerGlobalScope|ServiceWorkerRegistration|ServiceWorkerState\r\n  |ShadowRoot|SharedWorker|SharedWorkerGlobalScope|SourceBufferList|StereoPannerNode|Storage|StorageEvent|StyleSheet\r\n  |StyleSheetList|SubtleCrypto|SyncEvent|Text|TextMetrics|TimeEvent|TimeRanges|Touch|TouchEvent|TouchList|Transferable\r\n  |TreeWalker|UIEvent|USVString|VRDisplayCapabilities|ValidityState|WaveShaperNode|WebGL|WebGLActiveInfo|WebGLBuffer\r\n  |WebGLContextEvent|WebGLFramebuffer|WebGLProgram|WebGLRenderbuffer|WebGLRenderingContext|WebGLShader|WebGLShaderPrecisionFormat\r\n  |WebGLTexture|WebGLTimerQueryEXT|WebGLTransformFeedback|WebGLUniformLocation|WebGLVertexArrayObject|WebGLVertexArrayObjectOES\r\n  |WebSocket|WebSockets|WebVTT|WheelEvent|Window|WindowBase64|WindowEventHandlers|WindowTimers|Worker|WorkerGlobalScope\r\n  |WorkerLocation|WorkerNavigator|XMLHttpRequest|XMLHttpRequestEventTarget|XMLSerializer|XPathExpression|XPathResult\r\n  |XSLTProcessor))\\b(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.variable.dom.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.class.dom.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x) (?:(\\.)|(\\?\\.(?!\\s*[[:digit:]]))) \\s* (?:\r\n  (ATTRIBUTE_NODE|CDATA_SECTION_NODE|COMMENT_NODE|DOCUMENT_FRAGMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE\r\n  |DOMSTRING_SIZE_ERR|ELEMENT_NODE|ENTITY_NODE|ENTITY_REFERENCE_NODE|HIERARCHY_REQUEST_ERR|INDEX_SIZE_ERR\r\n  |INUSE_ATTRIBUTE_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR\r\n  |NOT_SUPPORTED_ERR|NOTATION_NODE|PROCESSING_INSTRUCTION_NODE|TEXT_NODE|WRONG_DOCUMENT_ERR)\r\n  |\r\n  (_content|[xyz]|abbr|above|accept|acceptCharset|accessKey|action|align|[av]Link(?:color)?|all|alt|anchors|appCodeName\r\n  |appCore|applets|appMinorVersion|appName|appVersion|archive|areas|arguments|attributes|availHeight|availLeft|availTop\r\n  |availWidth|axis|background|backgroundColor|backgroundImage|below|bgColor|body|border|borderBottomWidth|borderColor\r\n  |borderLeftWidth|borderRightWidth|borderStyle|borderTopWidth|borderWidth|bottom|bufferDepth|callee|caller|caption\r\n  |cellPadding|cells|cellSpacing|ch|characterSet|charset|checked|childNodes|chOff|cite|classes|className|clear\r\n  |clientInformation|clip|clipBoardData|closed|code|codeBase|codeType|color|colorDepth|cols|colSpan|compact|complete\r\n  |components|content|controllers|cookie|cookieEnabled|cords|cpuClass|crypto|current|data|dateTime|declare|defaultCharset\r\n  |defaultChecked|defaultSelected|defaultStatus|defaultValue|defaultView|defer|description|dialogArguments|dialogHeight\r\n  |dialogLeft|dialogTop|dialogWidth|dir|directories|disabled|display|docmain|doctype|documentElement|elements|embeds\r\n  |enabledPlugin|encoding|enctype|entities|event|expando|external|face|fgColor|filename|firstChild|fontFamily|fontSize\r\n  |fontWeight|form|formName|forms|frame|frameBorder|frameElement|frames|hasFocus|hash|headers|height|history|host\r\n  |hostname|href|hreflang|hspace|htmlFor|httpEquiv|id|ids|ignoreCase|images|implementation|index|innerHeight|innerWidth\r\n  |input|isMap|label|lang|language|lastChild|lastIndex|lastMatch|lastModified|lastParen|layer[sXY]|left|leftContext\r\n  |lineHeight|link|linkColor|links|listStyleType|localName|location|locationbar|longDesc|lowsrc|lowSrc|marginBottom\r\n  |marginHeight|marginLeft|marginRight|marginTop|marginWidth|maxLength|media|menubar|method|mimeTypes|multiline|multiple\r\n  |name|nameProp|namespaces|namespaceURI|next|nextSibling|nodeName|nodeType|nodeValue|noHref|noResize|noShade|notationName\r\n  |notations|noWrap|object|offscreenBuffering|onLine|onreadystatechange|opener|opsProfile|options|oscpu|outerHeight\r\n  |outerWidth|ownerDocument|paddingBottom|paddingLeft|paddingRight|paddingTop|page[XY]|page[XY]Offset|parent|parentLayer\r\n  |parentNode|parentWindow|pathname|personalbar|pixelDepth|pkcs11|platform|plugins|port|prefix|previous|previousDibling\r\n  |product|productSub|profile|profileend|prompt|prompter|protocol|publicId|readOnly|readyState|referrer|rel|responseText\r\n  |responseXML|rev|right|rightContext|rowIndex|rows|rowSpan|rules|scheme|scope|screen[XY]|screenLeft|screenTop|scripts\r\n  |scrollbars|scrolling|sectionRowIndex|security|securityPolicy|selected|selectedIndex|selection|self|shape|siblingAbove\r\n  |siblingBelow|size|source|specified|standby|start|status|statusbar|statusText|style|styleSheets|suffixes|summary\r\n  |systemId|systemLanguage|tagName|tags|target|tBodies|text|textAlign|textDecoration|textIndent|textTransform|tFoot|tHead\r\n  |title|toolbar|top|type|undefined|uniqueID|updateInterval|URL|URLUnencoded|useMap|userAgent|userLanguage|userProfile\r\n  |vAlign|value|valueType|vendor|vendorSub|version|visibility|vspace|whiteSpace|width|X[MS]LDocument|zIndex))\\b(?!\\$|\\s*(&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\\()</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.constant.dom.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.variable.property.dom.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.class.node.tsx</string>\r\n            <key>match</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(Buffer|EventEmitter|Server|Pipe|Socket|REPLServer|ReadStream|WriteStream|Stream\r\n  |Inflate|Deflate|InflateRaw|DeflateRaw|GZip|GUnzip|Unzip|Zip)\\b(?!\\$)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(process)(?:(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))(?:\r\n  (arch|argv|config|connected|env|execArgv|execPath|exitCode|mainModule|pid|platform|release|stderr|stdin|stdout|title|version|versions)\r\n  |\r\n  (abort|chdir|cwd|disconnect|exit|[sg]ete?[gu]id|send|[sg]etgroups|initgroups|kill|memoryUsage|nextTick|umask|uptime|hrtime)\r\n))?\\b(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.variable.object.process.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.variable.property.process.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.function.process.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(exports)|(module)(?:(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))(exports|id|filename|loaded|parent|children))?)\\b(?!\\$)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.type.object.module.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.type.object.module.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.type.object.module.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.variable.object.node.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(global|GLOBAL|root|__dirname|__filename)\\b(?!\\$)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x) (?:(\\.)|(\\?\\.(?!\\s*[[:digit:]]))) \\s*\r\n(?:\r\n (on(?:Rowsinserted|Rowsdelete|Rowenter|Rowexit|Resize|Resizestart|Resizeend|Reset|\r\n   Readystatechange|Mouseout|Mouseover|Mousedown|Mouseup|Mousemove|\r\n   Before(?:cut|deactivate|unload|update|paste|print|editfocus|activate)|\r\n   Blur|Scrolltop|Submit|Select|Selectstart|Selectionchange|Hover|Help|\r\n   Change|Contextmenu|Controlselect|Cut|Cellchange|Clock|Close|Deactivate|\r\n   Datasetchanged|Datasetcomplete|Dataavailable|Drop|Drag|Dragstart|Dragover|\r\n   Dragdrop|Dragenter|Dragend|Dragleave|Dblclick|Unload|Paste|Propertychange|Error|\r\n   Errorupdate|Keydown|Keyup|Keypress|Focus|Load|Activate|Afterupdate|Afterprint|Abort)\r\n ) |\r\n (shift|showModelessDialog|showModalDialog|showHelp|scroll|scrollX|scrollByPages|\r\n   scrollByLines|scrollY|scrollTo|stop|strike|sizeToContent|sidebar|signText|sort|\r\n   sup|sub|substr|substring|splice|split|send|set(?:Milliseconds|Seconds|Minutes|Hours|\r\n   Month|Year|FullYear|Date|UTC(?:Milliseconds|Seconds|Minutes|Hours|Month|FullYear|Date)|\r\n   Time|Hotkeys|Cursor|ZOptions|Active|Resizable|RequestHeader)|search|slice|\r\n   savePreferences|small|home|handleEvent|navigate|char|charCodeAt|charAt|concat|\r\n   contextual|confirm|compile|clear|captureEvents|call|createStyleSheet|createPopup|\r\n   createEventObject|to(?:GMTString|UTCString|String|Source|UpperCase|LowerCase|LocaleString)|\r\n   test|taint|taintEnabled|indexOf|italics|disableExternalCapture|dump|detachEvent|unshift|\r\n   untaint|unwatch|updateCommands|join|javaEnabled|pop|push|plugins.refresh|paddings|parse|\r\n   print|prompt|preference|enableExternalCapture|exec|execScript|valueOf|UTC|find|file|\r\n   fileModifiedDate|fileSize|fileCreatedDate|fileUpdatedDate|fixed|fontsize|fontcolor|\r\n   forward|fromCharCode|watch|link|load|lastIndexOf|anchor|attachEvent|atob|apply|alert|\r\n   abort|routeEvents|resize|resizeBy|resizeTo|recalc|returnValue|replace|reverse|reload|\r\n   releaseCapture|releaseEvents|go|get(?:Milliseconds|Seconds|Minutes|Hours|Month|Day|Year|FullYear|\r\n   Time|Date|TimezoneOffset|UTC(?:Milliseconds|Seconds|Minutes|Hours|Day|Month|FullYear|Date)|\r\n   Attention|Selection|ResponseHeader|AllResponseHeaders)|moveBy|moveBelow|moveTo|\r\n   moveToAbsolute|moveAbove|mergeAttributes|match|margins|btoa|big|bold|borderWidths|blink|back\r\n ) |\r\n (acceptNode|add|addEventListener|addTextTrack|adoptNode|after|animate|append|\r\n   appendChild|appendData|before|blur|canPlayType|captureStream|\r\n   caretPositionFromPoint|caretRangeFromPoint|checkValidity|clear|click|\r\n   cloneContents|cloneNode|cloneRange|close|closest|collapse|\r\n   compareBoundaryPoints|compareDocumentPosition|comparePoint|contains|\r\n   convertPointFromNode|convertQuadFromNode|convertRectFromNode|createAttribute|\r\n   createAttributeNS|createCaption|createCDATASection|createComment|\r\n   createContextualFragment|createDocument|createDocumentFragment|\r\n   createDocumentType|createElement|createElementNS|createEntityReference|\r\n   createEvent|createExpression|createHTMLDocument|createNodeIterator|\r\n   createNSResolver|createProcessingInstruction|createRange|createShadowRoot|\r\n   createTBody|createTextNode|createTFoot|createTHead|createTreeWalker|delete|\r\n   deleteCaption|deleteCell|deleteContents|deleteData|deleteRow|deleteTFoot|\r\n   deleteTHead|detach|disconnect|dispatchEvent|elementFromPoint|elementsFromPoint|\r\n   enableStyleSheetsForSet|entries|evaluate|execCommand|exitFullscreen|\r\n   exitPointerLock|expand|extractContents|fastSeek|firstChild|focus|forEach|get|\r\n   getAll|getAnimations|getAttribute|getAttributeNames|getAttributeNode|\r\n   getAttributeNodeNS|getAttributeNS|getBoundingClientRect|getBoxQuads|\r\n   getClientRects|getContext|getDestinationInsertionPoints|getElementById|\r\n   getElementsByClassName|getElementsByName|getElementsByTagName|\r\n   getElementsByTagNameNS|getItem|getNamedItem|getSelection|getStartDate|\r\n   getVideoPlaybackQuality|has|hasAttribute|hasAttributeNS|hasAttributes|\r\n   hasChildNodes|hasFeature|hasFocus|importNode|initEvent|insertAdjacentElement|\r\n   insertAdjacentHTML|insertAdjacentText|insertBefore|insertCell|insertData|\r\n   insertNode|insertRow|intersectsNode|isDefaultNamespace|isEqualNode|\r\n   isPointInRange|isSameNode|item|key|keys|lastChild|load|lookupNamespaceURI|\r\n   lookupPrefix|matches|move|moveAttribute|moveAttributeNode|moveChild|\r\n   moveNamedItem|namedItem|nextNode|nextSibling|normalize|observe|open|\r\n   parentNode|pause|play|postMessage|prepend|preventDefault|previousNode|\r\n   previousSibling|probablySupportsContext|queryCommandEnabled|\r\n   queryCommandIndeterm|queryCommandState|queryCommandSupported|queryCommandValue|\r\n   querySelector|querySelectorAll|registerContentHandler|registerElement|\r\n   registerProtocolHandler|releaseCapture|releaseEvents|remove|removeAttribute|\r\n   removeAttributeNode|removeAttributeNS|removeChild|removeEventListener|\r\n   removeItem|replace|replaceChild|replaceData|replaceWith|reportValidity|\r\n   requestFullscreen|requestPointerLock|reset|scroll|scrollBy|scrollIntoView|\r\n   scrollTo|seekToNextFrame|select|selectNode|selectNodeContents|set|setAttribute|\r\n   setAttributeNode|setAttributeNodeNS|setAttributeNS|setCapture|\r\n   setCustomValidity|setEnd|setEndAfter|setEndBefore|setItem|setNamedItem|\r\n   setRangeText|setSelectionRange|setSinkId|setStart|setStartAfter|setStartBefore|\r\n   slice|splitText|stepDown|stepUp|stopImmediatePropagation|stopPropagation|\r\n   submit|substringData|supports|surroundContents|takeRecords|terminate|toBlob|\r\n   toDataURL|toggle|toString|values|write|writeln\r\n ) |\r\n (all|catch|finally|race|reject|resolve|then\r\n )\r\n)(?=\\s*\\()</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.function.event-handler.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.function.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.function.dom.tsx</string>\r\n              </dict>\r\n              <key>6</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.function.promise.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>identifiers</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#object-identifiers</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?:(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\s*=\\s*(\r\n  ((async\\s+)?(\r\n    (function\\s*[(&lt;*]) |\r\n    (function\\s+) |\r\n    ([_$[:alpha:]][_$[:alnum:]]*\\s*=&gt;)\r\n  )) |\r\n  ((async\\s*)?(\r\n    ([\\(]\\s*([\\{\\[]\\s*)?$) |\r\n    # sure shot arrow functions even if =&gt; is on new line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?\r\n  [(]\\s*\r\n  (\r\n    ([)]\\s*:) |                                                                                       # ():\r\n    ((\\.\\.\\.\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\s*:)                                                                  # [(]param: | [(]...param:\r\n  )\r\n) |\r\n(\r\n  [&lt;]\\s*[_$[:alpha:]][_$[:alnum:]]*\\s+extends\\s*[^=&gt;]                                                              # &lt; typeparam extends\r\n) |\r\n# arrow function possible to detect only with =&gt; on same line\r\n(\r\n  (&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;]|\\&lt;\\s*([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\]))([^=&lt;&gt;]|=[^&lt;])*\\&gt;)*&gt;\\s*)?                                                                                 # typeparameters\r\n  \\(\\s*(([_$[:alpha:]]|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\.\\.\\.\\s*[_$[:alpha:]]))([^()]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\)))*)?\\)   # parameters\r\n  (\\s*:\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+)?                                                                        # return type\r\n  \\s*=&gt;                                                                                               # arrow operator\r\n)\r\n  ))\r\n))</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.function.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))\\s*([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.constant.property.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))\\s*([_$[:alpha:]][_$[:alnum:]]*)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.property.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.other.constant.tsx</string>\r\n            <key>match</key>\r\n            <string>([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>variable.other.readwrite.tsx</string>\r\n            <key>match</key>\r\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>object-identifiers</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.class.tsx</string>\r\n            <key>match</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)(?=\\s*\\??\\.\\s*prototype\\b(?!\\$))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))\\s*(?:\r\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\r\n  ([_$[:alpha:]][_$[:alnum:]]*)\r\n)(?=\\s*\\??\\.\\s*[_$[:alpha:]][_$[:alnum:]]*)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.constant.object.property.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.object.property.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?:\r\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\r\n  ([_$[:alpha:]][_$[:alnum:]]*)\r\n)(?=\\s*\\??\\.\\s*[_$[:alpha:]][_$[:alnum:]]*)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.constant.object.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.object.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-annotation</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.type.annotation.tsx</string>\r\n            <key>begin</key>\r\n            <string>(:)(?=\\s*\\S)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.type.annotation.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;![:|&amp;])((?=$|^|[,);\\}\\]]|//)|(?==[^&gt;])|((?&lt;=[\\}&gt;\\]\\)]|[_$[:alpha:]])\\s*(?=\\{)))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.type.annotation.tsx</string>\r\n            <key>begin</key>\r\n            <string>(:)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.type.annotation.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;![:|&amp;])((?=[,);\\}\\]]|//)|(?==[^&gt;])|(?=^\\s*$)|((?&lt;=\\S)(?=\\s*$))|((?&lt;=[\\}&gt;\\]\\)]|[_$[:alpha:]])\\s*(?=\\{)))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>return-type</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.return.type.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;=\\))\\s*(:)(?=\\s*\\S)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.type.annotation.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;![:|&amp;])(?=$|^|[{};,]|//)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#return-type-core</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.return.type.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;=\\))\\s*(:)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.type.annotation.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;![:|&amp;])((?=[{};,]|//|^\\s*$)|((?&lt;=\\S)(?=\\s*$)))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#return-type-core</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>return-type-core</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;=[:|&amp;])(?=\\s*\\{)</string>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-object</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-predicate-operator</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>arrow-return-type</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.return.type.arrow.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?&lt;=\\))\\s*(:)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.type.annotation.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?==&gt;|\\{|(^\\s*(export|function|class|interface|let|var|const|import|enum|namespace|module|type|abstract|declare)\\s+))</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#arrow-return-type-body</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>possibly-arrow-return-type</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?&lt;=\\))\\s*(:)(?=\\s*([^&lt;&gt;\\(\\)]|\\&lt;[^&lt;&gt;]+\\&gt;|\\([^\\(\\)]+\\))+\\s*=&gt;)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.arrow.tsx meta.return.type.arrow.tsx keyword.operator.type.annotation.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?==&gt;|\\{|(^\\s*(export|function|class|interface|let|var|const|import|enum|namespace|module|type|abstract|declare)\\s+))</string>\r\n        <key>contentName</key>\r\n        <string>meta.arrow.tsx meta.return.type.arrow.tsx</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#arrow-return-type-body</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>arrow-return-type-body</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;=[:])(?=\\s*\\{)</string>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-object</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-predicate-operator</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-parameters</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.type.parameters.tsx</string>\r\n        <key>begin</key>\r\n        <string>(&lt;)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.typeparameters.begin.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(&gt;)</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.typeparameters.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.modifier.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(extends)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-arguments</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.type.parameters.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\&lt;</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.typeparameters.begin.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\&gt;</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.typeparameters.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#numeric-literal</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-primitive</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-builtin-literals</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-tuple</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-object</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-conditional</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-operators</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-fn-type-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-paren-or-function-parameters</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-function-return-type</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-name</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-primitive</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>support.type.primitive.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(string|number|boolean|symbol|any|void|never)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n      </dict>\r\n      <key>type-builtin-literals</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>support.type.builtin.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(this|true|false|undefined|null|object)(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n      </dict>\r\n      <key>type-tuple</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.type.tuple.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\[</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.square.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\]</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.square.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-object</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.object.type.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\{</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.block.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#method-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#indexer-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#indexer-mapped-type-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#field-declaration</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-annotation</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>\\.\\.\\.</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.spread.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\}|;|,|$)|(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-comma</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#punctuation-semicolon</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-conditional</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(extends)\\s+</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;=:)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>begin</key>\r\n                <string>\\?</string>\r\n                <key>beginCaptures</key>\r\n                <dict>\r\n                  <key>0</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>keyword.operator.ternary.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>end</key>\r\n                <string>:</string>\r\n                <key>endCaptures</key>\r\n                <dict>\r\n                  <key>0</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>keyword.operator.ternary.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>patterns</key>\r\n                <array>\r\n                  <dict>\r\n                    <key>include</key>\r\n                    <string>#type</string>\r\n                  </dict>\r\n                </array>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-paren-or-function-parameters</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.type.paren.cover.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\(</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.round.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\)</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.brace.round.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#destructuring-parameter</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\s*(\\??)(?=\\s*(:\\s*(\r\n  (&lt;) |\r\n  ([(]\\s*(\r\n    ([)]) |\r\n    (\\.\\.\\.) |\r\n    ([_$[:alnum:]]+\\s*(\r\n      ([:,?=])|\r\n      ([)]\\s*=&gt;)\r\n    ))\r\n  ))\r\n)) |\r\n(:\\s*([\\(]\\s*([\\{\\[]\\s*)?$)))</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.rest.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.function.tsx variable.language.this.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.function.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.optional.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(public|private|protected|readonly)\\s+)?(?:(\\.\\.\\.)\\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\s*(\\??)(?=:)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.modifier.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.rest.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.parameter.tsx variable.language.this.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.parameter.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.optional.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-annotation</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.separator.parameter.tsx</string>\r\n            <key>match</key>\r\n            <string>,</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-fn-type-parameters</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.type.constructor.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(new)\\b(?=\\s*\\&lt;)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.new.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.type.constructor.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))(new)\\b\\s*(?=\\()</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.control.new.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#function-parameters</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.type.function.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?x)(\r\n  (?=\r\n    [(]\\s*(\r\n      ([)]) |\r\n      (\\.\\.\\.) |\r\n      ([_$[:alnum:]]+\\s*(\r\n        ([:,?=])|\r\n        ([)]\\s*=&gt;)\r\n      ))\r\n    )\r\n  )\r\n)</string>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#function-parameters</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-function-return-type</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.type.function.return.tsx</string>\r\n            <key>begin</key>\r\n            <string>(=&gt;)(?=\\s*\\S)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.function.arrow.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;!=&gt;)(?&lt;![|&amp;])(?=[,\\]\\)\\{\\}=;&gt;:\\?]|//|$)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-function-return-type-core</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.type.function.return.tsx</string>\r\n            <key>begin</key>\r\n            <string>=&gt;</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.function.arrow.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;!=&gt;)(?&lt;![|&amp;])((?=[,\\]\\)\\{\\}=;:\\?&gt;]|//|^\\s*$)|((?&lt;=\\S)(?=\\s*$)))</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-function-return-type-core</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-function-return-type-core</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?&lt;==&gt;)(?=\\s*\\{)</string>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-object</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type-predicate-operator</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#type</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-operators</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#typeof-operator</string>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?:([&amp;|])|(=(?!&gt;)))(?=\\s*\\{)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.type.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.assignment.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?&lt;=\\})</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-object</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>([&amp;|])|(=(?!&gt;))</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.type.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.assignment.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\S)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.keyof.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))keyof(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.ternary.tsx</string>\r\n            <key>match</key>\r\n            <string>(\\?|\\:)</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.infer.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))infer(?=\\s+[_$[:alpha:]])</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.expression.import.tsx</string>\r\n            <key>match</key>\r\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))import(?=\\s*\\()</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>type-predicate-operator</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>keyword.operator.expression.is.tsx</string>\r\n        <key>match</key>\r\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\.\\.\\.)|(?&lt;!\\.))is(?![_$[:alnum:]])(?:(?=\\.\\.\\.)|(?!\\.))</string>\r\n      </dict>\r\n      <key>type-name</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\s*(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.module.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.accessor.optional.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.type.tsx</string>\r\n            <key>match</key>\r\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>punctuation-comma</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>punctuation.separator.comma.tsx</string>\r\n        <key>match</key>\r\n        <string>,</string>\r\n      </dict>\r\n      <key>punctuation-semicolon</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>punctuation.terminator.statement.tsx</string>\r\n        <key>match</key>\r\n        <string>;</string>\r\n      </dict>\r\n      <key>punctuation-accessor</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>(?:(\\.)|(\\?\\.(?!\\s*[[:digit:]])))</string>\r\n        <key>captures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.accessor.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.accessor.optional.tsx</string>\r\n          </dict>\r\n        </dict>\r\n      </dict>\r\n      <key>string</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#qstring-single</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#qstring-double</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>qstring-double</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>string.quoted.double.tsx</string>\r\n        <key>begin</key>\r\n        <string>"</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.string.begin.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(")|((?:[^\\\\\\n])$)</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.string.end.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>invalid.illegal.newline.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string-character-escape</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>qstring-single</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>string.quoted.single.tsx</string>\r\n        <key>begin</key>\r\n        <string>\'</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.string.begin.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(\\\')|((?:[^\\\\\\n])$)</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.string.end.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>invalid.illegal.newline.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#string-character-escape</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>string-character-escape</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>constant.character.escape.tsx</string>\r\n        <key>match</key>\r\n        <string>\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)</string>\r\n      </dict>\r\n      <key>template</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>string.template.tsx</string>\r\n            <key>begin</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\s*(?=(&lt;\\s*(((keyof|infer)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\\'[^\\\']*\\\')|(\\"[^\\"]*\\")|(\\`[^\\`]*\\`))(?=\\s*([\\&lt;\\&gt;\\,\\.\\[=]|&amp;(?!&amp;)|\\|(?!\\|)))))([^&lt;&gt;\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?&lt;==)\\&gt;|\\&lt;\\s*(((keyof|infer)\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\{([^\\{\\}]|(\\{[^\\{\\}]*\\}))*\\})|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(\\[([^\\[\\]]|(\\[[^\\[\\]]*\\]))*\\])|(\\\'[^\\\']*\\\')|(\\"[^\\"]*\\")|(\\`[^\\`]*\\`))(?=\\s*([\\&lt;\\&gt;\\,\\.\\[=]|&amp;(?!&amp;)|\\|(?!\\|)))))([^&lt;&gt;\\(]|(\\(([^\\(\\)]|(\\([^\\(\\)]*\\)))*\\))|(?&lt;==)\\&gt;)*(?!=)\\&gt;)*(?!=)&gt;\\s*)`)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.function.tagged-template.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=`)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-arguments</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>string.template.tsx</string>\r\n            <key>begin</key>\r\n            <string>([_$[:alpha:]][_$[:alnum:]]*)?(`)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.function.tagged-template.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.string.template.begin.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>`</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.string.template.end.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#template-substitution-element</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#string-character-escape</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>template-substitution-element</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.template.expression.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\$\\{</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.template-expression.begin.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.template-expression.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expression</string>\r\n          </dict>\r\n        </array>\r\n        <key>contentName</key>\r\n        <string>meta.embedded.line.tsx</string>\r\n      </dict>\r\n      <key>regex</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>string.regexp.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;!\\+\\+|--)(?&lt;=[=(:,\\[?+!]|^return|[^\\._$[:alnum:]]return|^case|[^\\._$[:alnum:]]case|=&gt;|&amp;&amp;|\\|\\||\\*\\/)\\s*(\\/)(?![\\/*])(?=(?:[^\\/\\\\\\[]|\\\\.|\\[([^\\]\\\\]|\\\\.)+\\])+\\/[gimsuy]*(?!\\s*[a-zA-Z0-9_$]))</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.string.begin.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(/)([gimsuy]*)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.string.end.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.other.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#regexp</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>string.regexp.tsx</string>\r\n            <key>begin</key>\r\n            <string>(?&lt;![_$[:alnum:])\\]]|\\+\\+|--)\\/(?![\\/*])(?=(?:[^\\/\\\\\\[]|\\\\.|\\[([^\\]\\\\]|\\\\.)+\\])+\\/[gimsuy]*(?!\\s*[a-zA-Z0-9_$]))</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.string.begin.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(/)([gimsuy]*)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.string.end.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.other.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#regexp</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>regexp</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.control.anchor.regexp</string>\r\n            <key>match</key>\r\n            <string>\\\\[bB]|\\^|\\$</string>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>\\\\[1-9]\\d*|\\\\k&lt;([a-zA-Z_$][\\w$]*)&gt;</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.other.back-reference.regexp</string>\r\n              </dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.regexp</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.quantifier.regexp</string>\r\n            <key>match</key>\r\n            <string>[?+*]|\\{(\\d+,\\d+|\\d+,|,\\d+|\\d+)\\}\\??</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>keyword.operator.or.regexp</string>\r\n            <key>match</key>\r\n            <string>\\|</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.group.assertion.regexp</string>\r\n            <key>begin</key>\r\n            <string>(\\()((\\?=)|(\\?!)|(\\?&lt;=)|(\\?&lt;!))</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.group.regexp</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.group.assertion.regexp</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.assertion.look-ahead.regexp</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.assertion.negative-look-ahead.regexp</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.assertion.look-behind.regexp</string>\r\n              </dict>\r\n              <key>6</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>meta.assertion.negative-look-behind.regexp</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(\\))</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.group.regexp</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#regexp</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.group.regexp</string>\r\n            <key>begin</key>\r\n            <string>\\((?:(\\?:)|(?:\\?&lt;([a-zA-Z_$][\\w$]*)&gt;))?</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.group.regexp</string>\r\n              </dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.group.no-capture.regexp</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.regexp</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.group.regexp</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#regexp</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.other.character-class.set.regexp</string>\r\n            <key>begin</key>\r\n            <string>(\\[)(\\^)?</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.character-class.regexp</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.negation.regexp</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(\\])</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.character-class.regexp</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.other.character-class.range.regexp</string>\r\n                <key>match</key>\r\n                <string>(?:.|(\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\c[A-Z])|(\\\\.))\\-(?:[^\\]\\\\]|(\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\c[A-Z])|(\\\\.))</string>\r\n                <key>captures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>constant.character.numeric.regexp</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>constant.character.control.regexp</string>\r\n                  </dict>\r\n                  <key>3</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>constant.character.escape.backslash.regexp</string>\r\n                  </dict>\r\n                  <key>4</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>constant.character.numeric.regexp</string>\r\n                  </dict>\r\n                  <key>5</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>constant.character.control.regexp</string>\r\n                  </dict>\r\n                  <key>6</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>constant.character.escape.backslash.regexp</string>\r\n                  </dict>\r\n                </dict>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#regex-character-class</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#regex-character-class</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>regex-character-class</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.other.character-class.regexp</string>\r\n            <key>match</key>\r\n            <string>\\\\[wWsSdDtrnvf]|\\.</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.character.numeric.regexp</string>\r\n            <key>match</key>\r\n            <string>\\\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.character.control.regexp</string>\r\n            <key>match</key>\r\n            <string>\\\\c[A-Z]</string>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.character.escape.backslash.regexp</string>\r\n            <key>match</key>\r\n            <string>\\\\.</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>comment</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>comment.block.documentation.tsx</string>\r\n            <key>begin</key>\r\n            <string>/\\*\\*(?!/)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.comment.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\*/</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.comment.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#docblock</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>comment.block.tsx</string>\r\n            <key>begin</key>\r\n            <string>(/\\*)(?:\\s*((@)internal)(?=\\s|(\\*/)))?</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.comment.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.internaldeclaration.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.decorator.internaldeclaration.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>\\*/</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.comment.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(^[ \\t]+)?((//)(?:\\s*((@)internal)(?=\\s|$))?)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.whitespace.comment.leading.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>comment.line.double-slash.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.comment.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.internaldeclaration.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.decorator.internaldeclaration.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=^)</string>\r\n            <key>contentName</key>\r\n            <string>comment.line.double-slash.tsx</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>directives</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>comment.line.triple-slash.directive.tsx</string>\r\n        <key>begin</key>\r\n        <string>^(///)\\s*(?=&lt;(reference|amd-dependency|amd-module)(\\s+(path|types|no-default-lib|lib|name)\\s*=\\s*((\\\'([^\\\'\\\\]|\\\\\\\'|\\\\)*\\\')|(\\"([^\\"\\\\]|\\\\\\"|\\\\)*\\")))+\\s*/&gt;\\s*$)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.comment.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>end</key>\r\n        <string>(?=^)</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.tag.tsx</string>\r\n            <key>begin</key>\r\n            <string>(&lt;)(reference|amd-dependency|amd-module)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.tag.directive.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.tag.directive.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>/&gt;</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.tag.directive.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.other.attribute-name.directive.tsx</string>\r\n                <key>match</key>\r\n                <string>path|types|no-default-lib|lib|name</string>\r\n              </dict>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.assignment.tsx</string>\r\n                <key>match</key>\r\n                <string>=</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#string</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>docblock</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)\r\n((@)(?:access|api))\r\n\\s+\r\n(private|protected|public)\r\n\\b</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.language.access-type.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)\r\n((@)author)\r\n\\s+\r\n(\r\n  [^@\\s&lt;&gt;*/]\r\n  (?:[^@&lt;&gt;*/]|\\*[^/])*\r\n)\r\n(?:\r\n  \\s*\r\n  (&lt;)\r\n  ([^&gt;\\s]+)\r\n  (&gt;)\r\n)?</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.instance.jsdoc</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.bracket.angle.begin.jsdoc</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.other.email.link.underline.jsdoc</string>\r\n              </dict>\r\n              <key>6</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.bracket.angle.end.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)\r\n((@)borrows) \\s+\r\n((?:[^@\\s*/]|\\*[^/])+)    # &lt;that namepath&gt;\r\n\\s+ (as) \\s+              # as\r\n((?:[^@\\s*/]|\\*[^/])+)    # &lt;this namepath&gt;</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.instance.jsdoc</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>keyword.operator.control.jsdoc</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.instance.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>meta.example.jsdoc</string>\r\n            <key>begin</key>\r\n            <string>((@)example)\\s+</string>\r\n            <key>end</key>\r\n            <string>(?=@|\\*/)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>match</key>\r\n                <string>^\\s\\*\\s+</string>\r\n              </dict>\r\n              <dict>\r\n                <key>contentName</key>\r\n                <string>constant.other.description.jsdoc</string>\r\n                <key>begin</key>\r\n                <string>\\G(&lt;)caption(&gt;)</string>\r\n                <key>beginCaptures</key>\r\n                <dict>\r\n                  <key>0</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>entity.name.tag.inline.jsdoc</string>\r\n                  </dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.definition.bracket.angle.begin.jsdoc</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.definition.bracket.angle.end.jsdoc</string>\r\n                  </dict>\r\n                </dict>\r\n                <key>end</key>\r\n                <string>(&lt;/)caption(&gt;)|(?=\\*/)</string>\r\n                <key>endCaptures</key>\r\n                <dict>\r\n                  <key>0</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>entity.name.tag.inline.jsdoc</string>\r\n                  </dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.definition.bracket.angle.begin.jsdoc</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.definition.bracket.angle.end.jsdoc</string>\r\n                  </dict>\r\n                </dict>\r\n              </dict>\r\n              <dict>\r\n                <key>match</key>\r\n                <string>[^\\s@*](?:[^*]|\\*[^/])*</string>\r\n                <key>captures</key>\r\n                <dict>\r\n                  <key>0</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>source.embedded.tsx</string>\r\n                  </dict>\r\n                </dict>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x) ((@)kind) \\s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \\b</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>constant.language.symbol-type.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)\r\n((@)see)\r\n\\s+\r\n(?:\r\n  # URL\r\n  (\r\n    (?=https?://)\r\n    (?:[^\\s*]|\\*[^/])+\r\n  )\r\n  |\r\n  # JSDoc namepath\r\n  (\r\n    (?!\r\n      # Avoid matching bare URIs (also acceptable as links)\r\n      https?://\r\n      |\r\n      # Avoid matching {@inline tags}; we match those below\r\n      (?:\\[[^\\[\\]]*\\])? # Possible description [preceding]{@tag}\r\n      {@(?:link|linkcode|linkplain|tutorial)\\b\r\n    )\r\n    # Matched namepath\r\n    (?:[^@\\s*/]|\\*[^/])+\r\n  )\r\n)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.link.underline.jsdoc</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.instance.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)\r\n((@)template)\r\n\\s+\r\n# One or more valid identifiers\r\n(\r\n  [A-Za-z_$]         # First character: non-numeric word character\r\n  [\\w$.\\[\\]]*        # Rest of identifier\r\n  (?:                # Possible list of additional identifiers\r\n    \\s* , \\s*\r\n    [A-Za-z_$]\r\n    [\\w$.\\[\\]]*\r\n  )*\r\n)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)\r\n(\r\n  (@)\r\n  (?:arg|argument|const|constant|member|namespace|param|var)\r\n)\r\n\\s+\r\n(\r\n  [A-Za-z_$]\r\n  [\\w$.\\[\\]]*\r\n)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>((@)typedef)\\s+(?={)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\s|\\*/|[^{}\\[\\]A-Za-z_$])</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#jsdoctype</string>\r\n              </dict>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.instance.jsdoc</string>\r\n                <key>match</key>\r\n                <string>(?:[^@\\s*/]|\\*[^/])+</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\s+(?={)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\s|\\*/|[^{}\\[\\]A-Za-z_$])</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#jsdoctype</string>\r\n              </dict>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.jsdoc</string>\r\n                <key>match</key>\r\n                <string>([A-Za-z_$][\\w$.\\[\\]]*)</string>\r\n              </dict>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.jsdoc</string>\r\n                <key>match</key>\r\n                <string>(?x)\r\n(\\[)\\s*\r\n[\\w$]+\r\n(?:\r\n  (?:\\[\\])?                                        # Foo[ ].bar properties within an array\r\n  \\.                                                # Foo.Bar namespaced parameter\r\n  [\\w$]+\r\n)*\r\n(?:\r\n  \\s*\r\n  (=)                                                # [foo=bar] Default parameter value\r\n  \\s*\r\n  (\r\n    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes\r\n    (?&gt;\r\n      "(?:(?:\\*(?!/))|(?:\\\\(?!"))|[^*\\\\])*?" |                      # [foo="bar"] Double-quoted\r\n      \'(?:(?:\\*(?!/))|(?:\\\\(?!\'))|[^*\\\\])*?\' |                      # [foo=\'bar\'] Single-quoted\r\n      \\[ (?:(?:\\*(?!/))|[^*])*? \\] |                                # [foo=[1,2]] Array literal\r\n      (?:(?:\\*(?!/))|\\s(?!\\s*\\])|\\[.*?(?:\\]|(?=\\*/))|[^*\\s\\[\\]])*   # Everything else\r\n    )*\r\n  )\r\n)?\r\n\\s*(?:(\\])((?:[^*\\s]|\\*[^\\s/])+)?|(?=\\*/))</string>\r\n                <key>captures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.definition.optional-value.begin.bracket.square.jsdoc</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>keyword.operator.assignment.jsdoc</string>\r\n                  </dict>\r\n                  <key>3</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>source.embedded.tsx</string>\r\n                  </dict>\r\n                  <key>4</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.definition.optional-value.end.bracket.square.jsdoc</string>\r\n                  </dict>\r\n                  <key>5</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>invalid.illegal.syntax.jsdoc</string>\r\n                  </dict>\r\n                </dict>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(?x)\r\n(\r\n  (@)\r\n  (?:define|enum|exception|export|extends|lends|implements|modifies\r\n  |namespace|private|protected|returns?|suppress|this|throws|type\r\n  |yields?)\r\n)\r\n\\s+(?={)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=\\s|\\*/|[^{}\\[\\]A-Za-z_$])</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#jsdoctype</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>(?x)\r\n(\r\n  (@)\r\n  (?:alias|augments|callback|constructs|emits|event|fires|exports?\r\n  |extends|external|function|func|host|lends|listens|interface|memberof!?\r\n  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)\r\n)\r\n\\s+\r\n(\r\n  (?:\r\n    [^{}@\\s*] | \\*[^/]\r\n  )+\r\n)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.instance.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>contentName</key>\r\n            <string>variable.other.jsdoc</string>\r\n            <key>begin</key>\r\n            <string>((@)(?:default(?:value)?|license|version))\\s+(([\'\'"]))</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.jsdoc</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.string.begin.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(\\3)|(?=$|\\*/)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.jsdoc</string>\r\n              </dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.string.end.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>match</key>\r\n            <string>((@)(?:default(?:value)?|license|tutorial|variation|version))\\s+([^\\s*]+)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>variable.other.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>storage.type.class.jsdoc</string>\r\n            <key>match</key>\r\n            <string>(?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \\b</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.block.tag.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#inline-tags</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>brackets</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>{</string>\r\n            <key>end</key>\r\n            <string>}|(?=\\*/)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#brackets</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>\\[</string>\r\n            <key>end</key>\r\n            <string>\\]|(?=\\*/)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#brackets</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>inline-tags</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.other.description.jsdoc</string>\r\n            <key>match</key>\r\n            <string>(\\[)[^\\]]+(\\])(?={@(?:link|linkcode|linkplain|tutorial))</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.bracket.square.begin.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.bracket.square.end.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.type.instance.jsdoc</string>\r\n            <key>begin</key>\r\n            <string>({)((@)(?:link(?:code|plain)?|tutorial))\\s*</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.bracket.curly.begin.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>storage.type.class.jsdoc</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.inline.tag.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>}|(?=\\*/)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.bracket.curly.end.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>match</key>\r\n                <string>\\G((?=https?://)(?:[^|}\\s*]|\\*[/])+)(\\|)?</string>\r\n                <key>captures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>variable.other.link.underline.jsdoc</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.separator.pipe.jsdoc</string>\r\n                  </dict>\r\n                </dict>\r\n              </dict>\r\n              <dict>\r\n                <key>match</key>\r\n                <string>\\G((?:[^{}@\\s|*]|\\*[^/])+)(\\|)?</string>\r\n                <key>captures</key>\r\n                <dict>\r\n                  <key>1</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>variable.other.description.jsdoc</string>\r\n                  </dict>\r\n                  <key>2</key>\r\n                  <dict>\r\n                    <key>name</key>\r\n                    <string>punctuation.separator.pipe.jsdoc</string>\r\n                  </dict>\r\n                </dict>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsdoctype</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>invalid.illegal.type.jsdoc</string>\r\n            <key>match</key>\r\n            <string>\\G{(?:[^}*]|\\*[^/}])+$</string>\r\n          </dict>\r\n          <dict>\r\n            <key>contentName</key>\r\n            <string>entity.name.type.instance.jsdoc</string>\r\n            <key>begin</key>\r\n            <string>\\G({)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>0</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.instance.jsdoc</string>\r\n              </dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.bracket.curly.begin.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>((}))\\s*|(?=\\*/)</string>\r\n            <key>endCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.type.instance.jsdoc</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.bracket.curly.end.jsdoc</string>\r\n              </dict>\r\n            </dict>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#brackets</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-tag-without-attributes-in-expression</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-tag-in-expression</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-tag-without-attributes-in-expression</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?&lt;!\\+\\+|--)(?&lt;=[({\\[,?=&gt;:*]|&amp;&amp;|\\|\\||\\?|^return|[^\\._$[:alnum:]]return|^default|[^\\._$[:alnum:]]default|^)\\s*(?=(&lt;)\\s*(?:([_$a-zA-Z][-$\\w.]*)(?&lt;!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?&lt;!\\.|-))?\\s*(&gt;))</string>\r\n        <key>end</key>\r\n        <string>(?!(&lt;)\\s*(?:([_$a-zA-Z][-$\\w.]*)(?&lt;!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?&lt;!\\.|-))?\\s*(&gt;))</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-tag-without-attributes</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-tag-without-attributes</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.tag.without-attributes.tsx</string>\r\n        <key>begin</key>\r\n        <string>(&lt;)\\s*(?:([_$a-zA-Z][-$\\w.]*)(?&lt;!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?&lt;!\\.|-))?\\s*(&gt;)</string>\r\n        <key>end</key>\r\n        <string>(&lt;/)\\s*(?:([_$a-zA-Z][-$\\w.]*)(?&lt;!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?&lt;!\\.|-))?\\s*(&gt;)</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.tag.begin.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.tag.namespace.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.separator.namespace.tsx</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.tag.tsx</string>\r\n          </dict>\r\n          <key>5</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.class.component.tsx</string>\r\n          </dict>\r\n          <key>6</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.tag.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.tag.begin.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.tag.namespace.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.separator.namespace.tsx</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.tag.tsx</string>\r\n          </dict>\r\n          <key>5</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.class.component.tsx</string>\r\n          </dict>\r\n          <key>6</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.tag.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>contentName</key>\r\n        <string>meta.jsx.children.tsx</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-children</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-tag-in-expression</key>\r\n      <dict>\r\n        <key>begin</key>\r\n        <string>(?x)\r\n  (?&lt;!\\+\\+|--)(?&lt;=[({\\[,?=&gt;:*]|&amp;&amp;|\\|\\||\\?|^return|[^\\._$[:alnum:]]return|^default|[^\\._$[:alnum:]]default|^)\\s*\r\n  (?!&lt;\\s*[_$[:alpha:]][_$[:alnum:]]*((\\s+extends\\s+[^=&gt;])|,)) # look ahead is not type parameter of arrow\r\n  (?=(&lt;)\\s*(?:([_$a-zA-Z][-$\\w.]*)(?&lt;!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?&lt;!\\.|-))(?=((&lt;\\s*)|(\\s+))(?!\\?)|\\/?&gt;))</string>\r\n        <key>end</key>\r\n        <string>(?!(&lt;)\\s*(?:([_$a-zA-Z][-$\\w.]*)(?&lt;!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?&lt;!\\.|-))(?=((&lt;\\s*)|(\\s+))(?!\\?)|\\/?&gt;))</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-tag</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-tag</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.tag.tsx</string>\r\n        <key>begin</key>\r\n        <string>(?=(&lt;)\\s*(?:([_$a-zA-Z][-$\\w.]*)(?&lt;!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?&lt;!\\.|-))(?=((&lt;\\s*)|(\\s+))(?!\\?)|\\/?&gt;))</string>\r\n        <key>end</key>\r\n        <string>(/&gt;)|(?:(&lt;/)\\s*(?:([_$a-zA-Z][-$\\w.]*)(?&lt;!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?&lt;!\\.|-))?\\s*(&gt;))</string>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.tag.end.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.tag.begin.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.tag.namespace.tsx</string>\r\n          </dict>\r\n          <key>4</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.separator.namespace.tsx</string>\r\n          </dict>\r\n          <key>5</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.name.tag.tsx</string>\r\n          </dict>\r\n          <key>6</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>support.class.component.tsx</string>\r\n          </dict>\r\n          <key>7</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.tag.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(&lt;)\\s*(?:([_$a-zA-Z][-$\\w.]*)(?&lt;!\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\w.]*))(?&lt;!\\.|-))(?=((&lt;\\s*)|(\\s+))(?!\\?)|\\/?&gt;)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.tag.begin.tsx</string>\r\n              </dict>\r\n              <key>2</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.tag.namespace.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.separator.namespace.tsx</string>\r\n              </dict>\r\n              <key>4</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>entity.name.tag.tsx</string>\r\n              </dict>\r\n              <key>5</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>support.class.component.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=[/]?&gt;)</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#comment</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#type-arguments</string>\r\n              </dict>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#jsx-tag-attributes</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n          <dict>\r\n            <key>begin</key>\r\n            <string>(&gt;)</string>\r\n            <key>beginCaptures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.tag.end.tsx</string>\r\n              </dict>\r\n            </dict>\r\n            <key>end</key>\r\n            <string>(?=&lt;/)</string>\r\n            <key>contentName</key>\r\n            <string>meta.jsx.children.tsx</string>\r\n            <key>patterns</key>\r\n            <array>\r\n              <dict>\r\n                <key>include</key>\r\n                <string>#jsx-children</string>\r\n              </dict>\r\n            </array>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-children</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-tag-without-attributes</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-tag</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-evaluated-code</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-entities</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-evaluated-code</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.embedded.expression.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\{</string>\r\n        <key>end</key>\r\n        <string>\\}</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.section.embedded.begin.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.section.embedded.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#expression</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-entities</key>\r\n      <dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>constant.character.entity.tsx</string>\r\n            <key>match</key>\r\n            <string>(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>\r\n            <key>captures</key>\r\n            <dict>\r\n              <key>1</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.entity.tsx</string>\r\n              </dict>\r\n              <key>3</key>\r\n              <dict>\r\n                <key>name</key>\r\n                <string>punctuation.definition.entity.tsx</string>\r\n              </dict>\r\n            </dict>\r\n          </dict>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>invalid.illegal.bad-ampersand.tsx</string>\r\n            <key>match</key>\r\n            <string>&amp;</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-tag-attributes</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>meta.tag.attributes.tsx</string>\r\n        <key>begin</key>\r\n        <string>\\s+</string>\r\n        <key>end</key>\r\n        <string>(?=[/]?&gt;)</string>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#comment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-tag-attribute-name</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-tag-attribute-assignment</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-string-double-quoted</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-string-single-quoted</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-evaluated-code</string>\r\n          </dict>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-tag-attributes-illegal</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-tag-attribute-name</key>\r\n      <dict>\r\n        <key>match</key>\r\n        <string>(?x)\r\n  \\s*\r\n  (?:([_$a-zA-Z][-$\\w.]*)(:))?\r\n  ([_$a-zA-Z][-$\\w]*)\r\n  (?=\\s|=|/?&gt;|/\\*|//)</string>\r\n        <key>captures</key>\r\n        <dict>\r\n          <key>1</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.other.attribute-name.namespace.tsx</string>\r\n          </dict>\r\n          <key>2</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.separator.namespace.tsx</string>\r\n          </dict>\r\n          <key>3</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>entity.other.attribute-name.tsx</string>\r\n          </dict>\r\n        </dict>\r\n      </dict>\r\n      <key>jsx-tag-attribute-assignment</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>keyword.operator.assignment.tsx</string>\r\n        <key>match</key>\r\n        <string>=(?=\\s*(?:\'|"|{|/\\*|//|\\n))</string>\r\n      </dict>\r\n      <key>jsx-string-double-quoted</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>string.quoted.double.tsx</string>\r\n        <key>begin</key>\r\n        <string>"</string>\r\n        <key>end</key>\r\n        <string>"</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.string.begin.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.string.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-entities</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-string-single-quoted</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>string.quoted.single.tsx</string>\r\n        <key>begin</key>\r\n        <string>\'</string>\r\n        <key>end</key>\r\n        <string>\'</string>\r\n        <key>beginCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.string.begin.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>endCaptures</key>\r\n        <dict>\r\n          <key>0</key>\r\n          <dict>\r\n            <key>name</key>\r\n            <string>punctuation.definition.string.end.tsx</string>\r\n          </dict>\r\n        </dict>\r\n        <key>patterns</key>\r\n        <array>\r\n          <dict>\r\n            <key>include</key>\r\n            <string>#jsx-entities</string>\r\n          </dict>\r\n        </array>\r\n      </dict>\r\n      <key>jsx-tag-attributes-illegal</key>\r\n      <dict>\r\n        <key>name</key>\r\n        <string>invalid.illegal.attribute.tsx</string>\r\n        <key>match</key>\r\n        <string>\\S+</string>\r\n      </dict>\r\n    </dict>\r\n  </dict>\r\n</plist>'}}]);