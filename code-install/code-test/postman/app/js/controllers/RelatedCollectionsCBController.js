(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{"./search/controllers/RelatedCollectionsCBController.js":function(e,t,o){"use strict";o.r(t),o.d(t,"default",(function(){return u}));o("../../node_modules/mobx/lib/mobx.module.js");var r=o("./js/modules/services/RequestWithFileBodyService.js"),s=o("./runtime-repl/request-http/PrepareRequestService.js"),l=o("./runtime-repl/request-http/ResolveRequest.js"),n=o("./js/stores/get-store.js");class u{getResolvedRequest(e){let t,o;return Promise.resolve().then((()=>e?(o=Object(n.getStore)("EditorStore").find(e),o?(t=o.model&&Object(r.getRequestWithFileBody)(o.model),t||Promise.reject(new Error("RelatedCollectionsCBController~getResolvedRequest: Request not found."))):Promise.reject(new Error("RelatedCollectionsCBController~getResolvedRequest: Editor not found."))):Promise.reject(new Error("RelatedCollectionsCBController~getResolvedRequest: Incorrect Parameters.")))).then((e=>s.default.getPopulatedRequest(e))).then((e=>l.default.resolve(e))).then((e=>e?e.url.toString():Promise.reject("RelatedCollectionsCBController~getResolvedRequest: Error in resolving request.")))}}}}]);