(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{29766:function(e,t,o){"use strict";o.r(t),function(e){o.d(t,"default",(function(){return I}));var s,r=o(2),n=o.n(r),a=o(1656),i=o(2353),l=o(5929),m=o(10160),d=o(10155),c=o(10153),h=o(2825),p=o.n(h),C=o(10156),S=o(7326),g=o(11230),u=o(10157),f=o(6059),b=o(6055),v=o(2765);let I=Object(i.observer)(s=class extends r.Component{constructor(e){super(e),this.state={loading:!0,loadError:!1,hasError:!1,isOpenFilterSelected:!0,isResolvedFilterSelected:!1,isScrollable:!0},this.rightOverlayModalRef=null,this.parseError=this.parseError.bind(this),this.handleRetry=this.handleRetry.bind(this),this.setCommentDrawerRef=this.setCommentDrawerRef.bind(this),this.stopScroll=this.stopScroll.bind(this),this.handleClose=this.handleClose.bind(this)}async componentDidMount(){this.setState({loading:!0,loadError:!1}),C.default.handleAnalytics("api","view","api"),d.default.getComments({model:this.props.contextData.commentModel,modelId:this.props.contextData.commentModelId}).then((()=>{requestIdleCallback((()=>{Object(l.getStore)("CommentStore").setLoaded(!0);const t=Object(l.getStore)("CommentStore"),o=t.activeCommentId,s=t.find(o);!o||e.get(s,"anchor","").split("/").length<4?this.setState({loading:!1,loadError:!1}):Object(a.when)((()=>!Object(l.getStore)("APIListStore").isStoreHydrating),(()=>{const t=this.props.contextData.commentModelId,r=Object(l.getStore)("APIListStore").find(t),n=e.get(r,"childEntities.values"),a=e.get(n,"length",0);for(let r=0;r<a;r++){const a=n[r],i=e.get(a,"relationsStore.relations.schema");if(e.head(Object.keys(i))===s.anchor.split("/")[3]){const e={comment:o,ctx:"comments"};v.default.transitionTo("build.apiVersion",{apiId:t,versionId:a.id},e,{tabOptions:{openIn:this.props.editorId}});break}}}))}))})).catch((e=>{this.setState({loading:!1,loadError:!0})}));let t=this.props.contextData.commentModelId,{addComment:o,deleteComment:s,resolveComment:r}=await Object(u.fetchPermissions)(["addComment","deleteComment","resolveComment"],t,f.MODEL_TYPE.API);this.setState({addCommentPermission:o,deleteCommentPermission:s,resolveCommentPermission:r})}componentDidUpdate(){if(!this.state.isResolvedFilterSelected){const t=Object(l.getStore)("CommentStore"),o=t.find(t.activeCommentId),s=Object(l.getStore)("AnnotationStore").find(e.get(o,"annotationId"));e.get(s,"status.resolved")&&this.handleResolvedFilter()}}parseError(e){return e.isFriendly?e.message:""}handleRetry(){return this.setState({loading:!0,loadError:!1}),d.default.getComments({model:this.props.contextData.commentModel,modelId:this.props.contextData.commentModelId}).then((()=>{this.setState({loading:!1,loadError:!1})})).catch((e=>{this.setState({loading:!1,loadError:!0})}))}setCommentDrawerRef(e){this.commentDrawerRef=e,this.commentDrawerRef&&this.forceUpdate()}stopScroll(e){this.setState({isScrollable:!e})}handleClose(){this.props.onClose&&this.props.onClose(),b.default.removeCommentQueryParam()}render(){let t,{commentModel:o,commentModelId:s,schemaId:r}=this.props.contextData||{};t=e.filter(Object(l.getStore)("CommentStore").values,(e=>e.model===o&&e.modelId===s));const a=e.sortBy(e.filter(t,(e=>!e.anchor||e.anchor===`${o}/${s}`)),"createdAt")||[],i=this.props.contextData.model.name,d=Object(l.getStore)("CurrentUserStore")||{},h=Object(l.getStore)("TeamUserStore"),C=e.reduce(h.values,((e,t)=>(e[t.id]={name:t.name,id:t.id,username:t.username,email:t.email,profilePicUrl:t.profilePicUrl,roles:t.roles},e)),{}),u=Object.values(C),f=!Object(l.getStore)("SyncStatusStore").isSocketConnected,b=Object(m.isUserAdmin)(d),v=(e.reduce((t||[]).reverse(),((e,t)=>(e.includes(t.annotationId)||e.push(t.annotationId),e)),[]),Object(l.getStore)("CommentStore")),I=v.find(v.activeCommentId),D=v.setActiveCommentId;let E=e.reduce(t||[],((t,o)=>{let s=o&&o.anchor&&e.get(o.anchor.split("/"),"[3]"),r=(this.props.contextData.versions||[]).filter((t=>s===e.get(t,"schema[0]"))),n=e.get(r,"[0].id");return n&&(t[o.annotationId]={version:n}),t}),{});return f&&this.state.loading?n.a.createElement(n.a.Fragment,null,n.a.createElement(S.ContextBarViewHeader,{onClose:this.props.onClose,title:"Comments"}),n.a.createElement(g.default,{origin:"context-bar"})):n.a.createElement("div",{className:p()({"comment-drawer-container":!0,"no-scroll":!this.state.isScrollable}),ref:this.setCommentDrawerRef},n.a.createElement(S.ContextBarViewHeader,{onClose:this.handleClose,title:"Comments"}),n.a.createElement("div",{className:"comment-drawer"},n.a.createElement(c.default,{editor:e.get(this.props.contextData,"editor"),comments:t,requestComments:a,isOpenFilterSelected:!0,addCommentPermission:this.state.addCommentPermission,deleteCommentPermission:this.state.deleteCommentPermission,isAdmin:b,isOffline:f,loading:this.state.loading,loadError:this.state.loadError,hasError:this.state.hasError,teamUsers:u,teamUsersMap:C,onRetry:this.handleRetry,user:d,title:i,stopScroll:this.stopScroll,commentRef:this.commentDrawerRef,commentLinkDisabled:e.get(this.props.contextData,"commentLinkDisabled"),model:"api",modelId:e.get(this.props.contextData,"commentModelId"),commentLinkParams:E,origin:"contextBar",anchor:e.get(this.props.contextData,"anchor"),activeComment:I,setActiveComment:D})))}})||s}.call(this,o(2753))}}]);