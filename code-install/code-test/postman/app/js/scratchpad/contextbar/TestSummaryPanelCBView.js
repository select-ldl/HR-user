(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{24811:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),l=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__decorate||function(e,t,n,r){var l,a=arguments.length,o=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var c=e.length-1;c>=0;c--)(l=e[c])&&(o=(a<3?l(o):a>3?l(t,n,o):l(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o},o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return l(t,e),t},c=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=o(n(2)),u=c(n(47)),i=n(9),d=n(2353),f=n(1656),p=n(7326),m=n(24810),h=u.default.div`
  display: flex;
  flex-direction: column;
  flex-grow: 1;
`,g=u.default(i.Button)`
  margin: 0 ${({theme:e})=>e["spacing-s"]};
`;let y=class extends s.Component{constructor(){super(...arguments),this.currChannel="default"}get log(){return this.props.contextData.model.testSummary.get(this.currChannel)||[]}render(){return s.default.createElement(s.default.Fragment,null,s.default.createElement(p.ContextBarViewHeader,{title:"Test summary",onClose:this.props.onClose},s.default.createElement(m.ChannelSelector,{channels:[...this.props.contextData.model.testSummary.keys()],currChannel:this.currChannel,onChannelSelect:f.action((e=>{this.currChannel=e}))}),s.default.createElement(g,{type:"secondary",text:"Clear",onClick:()=>this.props.contextData.model.clearTestSummary(this.currChannel)})),s.default.createElement(h,null,this.log.length?this.log.map((e=>s.default.createElement(i.Flex,{alignItems:"center",gap:"spacing-s",padding:"spacing-xs"},e.skipped&&s.default.createElement(i.IconStateDisableStrokeSmall,{color:"content-color-warning"}),!e.skipped&&(e.passed?s.default.createElement(i.IconStateSuccessFillSmall,{color:"content-color-success"}):s.default.createElement(i.IconStateFailFillSmall,{color:"content-color-error"})),s.default.createElement(i.Text,{isTruncated:!0},e.name)))):s.default.createElement(i.Flex,{padding:"spacing-s"},s.default.createElement(i.Text,{color:"content-color-tertiary"},"Attach a test-summary block to the port to see output data"))))}};a([f.observable],y.prototype,"currChannel",void 0),a([f.computed],y.prototype,"log",null),y=a([d.observer],y),t.default=y}}]);