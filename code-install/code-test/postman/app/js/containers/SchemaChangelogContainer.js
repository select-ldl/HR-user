(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{"./schema/components/SchemaChangelog.js":function(e,t,s){"use strict";s.r(t),function(e){s.d(t,"default",(function(){return C}));var a,o=s("../../node_modules/react/index.js"),n=s.n(o),r=s("../../node_modules/mobx-react/dist/mobx-react.module.js"),i=s("./node_modules/@postman/date-helper/index.js"),c=s.n(i),h=s("./js/components/base/Avatar.js"),l=s("./js/stores/get-store.js"),d=s("./schema/components/OfflineChangelog.js"),g=s("./schema/components/ErrorChangelog.js"),m=s("./schema/components/EmptyChangelog.js"),p=s("./schema/components/NoSchemaFound.js"),u=s("./js/components/base/LoadingIndicator.js"),f=s("./js/components/activity-feed/ActivityItemComponents.js"),S=s("./schema/components/DiffStrap.js"),E=s("./schema/components/DiffText.js"),_=s("./js/components/base/Buttons.js"),R=s("./schema/constants/SchemaErrors.js"),j=s("./js/components/base/Icons/IntegrationIcon.js");let C=Object(r.observer)(a=class extends o.Component{constructor(t){super(t),this.handleScroll=this.handleScroll.bind(this),this.handleScrollDebounced=e.debounce(this.handleScroll,100),this.scrollMoreLoaderIntoView=this.scrollMoreLoaderIntoView.bind(this),this.getRestoreTooltip=this.getRestoreTooltip.bind(this)}getDiffs(e){let t=e.diff.line.split("\n"),s=[],a=[];return t.forEach(((e,s)=>{e.includes("文件末尾没有换行符")&&t.splice(s,1)})),t.forEach(((e,t)=>{"@"===e.charAt(0)&&a.push(t)})),a.forEach(((e,o)=>{o===a.length?s.push(t.slice(e,t.length)):s.push(t.slice(e,a[o+1]))})),s}getActorName(t){return"integration"===e.get(t,"createdBy.type")?n.a.createElement("div",{className:"changelog__header__action-description__actor-name"},"集成"):e.get(t,"createdBy.isAccessible")?n.a.createElement(f.User,{id:e.get(t,"createdBy.id"),name:e.get(t,"createdBy.name")||e.get(t,"createdBy.username")}):n.a.createElement("div",{className:"changelog__header__action-description__actor-name"},e.get(t,"createdBy.name"))}getActorIcon(t){return"integration"===e.get(t,"createdBy.type")?n.a.createElement("div",{className:"changelog__actor-icon"},n.a.createElement(j.default,{className:"changelog__actor-icon__content"})):e.get(t,"createdBy.isAccessible")?n.a.createElement(f.ProfilePic,{id:e.get(t,"createdBy.id")}):n.a.createElement("div",{className:"changelog__actor-icon"},n.a.createElement(h.default,{size:"medium",userId:e.get(t,"createdBy.id"),customPic:e.get(t,"createdBy.profilePicUrl")}))}getActionText(e){return"create"===e?"创建了一个新的架构.":"update"===e?"做了以下更改:":"restore"===e?"恢复了架构的旧版本.":void 0}handleScroll(){const e=this.refs.contentRef;!this.props.changelogsExhausted&&!this.props.fetchingMoreLogs&&Object(l.getStore)("SyncStatusStore").isSocketConnected&&e&&e.scrollHeight-(e.scrollTop+e.offsetHeight)<=5&&this.props.onFetchMoreChangelog()}scrollMoreLoaderIntoView(){const e=this.refs.moreLoader;e&&e.scrollIntoView()}getRestoreTooltip(){return Object(l.getStore)("SyncStatusStore").isSocketConnected?this.props.updateSchemaPermission?"":R.PERMISSION_ERROR:R.OFFLINE_ERROR}render(){const t=!Object(l.getStore)("GateKeeperStore").isSyncEnabled||this.props.error;return this.props.loading||this.props.schemaLoading?n.a.createElement("div",{className:"changelog_loader"},n.a.createElement(u.default,null)):this.props.isOffline?n.a.createElement(d.default,null):t?n.a.createElement(g.default,{onRetry:this.props.onRetry}):this.props.noSchema?n.a.createElement(p.default,null):0===e.get(this.props,"revisions.length",0)&&this.props.changelogsExhausted?n.a.createElement(m.default,null):n.a.createElement("div",{className:"changelog__wrapper",ref:"contentRef",onScroll:this.handleScrollDebounced},(this.props.revisions||[]).map(((t,s)=>{let a=this.getDiffs(t),o=c.a.getFormattedDateAndTime(t.createdAt);return n.a.createElement("div",{key:s,className:"changelog"},n.a.createElement(f.Header,null,this.getActorIcon(t),n.a.createElement("div",{className:"changelog__header"},n.a.createElement("div",{className:"changelog__header__date"},o),n.a.createElement("div",{className:"changelog__header__action-description"},this.getActorName(t),n.a.createElement("span",null,this.getActionText(t.action))))),e.map(a,((e,t)=>{let s;return s=e.length>11?e.slice(0,11):e,n.a.createElement("div",{className:"changelog-content-container",key:t},n.a.createElement("div",{className:"changelog-content-container__content",onClick:()=>{this.props.onExpand(e,this.props.apiName)}},n.a.createElement(S.default,{diff:s}),n.a.createElement(E.default,{diff:s}),n.a.createElement("div",{className:"changelog-content-container__content__shadow"})))})),e.has(t,"allowedActions.restore")&&t.allowedActions.restore&&n.a.createElement("div",{className:"changelog-restore"},this.props.isRestoring&&this.props.restoreEntity===t.id?n.a.createElement("div",{className:"changelog-restore__loading"},n.a.createElement(u.default,null)):n.a.createElement(_.Button,{className:"changelog-restore__button",type:"text",onClick:()=>{this.props.onRestoreSchema(t.id)},disabled:!this.props.updateSchemaPermission||!Object(l.getStore)("SyncStatusStore").isSocketConnected,tooltip:this.getRestoreTooltip(),tooltipImmediate:!0},"恢复")))})),!this.props.changelogsExhausted&&this.props.fetchingMoreLogs&&n.a.createElement("div",{ref:"moreLoader",className:"changelog__more-loader"},n.a.createElement(u.default,null)))}})||a}.call(this,s("./node_modules/lodash/lodash.js"))},"./schema/containers/SchemaChangelogContainer.js":function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return j}));var a,o=s("../../node_modules/react/index.js"),n=s.n(o),r=s("../../node_modules/mobx-react/dist/mobx-react.module.js"),i=s("./node_modules/lodash/lodash.js"),c=s.n(i),h=s("./js/stores/get-store.js"),l=s("../../node_modules/mobx/lib/mobx.module.js"),d=s("./node_modules/classnames/index.js"),g=s.n(d),m=s("../../node_modules/@postman/aether/esmLib/index.js"),p=s("./schema/services/ChangelogService.js"),u=s("./schema/constants/SchemaErrors.js"),f=s("./schema/components/SchemaChangelog.js"),S=s("./api-dev/services/APIPermissionService.js"),E=s("./js/modules/services/AnalyticsService.js"),_=s("./js/components/base/Buttons.js"),R=s("./appsdk/contextbar/ContextBarViewHeader.js");let j=Object(r.observer)(a=class extends o.Component{constructor(e){super(e),this.state={revisions:[],loading:!0,error:!1,isRestoring:!1,restoreEntity:null,changelogsCursor:null,fetchingMoreLogs:!1,noSchema:!1,isOffline:!1},this.handleRestoreSchema=this.handleRestoreSchema.bind(this),this.handleRefresh=this.handleRefresh.bind(this),this.handleRetry=this.handleRetry.bind(this),this.handleFetchChangelog=this.handleFetchChangelog.bind(this),this.handleFetchMoreChangelog=this.handleFetchMoreChangelog.bind(this),this.getRefreshIconText=this.getRefreshIconText.bind(this)}componentDidMount(){this.disposeChangelogReaction=Object(l.reaction)((()=>c.a.get(this.props,"contextData.id")&&c.a.get(this.props,"contextData.versionId")&&!c.a.get(this.props,"contextData.schemaLoading")&&c.a.get(this.props,"contextData.schemaId")&&Object(h.getStore)("SyncStatusStore").isSocketConnected),(e=>{Object(h.getStore)("SyncStatusStore").isSocketConnected||!this.state.loading&&!this.state.error?(c.a.get(this.props,"contextData.schemaId")||this.setState({loading:!1,noSchema:!0,isOffline:!1}),e&&(this.setState({loading:!0,noSchema:!1,error:!1,isOffline:!1}),this.handleFetchChangelog(),E.default.addEventV2({category:"schema",action:"view_changelog",entityId:c.a.get(this.props,"contextData.schemaId")}))):this.setState({loading:!1,isOffline:!0})}),{fireImmediately:!0})}componentWillUnmount(){c.a.isFunction(this.disposeChangelogReaction)&&this.disposeChangelogReaction(),c.a.isFunction(this.disposeSocketReaction)&&this.disposeSocketReaction()}handleFetchChangelog(){const e=c.a.get(this.props,"contextData",{}).schemaId;e?Object(p.fetchChangelog)(e).then((e=>{this.setState({revisions:c.a.get(e,"data"),loading:!1,changelogsCursor:c.a.get(e,"meta.cursor.next")})})).catch((e=>{this.setState({loading:!1,error:!0}),pm.toasts.error(c.a.get(e,"message")||u.ERROR_FETCHING_CHANGELOG)})):pm.toasts.error(u.ERROR_FETCHING_CHANGELOG)}handleFetchMoreChangelog(){const e=this.state.changelogsCursor,t=c.a.get(this.props,"contextData",{}).schemaId;this.setState({fetchingMoreLogs:!0},(()=>{c.a.invoke(this.refs,"changelog.scrollMoreLoaderIntoView")})),Object(p.fetchChangelog)(t,e).then((e=>{this.setState({revisions:[...this.state.revisions,...c.a.get(e,"data")],fetchingMoreLogs:!1,changelogsCursor:c.a.get(e,"meta.cursor.next")})})).catch((e=>{this.setState({fetchingMoreLogs:!1,error:!0}),pm.toasts.error(c.a.get(e,"message")||u.ERROR_FETCHING_CHANGELOG)}))}handleRefresh(){this.setState({loading:!0,error:!1}),this.handleFetchChangelog()}handleRestoreSchema(e=null){if(!Object(h.getStore)("CurrentUserStore").isLoggedIn)return pm.mediator.trigger("showSignInModal",{type:"schema",subtitle:u.NOT_SIGNED_IN_ERROR,origin:"schema_changelog_restore"});if(!Object(h.getStore)("ActiveWorkspaceStore").isMember)return pm.mediator.trigger("openUnjoinedWorkspaceModal");if(E.default.addEventV2({category:"schema",action:"initiate_restore",entityId:c.a.get(this.props,"contextData.schemaId")}),this.setState({isRestoring:!0,restoreEntity:e}),e){const t=c.a.get(this.props,"contextData",{}).schemaId;Object(p.restoreSchema)(t,e).then((()=>{E.default.addEventV2({category:"schema",action:"successful_restore",entityId:t}),this.setState({isRestoring:!1},(()=>{this.handleRefresh()})),pm.toasts.success("您已成功恢复架构.")})).catch((e=>{this.setState({isRestoring:!1,restoreEntity:null}),E.default.addEventV2({category:"schema",action:"fail_restore",entityId:t}),pm.toasts.error(c.a.get(e,"message")||u.SCHEMA_RESTORE_FAILED)}))}}handleExpand(e,t){const s={diff:e,apiName:t};E.default.addEventV2({category:"schema",action:"expand_changelog",entityId:c.a.get(this.props,"contextData.schemaId")}),pm.mediator.trigger("showSchemaChangelogModal",s)}handleRetry(){this.setState({loading:!0,error:!1}),this.handleFetchChangelog()}getRefreshTextClass(){return g()({"schema-changelog-container__refresh-button":!0,"schema-changelog-container__refresh-button__loading":this.state.loading})}getRefreshIconText(){return Object(h.getStore)("SyncStatusStore").isSocketConnected?this.state.loading||this.state.fetchingMoreLogs||c.a.get(this.props,"contextData.schemaLoading")?"请稍等...":this.state.noSchema?"找不到架构":"获取较新的变更日志":u.OFFLINE_ERROR}render(){const e=c.a.get(this.props,"contextData.id"),t=c.a.get(this.props,"contextData.permissions"),s=S.default.hasPermission(t,"updateSchema","api",e);return n.a.createElement(o.Fragment,null,n.a.createElement(R.ContextBarViewHeader,{title:this.props.title,onClose:this.props.onClose},n.a.createElement(_.Button,{className:this.getRefreshTextClass(),tooltip:this.getRefreshIconText(),tooltipImmediate:!0,type:"tertiary",onClick:this.handleRefresh,disabled:this.state.loading||this.state.fetchingMoreLogs||this.state.noSchema||!Object(h.getStore)("SyncStatusStore").isSocketConnected},n.a.createElement(m.Icon,{name:"icon-action-refresh-stroke"}))),n.a.createElement("div",{className:"schema-changelog-container__content"},n.a.createElement(f.default,{ref:"changelog",apiName:c.a.get(this.props,"contextData.name"),changelogsExhausted:!this.state.changelogsCursor,error:this.state.error,fetchingMoreLogs:this.state.fetchingMoreLogs,isRestoring:this.state.isRestoring,isOffline:this.state.isOffline,loading:this.state.loading,noSchema:this.state.noSchema,restoreEntity:this.state.restoreEntity,revisions:this.state.revisions,schemaLoading:c.a.get(this.props,"contextData.schemaLoading"),updateSchemaPermission:s,onExpand:this.handleExpand,onRetry:this.handleRetry,onRestoreSchema:this.handleRestoreSchema,onFetchMoreChangelog:this.handleFetchMoreChangelog})))}})||a}}]);